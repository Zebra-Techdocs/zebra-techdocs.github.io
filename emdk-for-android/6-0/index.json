[{"keywords":"--- title emdk android insert file emdk-for-android/6-0/guide/about/indexmd layout guidehtml redirect_url /emdk-for-android/6-0/guide/about product productversion menu img /emdk-for-android/images/logopng versions versionto 4-2 versionfrom 5-0 default /emdk-for-android/4-2/guide/about label 4-0 /emdk-for-android/4-0/guide/about items home url started /emdk-for-android/6-0/guide/gettingstarted tutorials /emdk-for-android/6-0/tutorial/ samples /emdk-for-android/6-0/samples guides /emdk-for-android/6-0/guide/programming-guides profile manager /emdk-for-android/6-0/guide/profile-manager-guides apis /emdk-for-android/6-0/api icon fa fa-search /emdk-for-android/6-0/search ","summary":"---\ntitle: EMDK For Android\ninsert:\n  file: emdk-for-android/6-0/guide/about/index.md\nlayout: guide.html\nredirect_url: /emdk-for-android/6-0/guide/about\nproduct: EMDK For Android\nproductversion: '6.0'\nmenu:\n  title: EMDK For Android 4.2\n  img: /emdk-for-android/images/logo.png\n  versions:\n    versionto: 4-2\n      versionfrom: 5-0\n      default: /emdk-for-android/4-2/guide/about\n      label: '4.2'\n    versionto: 4-0\n      versionfrom: 5-0\n      default: /emdk-for-android/4-0/guide/about\n      label: '4.0'\n  items:\n    title: Home\n      url: /emdk-for-android/6-0/guide/about\n    title: Getting Started\n      url: /emdk-for-android/6-0/guide/gettingstarted\n    title: Tutorials\n      url: /emdk-for-android/6-0/tutorial/\n    title: Samples\n      url: /emdk-for-android/6-0/samples\n    title: Guides\n      url: /emdk-for-android/6-0/guide/programming-guides\n    title: Profile Manager\n      url: /emdk-for-android/6-0/guide/profile-manager-guides\n    title: APIs\n      url: /emdk-for-android/6-0/api\n    icon: fa fa-search\n      url: /emdk-for-android/6-0/search\n","url":"/emdk-for-android/6-0"},{"title":"About EMDK For Android","keywords":"## overview emdk android developers comprehensive set tools easily create powerful line business applications enterprise mobile computing devices designed google's sdk studio includes class libraries sample source code documentation full advantage offer exclusive profile manager technology ide providing gui based development tool write fewer lines resulting reduced time effort errors requirements software installed prior **windows** * microsoft windows 32-bit 64-bit microsoft&copy java kit jdk v7u45 higher 11x api packages build-tools rev211x **mac os x** yosemite 1010x | el capitan 1011x 2014-10x v7u75 supported work symbol computers running validation mc18 kitkat mc40 mc92 tc55 tc70 tc75 tc8000 443lollipop wt6000 lollipop et50 et55 >note support jelly bean bsp version `terminated` v60 versions v50 continue **emdk v60** added mx v61 threat – feature configure detection rooting apply countermeasure device detected rooted ui disallow network monitored messages/notifications bluetooth enable disable discoverability gprs capability add apn parameters proxy server port wi-fi password protected encryption administrator select type screen lock pattern swipe wireless balance accuracy battery life gps keymapping key mapping rear button grip trigger 2\\ enhanced barcode apis features decoder parameter code128 code39 i2of5 upcean decoders scannerconfigdecoderparams reducedquietzone flag decoding margin barcodes scannerconfigdecoderparamsgs1databarlim securitylevel sets levels decode security gs1 databar lim reader scannerconfigreaderparamsreaderspecificimagerspecific onedquietzonelevel attempt margin-less poorqualitydecodeeffortlevel permits selection enhancement modes poor degraded quality scannerconfigreaderparamsreaderspecific cameraspecific viewfindersize view finder window size camera scanner percentage width height viewfinderoffsetx axis position top left corner viewfinderoffsety scannerconfigreaderparamsreaderspecificlaserspecific adaptivescanning enables disables adaptive scanning beamwidth controls beam laser shortened widened enums scannerconfig describes gs1limitedsecuritylevel level addition datacapture aim timer duration ms timed viewfinder offset character user convert data default encoding values hold pressed aiming session started expires scan visible remain active released decoded release expired remaining equal press starts iso-8859-1 shift_jis utf-8 performance decodeaudiofeedbackuri scannerconfigscannerparams profileconfig access deprecated recommended [name-value pair]/xmlresponseguide/#createnamevaluepair function xml directly modified refer [clock sample]//samples/clock/ information modifying `fixed` toggling hard soft results cancel read exception earlier selecting target compile project result compilation error issue fixed components ### emdk's [profile manager]/profile-manager additional giving built open framework innovative easy critical functions bar transaction processing magnetic stripe msr functionality runtime order application install included installation check [setup guide]/setupdevice instructions future services operating system samples programmer's guide projects part import run [sample guide]///samples/ details reference [programmers guide]//tutorial/ complete walk-through building offers device's capabilities [traditional native apis]/emdk-for-android/6-0/api/barcode [barcode tutorial]//tutorial/tutbasicscanningapi intent [datacapture]/reference/refdatacaptureintent [battery intent]/reference/refbatteryintent previously individual types ","summary":"\nOverview\nThe EMDK for Android provides developers with a comprehensive set of tools to easily create powerful line of business applications for enterprise mobile computing devices and is designed for use with Google's Android SDK and Android Studio.","url":"/emdk-for-android/6-0/guide/about"},{"title":"Barcode Scanning API Programmer's Guide","keywords":"##barcode api emdk barcode applications ability read variety labels scanner devices built-in imager/laser camera bluetooth ring scanners rs507 rs600 pluggable rs4000 ###api barcodemanager primary object enumerate supported access barcodes lists points considered application design app datacapture feature profilemanager apis scanning allowed time emdkmanager > takes precedence released rs6000 disconnected connected back calling method result invalid_object error register connection notifications device programmatically re-initialize disabling cancels pending progress closes session utilize paired enabling automatically launch pairing utility user scan displayed mobile pair ### manager opened release exiting java = barcodemanageremdkmanagergetinstancefeature_typebarcode options **get deviceidentifier enumeration** barcodemanagergetdevicedeviceidentifier identifier target platform call “getdevice” return null barcodemanagergetdevicedeviceidentifierbluetooth_imager_rs6000 scannerinfo barcodemanagergetsupporteddevicesinfo pass received objects barcodemanagergetdevicescannerinfo scninfo list supporteddevlist iterator devicelistiterator whileithasnext { itnext ifscninfogetdeviceidentifier==deviceidentifierbluetooth_imager_rs6000{ barcodemanagergetdevicescninfo break } enabled open hardware scannerenable async exception thrown occurs request successful idle status event registered listener issuing previous recommendation wait ##scanner states diagrams illustrate transition api's ###hardware trigger [img]hardware-triggerpng ###software [img]software-triggerpng ","summary":"\nBarcode API\n\nThe EMDK Barcode API provides applications with an ability to read the\nvariety barcode labels using different scanner devices such as built-in\nimager/laser, built-in camera, Bluetooth ring scanners such as RS507 and\nRS600 and Pluggable ring scanner such as RS4000.","url":"/emdk-for-android/6-0/guide/barcode_scanning_guide"},{"title":"Using the EMDK Samples with Android Studio","keywords":"##loading sample application choose click **see details** button [img]select_a_samplepng **download** select **android studio project** [img]download_a_samplepng extract downloaded project zip file make note extracted sample's path exists system steps open android previous close clicking **close **file** menu window **open existing **quick start** pane browse projectfrom step #3 add **ok** completes setting proect ready deploy ##deploying run configuration drop press green play push device usb start main activity [img]profilewifisample1png ","summary":"\nLoading the Sample Application\n\nChoose a sample and click the See Details button.\n    \nNow click the Download button and select Android Studio Project\n    \nExtract the downloaded project zip file and make note of the extracted sample's path.","url":"/emdk-for-android/6-0/guide/emdksamples_androidstudio"},{"title":"Extended Status Information User Guide","keywords":"##introduction [emdkresults]/emdk-for-android/6-0/api/emdkresults class exposes enum extended_status_code inspecting profile processed provide detailed error information occured ### section emdkconfigxml file “emdkconfigxml fixed changed config profiles activated instance feature type ####special test cases **case 01** xml //xml **parameters** java extradata[0] = clk01date=2014-10-10 extradata[1] clk02time=101010 profilename clockprofile-1 profileflag profile_flagset **results** extendedstatuscode statuscode check_xml xmlstring ####case parameters clockprofile-1/clock/clk01 results namevalue_mismatch_extradata failure feature_not_unique_extradata clk01time=101010 feature_not_unique_config case ","summary":"\nIntroduction \nThe EMDKResults class exposes an Enum ( EXTENDEDSTATUSCODE ). Inspecting that Enum after a profile has been processed could provide detailed error information that may have occured while being processed.","url":"/emdk-for-android/6-0/guide/extended_status"},{"title":"Name Value Pair Functionality Programmer's Guide","keywords":"##introduction [profilemanager]/emdk-for-android/6-0/api/profilemanager api exposes method processprofile install activate static xml profile located projects assets folder overload submit string array name=value pairs replace installing activating guide explains pair replacement utility create ##string extradata name-value ###method signature java processprofilestring profilename profilemanagerprofile_flag profileflag string[] ###profilename argument entire named section pass parm build top level featuretype emdk_name separated forward slashes **[profilename]/[featuretype]/[feature name]** >for called ‘emdksampleprofile-1’ gave clock feature clock1' passing emdksampleprofile-1/clock/clock1’ process part ###featuretype valid featuretypes activityselection barcode msr intent keystroke ip powermgr persistmgr certmgr appmgr accessmgr wi-fi gprsmgr ###profileflag profilemanagerprofile_flagset ###extradata strings element `=` format bc1decoder_upce0=true feature_name multiple features ##example usage //emdkconfigxml //examplejava = string[2] extradata[0] clk01date=2014-10-10 extradata[1] clk02time=101010 clockprofile-1/clock/clk01 emdkresults result mprofilemanagerprocessprofile clockprofile-1 type clk01 referred ##name function ###createnamevaluepair createnamevaluepair profilemanager class creates compatible comsymbolemdkprofilemanagerprocessprofilestring * profile_flag /** @param emdk param_name parameter param_value @return */ createnamevaluepairstring //this returns //for instance clock1date=2014-10-10 ","summary":"\nIntroduction\n\nThe ProfileManager API exposes a method ( processProfile ) that is used\nto install and activate a static XML profile located in your projects Assets folder.","url":"/emdk-for-android/6-0/guide/name_value_pair"},{"title":"Notification API Programmer's Guide","keywords":"##overview document overview design points considered development application reads barcode notifies users leveraging notification api business workflow ##notification **zebra emdk intended notify user remote devices rs6000 pluggable external vibrator** ring scanner annunciators events list includes multi-color leds beeper vibrator applications ability control custom [img]//images/notification-api/image1png multi-colored led location highlighted ###external accessory wt6000 device supports vibration feature meant hearing impaired beeping [img]//images/notification-api/image2png [img]//images/notification-api/image3png ###api notificationmanager primary object enumerate supported access notifications accessories can’t built-in mobile * paired connected enabling result device_not_connected error determine capability minimize confusion setting unsupported features capabilities determined methods enumerated deviceinfo isledsupported isbeepsupported isvibratesupported line sight multiple vibrators chooses sending allowed enable time recommendation disable doesn’t anymore replace previous progress designed handle based requirements disconnected back calling method device_invalid release work re-connected behavior applicable continue disabling cancels pending closes session utilize ### manager **emdkmanager > released feature** java = notificationmanageremdkmanagergetinstancefeature_typenotification options **get notificationdevice deviceidentifier enumeration** notificationmanagergetdevicedeviceidentifier valid identifiers bluetooth_imager_rs6000 “rs6000” external_vibrator1 identifier target platform call “getdevice” return null notificationmanagergetdevicedeviceidentifierbluetooth_imager_rs6000 notificationmanagergetsupporteddevicesinfo pass notifcationmanagergetdevicedeviceinfo supporteddevlist notificationobject iterator devicelistiterator whileithasnext { devinfo itnext ifdevinfogetconnectiontype==bluetooth_ssi&&devinfogetdevicetype==imager{ notificationmanagergetdevicedevinfo break } enabled opens hardware throw exception device_already_enabled emdkmanager notificationdevicenotifynotification send passing throws notificationdevicecancelnotification cancel active **using scanning time** lead overlapping successful decode status avoid confusions end option settings configuration scannerparams decodeledfeedbackmode decodeaudiofeedbackmode connection idle timeout default seconds app datawedge change desirable changing ","summary":"\nOverview\nThis document provides an overview on design points to be considered during the development of an application that reads a barcode and notifies users leveraging the Notification API in a business application workflow.","url":"/emdk-for-android/6-0/guide/notification-api"},{"title":"EMDK Mobile Payment Programmers Guide","keywords":"emdk android developers comprehensive set tools easily create payment application symbol technologies enterprise mobility device pd40-100 ##enabling requirements satisfy calling enable method transactions default discoverable user manually pair pd40 mobile made pressing enter + recommended solution developer scan barcode backside programmatically paired apis object obtained ways identifier enumerate devices info address providing friendly involves bluetooth discovery establishing connection mac quicker clients implement data listener interface register notifications status returned registered call methods successful enabling disable require anymore applications needed ##payment configuration settings configured paymentdevicegetconfig paymentdevicesetconfig enabled getconfig setconfig current parameters global future binaries local configures ###idlemessage idle message displayed idlemessage field paymentconfig ###sleepmodetimeout sleep mode timeout computer remain modify time setting turn turning consume power battery discharge quickly ###getallencypteddata encryption readcarddata return encrypted track2 msr tag “57” emv track1 “5a” getallencrypteddata flag true issuing calls card ###dataencryptiontype returns clear text receive required type supported ### configuring messages promptpin overloaded option pass defined configure ###emv transaction inserted completed removing processing lead failure removecard instruct remove wipes stored end ###promptpin api succeed injected debit key called validates digits account number previously read maskedpan input ###getemvtags information passed d180 tlv predefined getemvtags table tags found tableif isare onemore specific tagids explained **for example** java arraylist emvtagdata = arraylist&ltstring&gt emvtagdataadd5f2a emvtagdataadd5f20 emvtagdataadd82 paymentresults result paymentdevicegetemvtagsemvtagdata **getemvtags table** identifierdescription 9f41transaction sequence counter terminal 9f02amount authorized 9f03amount tip 5f36transaction currency component 9f1bterminal floor limit 9f1cterminal identification 9f35terminal 9f1aterminal country code 5f2atransaction 82application interchange profile capabilities support functions 9f37unpredictable provide variability uniqueness generation cryptogram 9ctransaction 9f10issuer 84dedicated file 9f09application version 9f34cvm cardholder verification 9f07application usage control issuer‘s restrictions geographic services allowed 9f0dissuer action code-default 9f0eissuer – denial 9f0fissuer online 9f33terminal 5f34application pan 9f39pos entry 8ecvm list identifies 5aapplication primary 57track equivalent 5f20 9f0bcardholder extended 9f1ftrack discretionary 9f7avlp process indicator 9f74vlp authorization ###authorizecard authorizes amounts chip form ***tags authorizecard*** c2signature authentication 9btransaction 9f27cryptogram 8aauthorization response 9f26cryptogram icc generate ac command 9f36application maintained incrementing atc managed 9f1issuer ###readcarddata reads length format* * **tags readcarddata** 4fapplication 9f12application preferred 50application label 5f30service 5f20cardholder separator hex d' expiration date yymm service individual systems pad ensure bytes 5f24application expiry 5f25application effective readmodeall fall back swipe fallback modes insert rsa readmodemanual ###completeonlineemv completes pin management completeonlineemv** 91issuer optional issuer host 71/72issuer script 8ahost 89host **behavior displays screen** combination manual shows screen communication error re-enabling immediately disabling** enables disables requests closes socket stack internally seconds free-up resources established happening re-enable overcome wait bluetoothdeviceaction\\_acl\\_disconnected intents paymentmanager notification successfully disconnected ###choosing section describes access trasnaction **case choose name** supportedlist paymentmanagergetsupporteddevicesinfo paymentdevice null ifsupportedlistisempty { paymentmanagergetdevicefriendlynamefalse deviceenable } //error multiple exist list** paireddevlist paymentmanagergetpaireddevicesinfodevicetypepd40 ifpaireddevlistisempty //traverse check exists ifrequired //use // paymentmanagergetdevicefriendly false paymentmanagergetdevicemacaddress selects range switched paymentmanagergetdevicepaireddevlistget1 chooses switched-off give error** paymentmanagergetdevicedeviceidentifier*default* device** paymentmanagergetdevicedeviceidentifierpd40 ** paymentmanagergetdevice“>” address/friendly config** paymentmanagergetdevicedefault interfaceconfig paymentdevicegetinterfaceconfig interfaceconfigdevicename mpos-64627969 paymentdevicesetinterfaceconfiginterfaceconfig #pd40 remote firmware param update manager runs querying firmware/application level updating installing font takes xml performs tasks ##communicating include permission application’s androidmanifestxml write start achieved binding intent ###binding exposes aidl definition language communicate “ipaymentmanageraidl” content package comsymbolpaymentmgr ipaymentmanager string processxmlstring profilexml bind connected processxml perform class details payment_service_packag_name payment_service_class_name comsymbolpaymentmgrpaymentmgrservice **code snippet** bindsvcintent bindsvcintentsetcomponentnew componentnamepayment_service_packag_name bindservicebindsvcintent paymentmgrserviceconnobj contextbind_auto_create paymentmgr public paymentmgrserviceconn implements serviceconnection @override void onserviceconnectedcomponentname ibinder stubasinterfaceservice responsexml processxmlprofilexml onservicedisconnectedcomponentname unbindservicethis// unbind exit ###intent send part starts exited automatically completion payment_service_profile_ex_data_name comsymbolpaymentmgrprofile_xml” payment_service_result_intent_name comsymbolpaymentmgrresult” payment_service_ result_ex_data_name comsymbolpaymentmgrresponse” sending intentsetactionpayment_service_packag_name intentputextrapayment_service_profile_ex_data_name profilexmlstring startserviceintent intentsetcomponentnew intentfilter filter filteraddactionintent_paymnt_service_result appcontextregisterreceiverbroadcastreceiver private final broadcastreceiver onreceivecontext context intentgetactionequalsintent_paymnt_service_result responsestring intentgetstringextrapayment_service_ //… unregisterreceiverbroadcastreceiver //unregister receiver system admin query grouped single referred profiles ###supported parm namedescription deviceaddresslist addresses names separated “|” empty doesn’t considered &ltparm =“deviceaddress” value=“112233445566|mpos-12345667”/&gt isupgradeonlythe values true/false parameter downloading lower versions updated independent applicable name=“isupgradeonly” value=“false”/&gt batterylevelthis queries &ltparm-query name=“batterylevel”&gt name=“batterylevel” value=“3”&gt | queried versionthis format “f&ltversion&gt_a&ltversion&gt” name=“version”&gt name=“version” value=“f109_a120”&gt downloadtypedownload types “firmware” “emvparam” “font” mandatory emvparam name=“downloadtype” value=“firmware”/&gt downloadfilename download path “d180_f&lt&ltversion&gt_a&lt&ltversion&gt&gtbin pd40_f&lt&ltversion&gt_a&lt&ltversion&gt&gtbin “d180_f107_a116bin” emvpara emvpara_&lt&ltn&gt&gt name=“downloadfile” value=“/sdcard/d180_f107_a116bin”/&gt value=“/sdcard/emvpara”/&gt numberofretriesre-tries occurs “1” re-try ms re-tries greater name=“ numberofretries” value=“2”/&gt minpaymentdevicebatterylevelminimum minpaymentdevicebatterylevel” value=“1”/&gt minmobiledevicebatterylevelminimum 30% minmobiledevicebatterylevel” value=“40”/&gt ###profile *wap-provisioningdoc* root node *characteristic* *paymentmgr* *version* “01” attribute reserved parm-query nodes ##profile success case valuein request processed characteristic renamed characteristic-error desc added valid parm-error order filed type=“paymentmgr” version=01 desc=“remote_device_not_paired device|success| remote_device_battery_low low operation performed”> feature ##error codes successsuccess failurefailure undefinedunknown occurred null_pointernull pointer empty_profile_xmlprofile invalid_profile_xmlthe syntax incorrect invalid_valuevalue busyprocessing xml_syntax_errorxml feature_not_supportedthe remote_device_not_pairedbluetooth file_not_existsthe initialization_errorerror initialization uninitialization_errorerror un- invalid_firmware_file_name_formatthe invalid remote_device_in_usethe failed_enable_remote_devicefailed open failed_disable_remote_devicefailed close failed_connect_to_remote_devicefailed establish firmware_downgrade_not_alloweddowngrading isupgradeonly=false remote_device_battery_lowremote performed mobile_device_battery_lowmobile remote_device_disconnectedthe update_file_signature_errorthe signature remote_device_time_out_errorremote timed authentication_failedremote failed authenticate communication_errorerror incomplete_update_filethe incomplete update_file_too_largethe large download_timeoutthe bluetooth_offbluetooth file_verification_failedthe ##use cases sample document lists combinations ###query **input xml** **response case** levels ###updating ###combination samples ###example mgr successes ","summary":"\nThe EMDK for Android provides developers with a comprehensive set of\ntools to easily create Payment application for use with the Symbol\nTechnologies, Inc enterprise mobility device and PD40-100 payment\ndevice.","url":"/emdk-for-android/6-0/guide/payment-api"},{"title":"Personal Shopper Programmer's Guide","keywords":"##introduction emdk android developers set tools easily create personal shopper applications mc18 enterprise mobility device >note feature type added release applicable kk present smart cradle interfaces diagnostic interface supported ##examples code snippets illustrate typical usage **get access emdkmanager class features supported** java = emdkmanagergetemdkmanagergetapplicationcontext **create instance class** personalshopper personalshopperthisemdkmanagergetinstancefeature_typepersonalshopper ifpersonalshopper == null { //this } **for interactions ‘cradle’ member variable object** //enable starting personalshoppercradleenable catch cradleexception eprintstacktrace ##cradleinfo **to fetch information firmware version part number serial hw id etc** try{ cradleinfo personalshoppercradlegetcradleinfo }catchcradleexception e{ ##unlock unlock specific duration led blinks** flashing onduration cradleledflashinfo ledflashinfo cradleledflashinfoonduration offduration smoothenable cradleresults result personalshoppercradleunlockunlockduration ifresult cradleresultssuccess{ // successfully unlocked else{ failure unlocking }catch ##flash leds flash leds** stop flashcount call flashled personalshoppercradleflashledflashcount flashed ##cradle config charge rate** boolean fastchargestate personalshoppercradleconfiggetfastchargingstate iffastchargestate true{ fast enabled disabled fastchargeenable true //true enable false disable personalshoppercradleconfigsetfastchargingstatefastchargeenable location – rowwallcolumn** cradlelocation personalshoppercradleconfiggetlocation iflocation=null{ locationrow locationcolumn locationwall read reading information** personalshoppercradleconfignew cradlelocationwallrowcol personalshoppercradleconfigsetlocationlocation **disable methods** personalshoppercradledisable ##diagnostic ‘diagnostic’ parameters battery state health time empty manufacturing date required charging elapsed days replaced reboot diagnosticparamid diagnosticdata personalshopperdiagnosticgetdiagnosticdatadiagnosticparamidall diagnosticconfigavgcurrentshoppingtrip diagnosticexception ","summary":"\nIntroduction\nThe EMDK for Android provides developers with a set of tools to easily create Personal shopper applications for use with the MC18 enterprise mobility device\n\nNOTE: Personal Shopper feature type added in this release is only applicable for the MC18 personal shopper Android KK device.","url":"/emdk-for-android/6-0/guide/personalshopper"},{"title":"Using Profile Manager","keywords":"profile manager exclusive emdk technology offered ide providing gui based development tool write fewer lines code resulting reduced time effort errors ###accessing inside select open android project note create xml file add selecting added -> bar [img]open-profile-managerpng ###creating click [img]open-new-profile-dialogpng enter identified [img]enter-name-for-profilepng **mx** version [choosing mx version]/mx/choosing-a-version/ guide aid decide [img]select-mx-version-for-profilepng features enable item list clicking arrow button >note > data capture delivery feature input send application barcode intent remove selected left [img]select-profile-featurespng parameters populate hand side dialog parameter description lower corner [img]modify-profile-feature-paramspng complete finish close [img]profile-create-completepng >the generated saved emdkconfigxml projects assets folder ###editing modify edit creating updated ###renaming rename [img]profile-rename-enter-new-namepng [img]profile-renamedpng ###copying copy [img]profile-before-copypng [img]profile-copypng [img]profile-after-copypng ###upgrading provide method downgrade upgrade process reversible advised make upgrading [img]profile-upgrade-select-mx-versionpng [img]profile-upgrade-afterpng ###deleting delete [img]profile-delete-beforepng confirm [img]profile-delete-confirmpng [img]profile-delete-afterpng ##using api profiles bundled access [profile apis]/emdk-for-android/6-0/api/core applied device processed apis ## multiple ways profilemanager methods `processprofile` essentially `extradata` types * **document** handled document **string** raw string **profileconfig** profileconfig class ##creating activating created activated profile_flagset option profileflag set valid extradata argument present internal volatile repository object datacapture java @override public void onopenedemdkmanager emdkmanager { //create config profileconfigobj = //get profilemanageremdkmanagergetinstancefeature_typeprofile emdkresults results profilemanagerprocessprofileprofilename profilemanagerprofile_flagset } ##getting returned store profilemanagerprofile_flagget ##modifying profile_flagget retrieve exists save //enable msr profileconfigobjdatacapturemsrmsr_input_enabled enabled_statetrue //modify modifyresults usage notes started tutorial overview integrate [here]/emdk-for-android/6-0/tutorial/tutdatacaptureprofile detailed understand instance happen manually editing instances required cases certificate initialize install order synchronously clock attempt connect wi-fi network processprofile overload sending content signature // pass form processprofilestring profilename profilemanagerprofile_flag `profilename` `[name profile]` reference entire emdkprofile1 `[profilename]/[featuretype]/[feature friendly parameters]` part called profile1 gave ckest' passing profile1/clock/ckest `[featuretype]` activityselection keystroke ip powermgr persistmgr certmgr appmgr accessmgr gprsmgr structure structured defined change / menu selection options selections `assets` `emdkconfigxml` [img]//images/mxappmanagertutorialimages/emdk_config_file_entriesjpg notice shown passed choose paste warning parm names values presented wizard pay attention fields interest recommended ensure proper formation node match string[] string[1] extradata[0]= + emdkstatus mprofilemanagerprocessprofileemdkprofile1 merged exist appended activity considered setting individual words emdksampleprofile-1/keystroke push specific named portion referenced accomplished fully qualified emdk_name `emdkprofile1` `ck2` making `emdk_name` `emdkprofile1/clock/ck2` mprofilemanagerprocessprofileemdkprofile1/clock/ck2 processprofileis emdkprofile1/clock/ck2 applicable non-datacapture mprofilemanagerprocessprofileemdkprofile1/clock summary scenarios behavior settings profile1/barcode nodes profile1/barcode/bar1 “bar1” profile1/clock xmlclk1 clk2 profile1/clock/clk1 clk1 profile1/clock/clk2 failure ","summary":"\n\nProfile Manager is an exclusive EMDK technology offered within your IDE, providing a GUI based development tool. This allows you to write fewer lines of code resulting in reduced development time, effort and errors.","url":"/emdk-for-android/6-0/guide/profile-manager"},{"title":"EMDK for Android Programming Practices","keywords":"##emdk concurrency guidelines emdkmanager instance provide object singleton feature barcodemanager profilemanager attempt request return initiated simulscanmanager scan&pairmanager objects created simultaneously accessed time * enabled barcode device devices camera android apis enable respective disabled released simulscan app datacapture scanning barcodes -> supports simultaneous usage multiple applications means individual application release background previous versions access restrictions continue apply features instances including exiting ##creating common run zebra non-zebra write capable running care emdk components install result error “installation install\\_failed\\_missing\\_shared\\_library overcome problem manifest file modified shown xml launched classnotfoundexception exception occur implement interfaces mainactivity create separate class emdkapiwrapper related calls activity starts java public extends { private emdkwrapper = null @override protected void oncreatebundle savedinstancestate /* rebranded set technologies*/ motorola solutions */ ifandroidosbuildmanufacturercontainszebra technologies || androidosbuildmanufacturercontainsmotorola } ondestroy //release exit implements emdklistener getemdkmanagerbundle emdkresults results emdkmanagergetemdkmanagergetapplicationcontext resultsstatuscode emdkresultsstatus_codesuccess //failed emdkmanagerrelease onopenedemdkmanager //the manager ready call onclosed closed abruptly free resources current opening closing emdkmanagergetemdkmanager recommended method oncreate avoid delay stage interface emdklisteneronopened callback called main thread block receive scenarios emdklisteneronclosed notify due failures lower layer occurs ###refer code snippets ##checking version mobile kitkat os runtime built-in jelly bean checked manually programmatically ###manual steps goto settings > apps service click icon ###programmatic option packagemanager string emdkpkgname comsymbolemdkemdkservice packageinfo pinfo getpackagemanagergetpackageinfoemdkpkgname emdkversion pinfoversionname catch packagemanagernamenotfoundexception // exists versionmanager api reference ##selecting make declared sdk library compile local_java_libraries comsymbolemdk local_prebuilt_static_java_libraries libemdkcomsymbolemdk/comsymbolemdkjar ## dependency gradlebuild project folder viewer open **buildgradle** **app** module add dependencies section **windows** provided filetreeinclude ['comsymbolemdkjar'] dir c\\\\users\\\\\\\\appdata\\\\local\\\\android\\\\sdk\\\\add-ons\\\\addon-symbol_emdk-symbol-19\\\\libs' filetreeexclude libs' **mac** /users/<your username/library/android/sdk/add-ons/addon-symbol_emdk-symbol-19/libs' rebuild selecting **make project** **build** menu ","summary":"\nEMDK concurrency guidelines\n\nThe EMDKManager instance will always provide only one object (singleton object) of each feature like BarcodeManager, ProfileManager etc.","url":"/emdk-for-android/6-0/guide/programming_practices"},{"title":"Battery Intent API Reference","keywords":"## overview purpose document describe functionality battery intent api interface intended audience android developers requirements knowledge programming familiarity mechanism assumed * versions features symbol devices extra information retrieved standard setting receive consumer data returned application includes provided power precision batteries type mc40 mc92 tc55 tc75 tc70 mc67 mc18 tc8000 wt6000 backup ##battery extras definitions constant format manufacture date mfd string yyyy-mm-dd part number prefix ’21-” “82-” sample 21-xxxxx-01 rev partnumber prefix-5 #s-suffix revision serial match showing physical label serialnumber alpha numbers voltage bkvoltage int units=mv rated capacity ratedcapacity units=mah decommission status battery_decommission 0=battery good 1=decommissioned 2=status unknown cumulative charge zebra charging equipment base_cumulative_charge cycles battery_usage_numb non-zebra total_cumulative_charge seconds passed charger/terminal time seconds_since_first_use units=secs maximum amount pulled present discharge conditions fully charged present_capacity health indicator percentage health_percentage units=% remaining device unusable current time_to_empty considered units=mins time_to_full usable present_charge ### function prototype java mintent_receiver = intent_receiver mintentfilter intentfilter mintentfilteraddactionintentaction_battery_changed registerreceivermintent_receivermintentfilter parameters reference manager [API](https://developer.android.com/reference/android/os/BatteryManager.html). return values addition returns default found [here](https://developer.android.com/reference/android/os/BatteryManager.html), additional **bkvoltage** **mfd** **serialnumber** **partnumber** **ratedcapacity** **battery_decommission** **battery_usage_numb** **health_percentage** **present_capacity** **base_cumulative_charge** **total_cumulative_charge** **present_charge** **time_to_empty** **time_to_full** **seconds_since_first_use** #### public void onreceivecontext context { battery_state_changed_intentequalsintentgetaction intentgetextrasgetintbkvoltage intentgetextrasgetstringmfd intentgetextrasgetstringserialnumber intentgetextrasgetstringpartnumber intentgetextrasgetintratedcapacity cycle intentgetextrasgetintcycle } ","summary":"\nOverview\nThe purpose of this document is to describe the functionality of the Battery Intent API Interface. Its intended audience are Android developers.","url":"/emdk-for-android/6-0/guide/reference/refbatteryintent"},{"title":"Data Capture Intent API Reference","keywords":"## overview purpose document describe functionality data capture api intended audience android developers application programming interface number specific commands control aspects devices requirements knowledge familiarity intent mechanism assumed datawedge read section integrator guide device * versions et1 rev mc40 tc55 features list high-level functions start/stop/toggle soft scan trigger disable/enable scanner plug-in active profile provide scanners make un-associated user created default reset back profile0 switch current profiles datacapture apis collecting formatting outputs scanned required format foreground configured process set captured differently based refer information access broadcasting primary pieces action function perform ### softscantrigger #### description command start stop toggle prototype java = isetactionaction iputextraextra_data parameters string commotorolasolutionsemdkdatawedgeapiaction_softscantrigger extra_data commotorolasolutionsemdkdatawedgeapiextra_parameter `` parameter start_scanning scanning stop_scanning toggle_scanning return values error debug messages logged logging system viewed filtered logcat adb shell view log `$ -s dwapi` invalid actions // define strings extradata create isetactionsoftscantrigger add additional info iputextraextradata send datawedgecontextthissendbroadcasti comments received queued processed immediately attempting sending enable result time complete case delayed sufficiently int triggerdelay delay milliseconds handler handlerpostdelayednew runnable { public void run clarity assume method code startsoftscan } scannerinputplugin enable/disable disabling effectively disables commotorolasolutionsemdkdatawedgeapiaction_scannerinputplugin enable_plugin enables disable_plugin onresume isetactionscannerinputplugin contextthissendbroadcasti let’s activity launches profilea enabled point disable launched profileb switches state >note assumes applications/activities focus automatically paused recommended called enumeratescanners commotorolasolutionsemdkdatawedgeapiaction_enumeratescanners enumerated returned broadcast commotorolasolutionsemdkdatawedgeapiaction_enumeratedscannerlist array $ dwapi enumerate isetactionenumeratescanners contextthissendbroadcasti// receive enumeratedlist key_enumeratedscannerlist datawedgeapi_key_enumeratedscannerlist filter intentintentfilter intentfilter filteraddactionenumeratedlistregisterreceivermybroadcastreceiver filter// receiver private broadcastreceiver mybroadcastreceiver @override onreceivecontext context intentgetaction actionequalsenumeratedlist bundle intentgetextras string[] scanner_list bgetstringarraykey_enumeratedscannerlist setdefaultprofile recap generic edited manipulation settings assignment configuration output applications user-defined disabled associating sends user-created adds security enabling usage scenario launcher apps launch listed selected app auto switching reason override resetdefaultprofile commotorolasolutionsemdkdatawedgeapiaction_setdefaultprofile commotorolasolutionsemdkdatawedgeapiextra_profilename case-sensitive failures found isetactionsetdefaultprofile myprofile effect exist cater ensure continue work consistent explain initially camera barcode browser enters blockbuster previously continues specifies commotorolasolutionsemdkdatawedgeapiaction_resetdefaultprofile isetactionresetdefaultprofile switchtoprofile plug-ins behave consists input configurations includes runsusing single activities/apps acitivty activities activitya requires ean13 barcodes activityb msr card left unassociated profilem accept activate similarily activity/app commotorolasolutionsemdkdatawedgeapiaction_switchtoprofile superonresume isetactionswitchtoprofile one-to-one relationship activated multiple whilst > note assigned application/activity future app/activity automatic backward compatibility datawedge's affected works newprofileid id check currentprofileid deactivate ","summary":"Overview\nThe purpose of this document is to describe the functionality of the Data Capture API. Its intended audience are Android developers. The Data Capture API is an application programming interface which provides a number of specific commands that another application can use to control certain aspects of data capture on Android devices.","url":"/emdk-for-android/6-0/guide/reference/refdatacaptureintent"},{"title":"Using Native Android APIs","keywords":"## overview symbol offers android products built open source platform aosp variants offered tc55 planned future ### standard configuration version operating system incorporates google mobile services api's application consult [https://developer.android.com](https://developer.android.com) details apis access [emdk apis]/emdk-for-android/6-0/api professional incorporate doe rely availability gms work devices variety applications collectively optional api extensions interface independent separate license runs add-on * maps play cloud messaging analytics google+ mail gmail wallet instant buy in-app billing ads drive cast challenges careful made deciding requires security identified specific googleid enterprise data pushed google's servers content read improve relevance advertisements privacy revamped policy early allowing richer user profiling targeted advertising usage acceptance track device's move collect ip addresses location nearby wi-fi info local storage device setting extra manual steps required performed boots time alternatives depending feature alternative choices declaring mapping based solutions mapquest openstreetmap resident alk copilot sygic tele atlas push cross-platform rhoconnect providers parse amazon sns pushwoosh store mdm distribution rhogallery ","summary":"\nOverview\nSymbol offers Android products that are built on Android Open Source Platform (AOSP). Two variants are now being offered on the TC55 and planned for certain future products.","url":"/emdk-for-android/6-0/guide/reference/refnativeandroid"},{"title":"Secure NFC Programmer’s","keywords":"##introduction emdk android developers comprehensive set tools easily create secure nfc application zebra technologies corporation mobility device >note leverage [android APIs](https://developer.android.com/reference/android/nfc/package-summary.html) read standard tags api securely communicate mifaredesfire mifareplus sl3 access module sam >`at time 4k memory contactless security level cards supported 2k supported` ##securenfcmanager usage apis provided class determine type mobile instance object tag detected securenfcmanager inserted sim slot ###android manifest **request access** xml **set minimum androidsdk version** **add uses-feature element shows google play devices hardware** **register intent actions** ###example **determine mifaresam object** java securenfcmgr = emdkmanagergetinstancefeature_typesecurenfc null { samtype securenfcmgrgetavailablesam samtypeequalssamtypemifare mifarsam securenfcmgrgetsaminstance } catch securenfcexception eprintstacktrace mifareplussl3** public void onnewintentintent nfcadapteraction_ndef_discoveredequalsintentgetaction || nfcadapteraction_tag_discoveredequalsintentgetaction nfcadapteraction_tech_discoveredequalsintentgetaction ltag intentgetparcelableextranfcadapterextra_tag tagtechtype tagtype securenfcmgrgettagtechtypeltag tagtypeequalstagtechtypemifare_desfire mmifaredesfire securenfcmgrgettagtechinstancetagtype iftagtypeequalstagtechtypemifare_plus_sl3 mifareplussl3 mmifareplussl3 catchsecurenfcexception ##mifaresam establish connection host authentication information manufacturer id version size compliant protocol uid batch number production datemm/dd/yyyy **host authentication** **mandatory** failing authenticate restrict read/write operations to/from files successful persist rebooted recommended close **establish host** sammode mifaresamconnect samkey samkeykeynum 0x00 samkeykeyver mifaresamauthenticatesamauthkey mifaresamclose ##mifaredesfire * enable applications details month year file settings created key keys stored data from/to record linear cyclic credit/debit integer retrieve ids free ###enabling authenticating desfire performed i/o authenticated enabled disabled lost exception occurred user called main thread blocking operation ###performing perform preceded **samkey** nxp pegoda reader purposes **commit transaction** transaction committed validate previous write access’ backup executing writedata credit debit writerecord resetrecord **abort abort invalidate **reset record** resets empty state preceding read&write required reset call invalidated occur performing calling committransaction lsamkeyforreadwrite lsamkeyforreadwritekeynum 0x05 //samkey lsamkeyforreadwritekeyver mifaredesfireenableltag mifaredesfireselectapplication application_id // valid subsequent disable mifaredesfireauthenticateauthenticatetypenative mifaretagconstantscard_key_for_read_write mifaredesfirecreditcredittypestandardvalue_file_idcommunication_typevaluetobecredited mifaredesfirecommittransaction application** mifaredesfirewriterecordrecord_file_id communicationtype0 record_sizedatatobewritten ##mifareplussl3 sectors block increment/decrement ### **enabling tag** **first **following helps save firstauthentication status card execution method communication **writevalue** converts writing **readvalue** **transfer** transfer contents buffer specific **restore** **increment block** increment lsamkeyforvalue samkey//samkey lsamkeyforvaluekeynum 0x10 lsamkeyforvaluekeyver mifareplussl3firstauthenticationkey_a_value_block mifareplussl3incrementtrue value_block_no mifareplussl3transfertrue int value= mifareplussl3readvaluefalse true mifareplussl3exception **write mifareplussl3writevaluefalse **read lsamkeyfordatablock lsamkeyfordatablockkeynum 0x12 lsamkeyfordatablockkeyver blocks sector mifareplussl3firstauthenticationmifaretagconstantskey_a_data_block mifareplussl3writeblocktrue mifaretagconstantsdata_block_1 datatobewrittengetbytes final **incrementtransfer mifareplussl3incrementtransfertrue ","summary":"\nIntroduction\nThe EMDK for Android provides developers with a comprehensive set of tools to easily create Secure NFC application for use with the Zebra Technologies Corporation mobility device.","url":"/emdk-for-android/6-0/guide/securenfc"},{"title":"EMDK For Android Setup","keywords":"## overview emdk android interface symbol adds scanning magstripe developing enterprise applications devices document guide start working preferred development environment ##configuring order develop studio install java kit ### installing jdk windows [https://www.oracle.com/technetwork/java/javase/downloads/index.html](https://www.oracle.com/technetwork/java/javase/downloads/index.html). download v7u45 newer mac **installing os 2014-10x** https://support.apple.com/kb/dl1572?locale=en_US. javaforosx2014-101dmg 7** https://www.oracle.com/technetwork/java/javase/downloads/index.html. v7u75 – jre sufficient x64 jdk-7u75-macosx-x64dmg ##choosing ###android google's official ide give access latest updates **windows** follow [**guide**]/emdk-for-android/6-0/guide/setupandroidstudio setup **mac** [**guide**]/emdk-for-android/6-0/guide/setupandroidstudiomac manually ","summary":"\nOverview\n\nThe EMDK for Android provides the interface to Symbol value adds such as scanning and magstripe for developing Enterprise applications on Symbol Android devices.","url":"/emdk-for-android/6-0/guide/setup"},{"title":"EMDK For Android Setup (Android Studio)","keywords":"##installing emdk android ###installing studio download install **android studio** [https://developer.android.com/sdk/index.html](https://developer.android.com/sdk/index.html) >note installed computer running andriod installer ### installing run administrator click agree reading license agreement continue installation select custom location clicking browse [img]//images/setup/emdkinstall03png selecting **use radio button shown [img]//images/setup/emdkinstall04png prompted **yes** adb drivers driver complete reboot fully >if decided **no** step **next** **finish** ##uninstalling uninstall **uninstall** application **start menu > programs symbbol vxx** cases program cleanly remove auto-uninstallation fails reinstall directions components follow instructions ###1 removing directory open command prompt type `regedt32` press enter registry editor locate key * 32-bit os `[hkey_local_machine\\software\\microsoft\\windows\\currentversion\\uninstall]` 64-bit `[hkey_local_machine\\software\\wow6432node\\microsoft\\windows\\currentversion \\uninstall]` listed left pane represents scroll identify fig01 fig02 [img]//images/setup/uninstallfig1png [img]//images/setup/uninstallfig2png uninstallstring details path parent uninstallexe resides delete symbol folder subfolders files ###2 short cuts start `c\\programdata\\microsoft\\windows\\start menu\\programs` `symbol vxx` vxx = base version `v30` `emdk v30` lnk file vxxlnk` `v40` v40` ###3 plug-in add-on sdk make close proceeding androidstudiopath root `\\\\\\\\plugins` `comsymbolemdkwizard_xxxjar` `emdk` androidstudiosdkpath `\\\\add-ons` `addon-symbol_emdk-symbol-16` `addon-symbol_emdk-symbol-19` folders ###4 settings `[hkey_local_machine\\software\\wow6432node\\microsoft\\windows\\currentversion\\uninstall]` right-click `are subkeys` updates updatex` updatex update `update1` v30 update1` ","summary":"\nInstalling EMDK for Android \n\nInstalling Android Studio\nDownload and install Android Studio from https://developer.android.com/sdk/index.html\n\nNOTE: Android Studio should be installed on your computer before running the EMDK for Andriod installer.","url":"/emdk-for-android/6-0/guide/setupAndroidStudio"},{"title":"EMDK For Android Setup on Mac (Android Studio)","keywords":"##removing previous emdk installations >note upgrading versions android removed **removing sdk add-ons** navigate /users/[user]/library/android/sdk/add-ons directory remove addon-symbol_emdk-symbol-xx folders wizard core** /users/shared symbol folder plug-in** launch finder applications left side panel locate studioapp click select show package contents contents\\plugins comsymbolemdkwizardintellijidea_31xx ##installing studio https://developer.android.com/sdk/index.html. [img]//images/setup/mac/image3png download mac button accept license agreement dmg file downloaded android-studio-ide-dmg drag drop open follow setup install tools depending security settings attempt warning damaged moved trash error occurs system preferences / &amp privacy padlock icon bottom corner login screen command line access `/users//library/android/sdk/` ##configuring development order develop apps api's platforms build-tools revision 211x newer installed ###how determine apis manager **launch standalone manager** link page check status api platform mark packages on-screen instructions complete restart [img]//images/setup/mac/image4png version [img]//images/setup/mac/image5png ###prerequisites 11x ###download files [emdk files]/emdk-for-android/download extract zip make note path extracted refered **emdk_files** rest guide add-ons “\\sdk\\addon-symbol_emdk-symbol-16/ “addon-symbol_emdk-symbol-19” core components “\\symbol android” plug-in “\\android studio\\ comsymbolemdkwizardintellijidea” device runtime “\\device update\\ emdkosupdateapp_vxxxapk” installing emdkosupdate found [device setup]/emdk-for-android/6-0/guide/setupdevice ###emdk add-on integration add /users/**username**/library/android/sdk/add-ons [img]//images/setup/mac/image6png copy addon **emdk\\_files/sdk/** addon-symbol-emdk\\_vxx_api-16 addon-symbol-emdk\\_vxx_api-19 exit > integrated [img]//images/setup/mac/image8png **configuring os components** [img]//images/setup/mac/image10png **emdk\\_files/symbol android** **integrate studio** [img]//images/setup/mac/image13png [img]//images/setup/mac/image14png comsymbolemdkwizardintellijidea\\_xxxx **emdk\\_files/andoid plugins “emdk” menu bar [img]//images/setup/mac/image16png -> [img]//images/setup/mac/emdk_aboutpng ##uninstalling uninstall perform steps recommended close ide windows proceeding uninstallation deleting `/users/**username**/library/android/sdk/add-ons` delete **symbol andrdoid plugin adb connectivity devices osx successful default vendor id party usb list connected google mobile service gms tc change enter terminal `echo 0x05e0 >> ~/android/adb_usbini` `cd /users//library/android/sdk/platform-tools/` stop running `/adb kill-server` connect verify attached devices` ","summary":"\n\nRemoving previous EMDK installations\nNote: Before upgrading, previous versions of the EMDK for Android should be removed.\n\nRemoving SDK add-ons\nNavigate to the /Users/[user]/Library/Android/sdk/add-ons directory.","url":"/emdk-for-android/6-0/guide/setupAndroidStudioMac"},{"title":"Configuring A Device","keywords":">note devices updated latest emdk android device runtime ## installing deployment utility ###windows connect pc launch start menu program shortcut `device deployment` open command prompt window click key continue process deploy reboot automatically finish os update ###mac substitute current version emdkosupdateapp apk emdkosupdateapp_vxxxapk referenced finder copy adb directory `/users//library/android/sdk/platform-tools/` terminal navigate `cd /users//library/android/sdk/platform-tools/` symbol enter commands restart verify list attached `/adb kill-server` devices` install app emdkosupdateapp_vxxxapk` run shell -n comsymbolemdkosupdater/mainactivity` completes applock manager * option turn turned customer add applications white google mobile service gms enable enterprise-grade features mobility extensions mx download enterprise enabler [https://portal.motorolasolutions.com/Support/US-EN](https://portal.motorolasolutions.com/Support/US-EN) search modify installation behavior application skip higher modified pushing mode configuration `emdkosupdateconfigxml` `/enterprise/usr/` folder internal storage overrides default settings **this required behavior** **example emdkosupdateconfigxml** xml **installmode parm options** determines existing installed `skip` **auto** displays alert box waits user input **overwrite** overwrite **skip** **cancel** exit **removeinstaller removes successful **true** **false** remove supported emdkos v3137 **emdk steps** create push `emdkosupdateapp_[version]apk` succeeds un-installed overridden rebooted fails results `/enterprise/usr/emdkosupdateresultsxml` ","summary":"\nNOTE: Devices will need to be updated with the latest EMDK for Android Device Runtime\n\nInstalling EMDK for Android Device Runtime using Deployment utility\n\nWindows\nConnect the device to PC.","url":"/emdk-for-android/6-0/guide/setupDevice"},{"title":"SimulScan API programmer's guide","keywords":"##introduction simulscan end-to-end data capture solution extracting critical documents differentiating value-add involves capturing fields interest document converting end-user application immediately point transaction customers benefit productivity gain decoding multiple bar codes read single trigger pull automated entry character recognition [ocr] simplified workflow exceptions checked mark [omr] signature presence detection interactively obtain meaningful present barcodes identified decoded strings recognized text images refined pictures based template image entire processed engines extract relevant ##determining device support supported devices tc55 tc75 v18 emdk v31x ###our licensing procedure license [https://softwarelicensing.zebra.com/](https://softwarelicensing.zebra.com/) information process found [here](https://softwarelicensing.motorolasolutions.com/documentation/index.html). copy received xml setup **tc55 devices** settings -> phone legal symbol licenses 242+ bsp click android menu button install navigate copied complete updated reflect fact installed ##getting started ###initialize manager follow [“basic scanning tutorial barcode api”]/emdk-for-android/6-0/tutorial/tutbasicscanningapi set project >note recommended release emdkmanager ondestroy onclose service disconnected unexpectedly ###get simulscanmanager java = emdkmanagergetinstancefeature_typesimulscan called switching datawedge simulscanreader options simulscanmanagergetdevicesimulscandeviceidentifier deviceidentifier api valid simulscandeviceidentifiers internal_camera1 internal camera internal_imager1 imager template_driven defined simulscandeviceidentifier target platform exception thrown call “getdevice” { simulscanmanagergetdevicesimulscandeviceidentifierinternal_camera1 } catch simulscanexception eprintstacktrace simulscanmanagergetsupporteddevicesinfo pass simulscanreaderinfo objects simulscanmanagergetdevicesimulscanreaderinfo list readerinfolist simulscanmanagergetdevicereaderinfolistget0 ###using register status listener object listeners implement simulscandataeventlisterner simulscanstatuseventlisterne interfaces public class simulscantestapp implements simulscanstatuseventlisterner simulscandataeventlisterner{ @override void onsimulscandatasimulscandata form // todo auto-generated method stub onsimulscanstatussimulscanstatusdata m_ selectedsimulscanreaderaddsimulscanstatuslistenerm_ selectedsimulscanreaderaddsimulscandatalistenerm_ **simulscanreaderenable** enables reader hardware make scan basically scanner enabled applications throw disable readers remain locked unavailable selectedsimulscanreaderenable configurations changed simulscanreader’s simulscanconfig templates loaded simulscanmultitemplate config selectedsimulscanreadergetconfig multitemplate simulscanmultitemplateurifromfile/file/path ifmultitemplate null configmultitemplate //optionally configs configenableautocapture true configenableresultconfirmation configprocessingtimeout apply selectedsimulscanreadersetconfigconfig create “template builder graphical tool web https://simulscan.zebra.com/. https://simulscan.zebra.com/Content/Help/WebHelp/index.htm. creating “new simulscanmultitemplate” open created setting start simulscanreaderread request canceled issuing cancelread submitted pending fail check calling isreadpending submitting ifselectedsimulscanreaderisenabled resources override onstop simulscanreaders onstop{ ifselectedsimulscanreaderisreadpending{ selectedsimulscanreadercancelread ifselectedsimulscanreaderisenabled{ selectedsimulscanreaderdisable superonstop ###simulscanconfig detail apis configuration parameters current simulscanreadergetconfig object’s change simulscanreadersetconfigsimulscanconfig enableautocapture captured automatically detected enabledebugmode session write region values storage enablefeedbackaudio turn on/off audio feedback enablehaptic haptic enableled led enableresultconfirmation shows ui confirmation results simulscanview sending back identificationtimeout amount time milliseconds wait timing identification processingtimeout processing ###handling onsimulscanstatus events generate state simulscanstatusdata onsimulscanscanstatus callback statusdata print friendly originated update logvtag + statusdatagetfriendlyname handle switch statusdatagetstate case disabled ondisabled break onenabled idle error logetag statusdataextendedinfo getextendedstatusdescription unknown default simulscanstatusdata’s getfriendlyname generated event getstate simulscanstatus states successfully occurred finished additional extended info parameter plan significant background thread block onsimulscandata successful simulscandata passed routine extracted scanned date timestamp datesimulscandatagettimestamp simulscandataelements simulscandatagetelements simulscandataregions arraylist simulscanelement curelement instanceof simulscanregion logdtag curelementgetname simulscangroup regionsingroup simulscangroupcurelementgetregions curregion regionsingroup{ “group”+ simulscangroupcurelementgetname +” region”+ curregiongetname **simulscandatagettemplate** returns reconstruct original **simulscanelements** returned **simulscandatagetelements** instances **simulscanregion’s getdata** actual ocr omr type getdata depend regiontype shown table regiontypedata ocrstring omrinteger barcodestring picturebyte[] binary ###important considerations due issue framework version orientation fixed preferably androidmanifestxml failing hang ##simulscan `/enterprise/device/settings/datawedge/templates` path accessible file browser latest access programmatically location preferred instance attempting ","summary":"\nIntroduction\nSimulScan is an end-to-end data capture solution for extracting critical data from documents. A differentiating data capture value-add, it involves capturing fields of interest in a given document and converting it into data that an end-user application can use immediately at the point of transaction.","url":"/emdk-for-android/6-0/guide/simulscan_guide"},{"keywords":"datawedge recommended customers øwho scan capture data writing code minimal dynamic control full scanner selection configuration reading receiving decode status emdk barcode apis achieve ","summary":"DataWedge is recommended for the customers:\nØWho wants to scan or capture the data without any writing code\nØWho wants to scan or capture the data with minimal writing of code and minimal dynamic control over the data capture.","url":"/emdk-for-android/6-0/guide/whentochooseemdk"},{"title":"EMDK Profile Manager Programmer's Guide","keywords":"##introduction document overview profile manager instance xml applying profiles interpreting result returned methods response schema developer understand configure device based application specific requirements ##getting profilemanager emdkmanager ways emdkmanagergetinstance emdkmanagergetinstanceasync ###emdkmanagergetinstance synchronous method immediately returns mananger independent underlying components mx framework ready related seconds initialize booted set boot permission error component java public class mainactivity extends activity implements emdklistener //declare variable store object private = null @override protected void oncreatebundle savedinstancestate { superoncreatesavedinstancestate setcontentviewrlayoutactivity_main //the created callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return status creation ifresultsstatuscode == emdkresultsstatus_codesuccess //emdkmanager success }else failed } ondestroy superondestroy //clean objects emdk emdkmanagerrelease onclosed //this issued closes unexpectedly onopenedemdkmanager thisemdkmanager //get process profilemanageremdkmanagergetinstanceemdkmanagerfeature_typeprofile ###emdkmanagergetinstanceasync asynchronous call registered listener manger initialized async recommended complete emdkmanagerstatuslistener{ emdkmanagergetinstanceasyncemdkmanagerfeature_typeprofile mainactivitythis catch emdkexception eprintstacktrace onstatusemdkmanagerstatusdata statusdata emdkbase ifstatusdatagetresult ifstatusdatagetfeaturetype emdkmanagerfeature_typeprofile profilemanageremdkbase //error occurred ##profile creates configuration requirement wizard ide selects configures features settings saved application’s assets folder “emdkconfigxml” sample emdkconfigxml show generated remotescannermgr appmgr * begins node `` andends tag characteristic type named “profileinfo” information version create reserved internal alter info shown nodes number parm include **profilename** identify **modifieddate** modified date **targetsystemversion** target chosen manually altered inform apply user maintenance editing renaming modifying feature attributes specification define emdk\\_name assigned api unique ##applying [profilemanager]/emdk-for-android/6-0/api/core/profilemanager/ exposes processprofile processprofileasync located and/or optional data passed extradata profilemanagerprocessprofile blocking blocks main thread avoid anrs worker profilemanagerprocessprofileasync synchronous/blocking [emdkresults]/emdk-for-android/6-0/api/core/emdkresults/ requested action code snippet shows myprofileactivity profilemanagerdatalistener request //release exit //emdk issues emdkmanagergetinstanceemdkmanagerfeature_typeprofile //register receive profilemanageradddatalistenermyprofileactivitythis processprofileasyncmyprofile1 profilemanagerprofile_flagset string[]null emdkresultsstatus_codeprocessing //applying //failed initiate ondataprofilemanagerresultdata resultdata //processprofileasync resultdatagetresult ifresultstatuscode emdkresultsstatus_codecheck_xml string responsexml resultgetstatusstring //parse applied ###interpreting submitted successfully processed errors processing step determine failure inspect [emdkresultsstatuscode]/emdk-for-android/6-0/api/core/emdkresults/#statuscode field [emdkresultsstatus\\_code]/emdk-for-android/6-0/api/core/emdkresults-status_code/ emdkresultsstatuscode equal status\\_codecheck\\_xml check emdkresultsgetstatusstring status\\_codesuccess detailed obtained emdkresultsextendedstatuscode cases [check\\_xml]/emdk-for-android/6-0/api/core/emdkresults-status_code/ refer ondata determining ###response endswith “status” extended respective description codes parsing interpreted characteristic-error input removed incorrect changed lead parm-error attributed added reasons datacapture setting describes attribute “code” english text values invalid supported automatically picks default datawedge combination non-datacapture statuscode check\\_xml parse interprete “datacapture” case generic ##sample strings ###xml provide feedback entered ensures properly formatted **xml submitted** response** due missing apk perform install doesnot exist path remote bluetooth scanner connected – ##xml unsupported capture succeeds require parser library orgxmlpullv1xmlpullparser xmlpullparser quickly iterate start\\_tag **characteristic-error** element appears **parm-error** import orgxmlpullv1xmlpullparserexception representation instantiate xmlresponse resultsgetstatusstring xmlnewpullparser parsersetinputnew stringreaderxmlresponse finally events searching simply log review add custom handling inside logging sufficient int event parsergeteventtype xmlpullparserend\\_document parsergetname switch xmlpullparserstart\\_tag nameequalsparm-error parmname parsergetattributevaluenull errordescription desc logdtag + nameequalscharacteristic-error errortype break xmlpullparserend\\_tag parsernext exception xmlpullparserexception *//profile sucessfully* ##name-value pair submit array name=value pairs replace installing activating guide explains replacement utility ##string name-value ###method signature processprofilestring profilename profilemanagerprofile_flag profileflag string[] ###profilename argument entire section pass build top level featuretype emdk_name separated forward slashes **[profilename]/[featuretype]/[feature name]** >for called ‘emdksampleprofile-1’ gave clock clock1' passing emdksampleprofile-1/clock/clock1’ part ###featuretype valid featuretypes activityselection barcode msr intent keystroke ip powermgr persistmgr certmgr accessmgr wi-fi gprsmgr ###profileflag ###extradata `=` format bc1decoder_upce0=true feature_name multiple ##example usage //emdkconfigxml //examplejava string[2] extradata[0] clk01date=2014-10-10 extradata[1] clk02time=101010 clockprofile-1/clock/clk01 mprofilemanagerprocessprofile clockprofile-1 clk01 referred ##name function ###createnamevaluepair createnamevaluepair static compatible comsymbolemdkprofilemanagerprocessprofilestring profile_flag /** @param param_name parameter param_value @return */ createnamevaluepairstring //for clock1date=2014-10-10 ","summary":"\n\nIntroduction\n\nThis document provides the overview on getting the profile manager\ninstance, profile XML, applying profiles, interpreting result returned\nby the Profile Manager Methods and the response XML schema for the\ndeveloper to understand and configure the device based their application\nspecific requirements.","url":"/emdk-for-android/6-0/guide/xmlresponseguide"},{"title":"Choosing an MX Version","keywords":"## overview mx management system mxms common interface zebra android device capabilities utilizing xml conforms standard oma-cp prov microsoft msprov schema developers administrators extensible efficient reliable scalable means configuring administrating devices exposes underlying csps provide give user access privileged unprivileged apis combination installed version operating determine ### evaluation steps targeting identify features needed compatibility verify target identifying set services include individual review version's reference documentation feature included * [profile features]/emdk-for-android/6-0/mx specific supported identified consult [device table]/emdk-for-android/6-0/mx/compatibility intend support [check device]/emdk-for-android/6-0/mx/version-on-device ensure running required ","summary":"\nOverview\nThe MX Management System (MXMS) provides a common interface to Zebra Android device capabilities utilizing XML that conforms to the standard OMA-CP PROV (Microsoft MSPROV) schema.","url":"/emdk-for-android/6-0/mx/choosing-a-version"},{"title":"IP Output Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]/emdk-for-android/6-0/guide/profiles/profilebarcode / [msr]/emdk-for-android/6-0/guide/profiles/profilemsr [keystroke]/emdk-for-android/6-0/guide/profiles/profilekeystroke[intent]/emdk-for-android/6-0/guide/profiles/profileintent[ip]/emdk-for-android/6-0/guide/profiles/profileip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically [profilemanager]/emdk-for-android/6-0/api/profilemanager api multiple update [emdk profiles overview]/emdk-for-android/6-0/guide/profile-manager information enabled enables disables remote wedge enable disable default ipwedge protocol select options enter number configuration disabled modification add characters beginning end transfer foreground disabling prevents actual transmitted strings present hex hexadecimal format tab key append character processed ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/6-0/mx/data-capture/IP"},{"title":"Activity Selection Profile Feature Reference","keywords":"## overview creating profile **barcode** **msr** data capture configure activity selector automate process activating deactivating automated management complex applications field emdk identify feature parameter set manage part programmatically [profilemanager]/emdk-for-android/6-0/api/core/profilemanager api multiple types update [emdk profiles overview]/emdk-for-android/6-0/guide/profile-manager information ##activity selection [img]activity-selectionpng ###applications **applications** section configuration screen enter **application name** click **apply** button add application list **applications names** formal package definition comsymbolprofiledatacapturesample1 created project copied case names foresee mind convenience simplify entry restricted activities exist ###activities build active selecting **activity class complete prefixed **comsymbolprofiledatacapturesampe1**mainactivity belong simply check auto prefix box mix manually clicking apply enable selected wildcard** &#42 individually asterisk ","summary":"\nOverview\n\nWhen creating a profile for Barcode or MSR data capture you can configure an Activity Selector to automate the process of activating and deactivating the profile.","url":"/emdk-for-android/6-0/mx/data-capture/activity"},{"title":"Barcode Profile Feature Reference","keywords":"## overview order barcode data application create profile features selected * [keystroke]/emdk-for-android/6-0/guide/profiles/profilekeystroke[intent]/emdk-for-android/6-0/guide/profiles/profileintent[ip]/emdk-for-android/6-0/guide/profiles/profileip output `barcode` feature manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically [profilemanager]/emdk-for-android/6-0/api/profilemanager api multiple update [emdk profiles overview]/emdk-for-android/6-0/guide/profile-manager information enabled enables disables default selection configures scanning device capture auto determines scan module scan/msr installed mc40 2d performed rear-facing decoders disabled performance disable unnecessary commonly shown asterisk supported australian postal aztec canadian chinese codabar* 39* 128* composite ab datamatrix* discrete dutch ean-8* ean-13* gs1 databar* databar expanded* limited han xin japanese korean interleaved matrix maxicode* mail mark micropdf microqr msi pdf417* qr code* signature tlc trioptic uk upc-a* upc-e0* upc-e1 us4state fics uspostnet usplanet webcode upca report check digit character symbol verify integrity preamble characters upc consisting country system options transmitting transmit sys char usa select match upce0 convert enable suppressed decoded upc-a format transmission conversion affected programming selections code128 length1 decode lengths length2 redundancy sets reader read accepting plain flag gs1-128 isbt-128 subtype isbt128 concatenation mode concatenating pairs isbt concat concatenate codes encountered perform single symbols decodes concatenates immediately present number times confirm additional table specification includes lists found concatenated security level offers levels increasing decreasing quality inverse relationship aggressiveness choose setting operate aggressive state providing sufficient decoding in-spec eliminates misdecodes fails eliminate occur advised selecting extreme measure mis-decoding severely spec significantly impairs needed improve reduced quiet zone ignore fnc4 code39 complies algorithm digital include modulo full ascii variant encode code32 italian pharmaceutical industry converting adding 2of5 uss uniform opcc optical product council itf-14 ean13 14-character ean-13 leading valid i2of5 ##gs1 ucc link 1d component transmitted detected linked components discriminate portion transmits postnet planet codabar clsi editing strip start stop insert space tenth requires notis length mandatory verified optional digits scheme algorithms verification mod-11-10 mod mod-10-10 code93 code11 selects ##matrix upce1 allowable variable range specific ean params configuration apply decoder upc/ean higher lower speed fastest diminish prone misdecoding poorly printed impair supplemental2 supplemental5 supplemental supplementals presented ignores supplements smart returns main block belong starts prefixes searches image aggressively failed returned 378-379 auto-discriminate starting 978-979 414-419-434-439 retry count auto-discriminating values inclusive note considered random weight bookland coupon successfully correct modes extend add zeros ean-8 make compatible formats isbn-10 isbn-13 converts work symbologies marginless barcodes beam timer maximum amount time remains ms increments stay indefinitely adaptive enable/disable width narrow normal wide power low optimized high mobile phone display defines finer ds457 ssi triggers presentation triggered linear accurate based flags short long thrice picklist directly cross-hair/reticle + pattern applications view session targeted centered center conjunction static dynamic reticle viewfinder modules unsupported issue error cross-hair aim type trigger continuous timeout suppress interval steps illumination depending ambient light conditions lcd enhances displays cellphones degradation observed aiming crosshair blink delay enter seconds minute minutes brightness user positive poor effort red screen helps id feedback identifies scanned standards defined ringtones fully tones longer truncated tone recommendation test operation deployment customer site volume ringer music media alarms notification audio sound good stored application’s private cache asset avoid access violation meant purpose shared public directories music/ ringtones/ “external storage” haptic vibrate bt disconnect exit bluetooth idle opened disconnected duration inactivity led runs true pairing utility method called engine controls engines refer reference documentation [intent]/emdk-for-android/6-0/guide/profiles/profileintent [keystroke]/emdk-for-android/6-0/guide/profiles/profilekeystroke [ip]/emdk-for-android/6-0/guide/profiles/profileip ","summary":"\nOverview\nIn order to get Barcode data in your application, you must create a profile with two profile features selected:\n\nBarcode\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/6-0/mx/data-capture/barcode"},{"title":"Intent Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]/emdk-for-android/6-0/guide/profiles/profilebarcode / [msr]/emdk-for-android/6-0/guide/profiles/profilemsr [keystroke]/emdk-for-android/6-0/guide/profiles/profilekeystroke[intent]/emdk-for-android/6-0/guide/profiles/profileintent[ip]/emdk-for-android/6-0/guide/profiles/profileip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols core components activities services broadcast receivers activated bundle information object describing desired action acted category component perform pertinent instructions locates respond launches instance needed passes advertise capabilities kinds filters system learn handle manifest &ltintent-filter&gt elements number capability xml configuration java comsymbolemdksamplerecvr androidintentcategorydefault emdk form implicit refer developer web site https://developer.android.com. field identify parameter set manage part programmatically [profilemanager]/emdk-for-android/6-0/api/profilemanager api multiple update [emdk profiles overview]/emdk-for-android/6-0/guide/profile-manager enabled enables disables enter required filter match delivery select method delivered startactivity startservice > note scanning applications user decode *current* activity necessarily displayed case marked ‘singletop’ androidmanifestxml file defined singletop copy disabled modification add characters beginning end transfer foreground disabling prevents actual transmitted strings present default hex hexadecimal format tab key append character processed return related intent's retrieved intentgetstringtextra intentgetserializableextra calls string tags `commotorolasolutionsemdkdatawedgelabel_type` label type `commotorolasolutionsemdkdatawedgedata_string` concatenated codes single tracks `commotorolasolutionsemdkdatawedgedecode_data` returned list byte arrays cases array symbologies support concatenation codabar code128 micropdf decoded stored clients passing index `commotorolasolutionsemdkdatawedgemsr_data` start/end sentinels track separators included configured `commotorolasolutionsemdkdatawedgemsr_track1` `commotorolasolutionsemdkdatawedgemsr_track2` `commotorolasolutionsemdkdatawedgemsr_track3` `commotorolasolutionsemdkdatawedgemsr_track1_status` status integer successful `commotorolasolutionsemdkdatawedgemsr_track2_status` `commotorolasolutionsemdkdatawedgemsr_track3_status` `commotorolasolutionsemdkdatawedgemsr_track1_encrypted` encrypted `commotorolasolutionsemdkdatawedgemsr_track2_encrypted` `commotorolasolutionsemdkdatawedgemsr_track3_encrypted` `commotorolasolutionsemdkdatawedgemsr_track1_hashed` hashed `commotorolasolutionsemdkdatawedgemsr_track2_hashed` `commotorolasolutionsemdkdatawedgemsr_track3_hashed` ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/6-0/mx/data-capture/intent"},{"title":"KeyStroke Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]/emdk-for-android/6-0/guide/profiles/profilebarcode / [msr]/emdk-for-android/6-0/guide/profiles/profilemsr [keystroke]/emdk-for-android/6-0/guide/profiles/profilekeystroke[intent]/emdk-for-android/6-0/guide/profiles/profileintent[ip]/emdk-for-android/6-0/guide/profiles/profileip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically [profilemanager]/emdk-for-android/6-0/api/profilemanager api multiple update [emdk profiles overview]/emdk-for-android/6-0/guide/profile-manager information enabled enables disables action key character decoding special characters embedded disabled default tab \\t processed line feed carriage return configuration modification add beginning end transfer foreground disabling prevents actual transmitted strings present hex hexadecimal format append enter ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/6-0/mx/data-capture/keystroke"},{"title":"MSR Profile Feature Reference","keywords":"## overview order magstripe msr data application create profile features selected * [keystroke]/emdk-for-android/6-0/guide/profiles/profilekeystroke[intent]/emdk-for-android/6-0/guide/profiles/profileintent[ip]/emdk-for-android/6-0/guide/profiles/profileip output `msr` feature manager responsible reading device's integrated mag-stripe reader exists `intent` `keystroke` `ip` define barcode scanner handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols settings reference field emdk identify parameter set manage part programmatically [profilemanager]/emdk-for-android/6-0/api/profilemanager api multiple types update [emdk profiles overview]/emdk-for-android/6-0/guide/profile-manager information enabled enables disables default disabled refer documentation [intent]/emdk-for-android/6-0/guide/profiles/profileintent [keystroke]/emdk-for-android/6-0/guide/profiles/profilekeystroke [ip]/emdk-for-android/6-0/guide/profiles/profileip ","summary":"\nOverview\nIn order to get MagStripe (MSR) data in your application, you must create a profile with two profile features selected:\n\nMSR\nKeystroke,Intent,IP (Output)\n\nThe MSR feature in the Profile Manager is responsible for reading data from the device's integrated mag-stripe reader (if one such exists).","url":"/emdk-for-android/6-0/mx/data-capture/msr"},{"title":"MX Management System Overview","keywords":"## overview mx management system mxms common interface zebra android device capabilities utilizing xml conforms standard oma-cp prov microsoft msprov schema developers administrators extensible efficient reliable scalable means configuring administrating devices exposes underlying csps provide give user access privileged unprivileged apis definitions terms ### board support package bsp method teams deliver operating ships specific version pre-installed suitable model reported build number updated generally downloading newer older website applying os update process open source project aosp google release distribute code royalty-free community oems free modify extend needed subject licensing requirements includes derived directly indirectly bsps include modifications and/or enhancements additional customers mobility extensions umbrella term refer collectively entire experience offered represents offers provided including * core osx value-add features multi-user whitelisting framework mxmf configuration service providers applications settings ui browser email client >**note** components present specifically absent installed included versioned primary determine general rule changed loading subsystem set query subsystems implement functions host built-into added shipped patch applied communicate interchange xmls conform **xmldtd** document **mx mf dtd** provider csp module implements ability clock wi-fi supported exposed defined dsd plug-in ship part downloaded registered calls point time kinds certmgr pre-registered thought collection submit bit accurate entity architecture data flow [img]architecture-overviewpng [img]architecture-bsppng effected updates emdk runtime introduced pre-existing behavior found remove change noted ","summary":"\nOverview\n\nThe MX Management System (MXMS) provides a common interface to Zebra Android device capabilities utilizing XML that conforms to the standard OMA-CP PROV (Microsoft MSPROV) schema.","url":"/emdk-for-android/6-0/mx/overview"},{"title":"How to Check a Device's MX Version","keywords":"## overview version mx device factor determining settings supported ways determine installed * manually ui application code runtime emdk submitting xml csp adb zebra android kitkat visually > note 44+ versions devices open `settings` list applications [img]/mx/mx-version-on-device/settingsjpg select `about phone` [img]/mx/mx-version-on-device/aboutphonejpg `sw components` [img]/mx/mx-version-on-device/softwarejpg inspect `osx` item [img]/mx/mx-version-on-device/osxjpg `442` [img]/mx/mx-version-on-device/osx-highlightedjpg apis run time `versionmanager` api java // instance versionmanager = emdkmanagergetinstanceemdkmanagerfeature_typeversion getversion method passing version_typemx enum mxversion versionmanagergetversionversion_typemx obtained `adb shell command` $ getprop output filtered `grep` considered `rebranded` technologies `rosymbolosxversion` | grep rosymbolosxversion [rosymbolosxversion] [qc_osx_44-3] `44` hypen patch release applied legacy motorola solutions branded `romotoslnenterpriseversion` romotoslnenterpriseversion [romotoslnenterpriseversion] [mx_ti4aj11_351-1] `11` ","summary":"\nOverview\n\nThe version of MX on a device is a factor in determining if certain settings will be supported. There are a few ways that you can determine the version that is installed:\n\nManually using the Settings UI\nFrom application code at runtime using the EMDK\nSubmitting XML using the MX CSP\nUsing ADB\n\n Using the Settings UI \n\nThe version of MX on a Zebra Android KitKat device you can visually look in the Settings UI to determine the MX version installed:\n\n Note: This is only available on KitKat 4.4+ or later versions of Zebra Android devices.","url":"/emdk-for-android/6-0/mx/version-on-device"},{"title":"App Manager","keywords":"##overview emdk android manage applications device actions install application uninstall upgrade set default launcher sample >note work previous versions advised [update runtime]//guide/setupdevice/ loading ##requirements api installed sdk manager attempting load ##loading guide walk setting samples ide * [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using starts [img]2_1png enter path apk file /sdcard/battery applicationapk [img]2_2png >to place connect computer usb medea copy click check status field [img]2_3png ","summary":"\nOverview\n\nThe EMDK for Android allows you to manage applications on the device. \n\nThe available actions are:  \nInstall an application\nUninstall an application\nUpgrade an application  \nSet an application as the default launcher \n\nThis sample application will allow you to install, upgrade, and uninstall an application.","url":"/emdk-for-android/6-0/samples/app-manager"},{"title":"Barcode APIs","keywords":"##overview emdk android handle barcode scanning java [barcode/scanning apis]/emdk-for-android/6-0/api introduced v30 api's work independently [data capture profiles]/emdk-for-android/6-0/mx/data-capture/barcode actions api]/emdk-for-android/6-0/api * set [scanner device]/emdk-for-android/6-0/api/barcode/barcodemanager-deviceidentifier/ [triggertype]/emdk-for-android/6-0/api/barcode/scanner [decoder params]/emdk-for-android/6-0/api/barcode/scannerconfig-decoderparams [reader params]/emdk-for-android/6-0/api/barcode/scannerconfig-readerparams [scan params]/emdk-for-android/6-0/api/barcode/scannerconfig-scanparams scan barcodes based selected features sample application scanner device trigger type decoder >note previous versions advised [update runtime]//guide/setupdevice/ loading ##requirements api installed sdk manager attempting load ##loading guide walk setting samples ide [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using starts [img]barcode_1png serial ssi default [img]//images/samples/barcode_2png hard [img]barcode_3png > note lets device's key soft devic's checkboxes checked params fields [img]barcode_4png click start button status updated [img]//images/samples/barcode_5png press symbol scanned data field ui [img]barcode_6png ","summary":"\nOverview\nThe EMDK for Android is used when you wish to handle all barcode scanning entirely in Java using Barcode/Scanning APIs introduced in EMDK V3.0.","url":"/emdk-for-android/6-0/samples/barcode"},{"title":"Controlling Bluetooth","keywords":"##overview## sample application show enable disable bluetooth radio device >note work previous versions emdk advised [update runtime]//guide/setupdevice/ loading ##requirements android api installed sdk manager attempting load ##loading guide walk setting samples ide * [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using starts [img]wireless1png select click **set** status field update submitting profile [img]wireless2png ","summary":"\nOverview\nThis sample application will show you how to enable or disable the bluetooth radio on a device\n\nNote: Although this sample may work with previous versions of the EMDK, it is advised to update the EMDK runtime on your device before loading this sample.","url":"/emdk-for-android/6-0/samples/bluetooth"},{"title":"Setting The Clock","keywords":"##overview## features emdk android ability set system clock sample application show create custom setting time >note work previous versions advised [update runtime]//guide/setupdevice/ device loading ##requirements api installed sdk manager attempting load ##loading guide walk samples ide * [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using starts [img]3_1png enter [img]3_2png click check status field [img]3_3png ","summary":"\nOverview\nOne of the features of the EMDK for Android is the ability to set the system clock. This sample application will show you how you can create a custom application for setting the system time.","url":"/emdk-for-android/6-0/samples/clock"},{"title":"Data Capture","keywords":"##overview features emdk ability create barcode scanning profiles application modify profile select times barcodes interpreted >note sample work previous versions advised [update runtime]//guide/setupdevice/ device loading ##requirements android api installed sdk manager attempting load ##loading guide walk setting samples ide * [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using loads checkboxes changing options text area data displayed status shown [img]9png types enable click set san selected populate screen [img]newpng ## startup wizard called datacaptureprofile-1 created inspect parameters launching [img]10jpg mainactivity existing categorized based operations activity selection input msr delivery intent keystroke ip introduced mx mobility extension clock app power configuring symbol devices > note field user defined identify feature required editing specific programmatically scope tutorial empty [img]11jpg scanner chosen inspected decoders enabled output disabled [img]12jpg [img]13jpg [img]14jpg starts onopened method executed processed [img]15jpg [img]16jpg successful initialization success application's [img]17png loaded begin notice code128 ean8 upca press scan trigger default activated attempted read listed decode display everyday items home type google print testing [img]18png settings uncheck modified fly profileconfig scanned tap update [img]19png aimer decoded ","summary":"\nOverview\nOne of the features of the EMDK is the ability to create Barcode scanning profiles. This application allows you to modify a Barcode profile to select which times of Barcodes should be interpreted.","url":"/emdk-for-android/6-0/samples/data-capture"},{"title":"GPRS Settings","keywords":"##overview emdk android add remove apns symbol device actions * add/replace named apn existing sample application >note work previous versions advised [update runtime]//guide/setupdevice/ loading ##requirements api installed sdk manager attempting load ##loading guide walk setting samples ide [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using starts [img]gprs_1png select add/remove [img]gprs_2png provide test_apn check checkbox replace exist [img]gprs_3png applicable details access point wapcingular wap@cingulargprcom password cingular1 [img]gprs_4png click apply button status field [img]gprs_5png ","summary":"\nOverview\nThe EMDK for Android allows you to add or remove APNs to a Symbol device. \n\nThe available actions are:\n  \nAdd/Replace named APN  \nRemove existing named APN  \nRemove all existing APNs  \n\nThis sample application will allow you to Add/Replace named APN and remove existing named APN.","url":"/emdk-for-android/6-0/samples/gprs"},{"title":"Notification","keywords":"##overview sample application show emdk notification api's ##requirements android api installed sdk manager attempting load ##loading guide walk setting samples ide * [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ","summary":"\nOverview\nThis sample application will show how to use the EMDK Notification API's\n\nRequirements\nAndroid API 22 must be installed via the SDK Manager before attempting to load this sample.","url":"/emdk-for-android/6-0/samples/notification"},{"title":"Mobile Payment","keywords":"##overview sample demonstrates emdk mobile payment apis allowing application perform emv mag-stripe transactions pd40 device ##prerequisites **items needed** * approved devices listed >note work previous versions advised [update runtime]//guide/setupdevice/ loading ##requirements android api installed sdk manager attempting load ##loading guide walk setting samples ide [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using bluetooth pair module launch initial screen resemble [img]1png press **enable** button message stating connection successful [img]2png **do transaction** display prompting user input **enter** key begin transaction [img]pd40-1png **1** pay cash [img]pd40-2png complete [img]3png ","summary":"\n\nOverview\nThis sample demonstrates the EMDK Mobile Payment APIs allowing your application to perform EMV and Mag-stripe Payment transactions when using the PD40 Payment device.","url":"/emdk-for-android/6-0/samples/payment"},{"title":"Update Payment Device Firmware","keywords":"##overview sample demonstrates update firmware pd40 mobile payment device >note work previous versions emdk advised [update runtime]//guide/setupdevice/ loading ##requirements android api installed sdk manager attempting load ##loading application guide walk setting samples ide * [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##prerequisites **items needed** approved devices listed ##using ###query info bluetooth pair module launch initial screen resemble leave request spinner set **query info** press **run** button [img]1-infopng **select devices** choose previously paired [img]2-infopng check **battery level** **fw version** check-boxes [img]3-infopng **ok** version battery level displayed status area [img]4-infopng ###update **update firmware** [img]1-updatepng [img]2-updatepng teh **browse** select file [img]3-updatepng ","summary":"\n\nOverview\nThis sample demonstrates how to update firmware in the PD40 Mobile Payment device\n\nNote: Although this sample may work with previous versions of the EMDK, it is advised to update the EMDK runtime on your device before loading this sample.","url":"/emdk-for-android/6-0/samples/paymentpd40"},{"title":"Personal Shopper","keywords":"##overview sample application show personal shopper apis interact mc18 cradle programmatically >note work previous versions emdk advised [update runtime]//guide/setupdevice/ device loading ##requirements android api installed sdk manager attempting load ##loading guide walk setting samples ide * [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using seated launch personalshopper starts [img]personalshoppersamplefirstlaunchpng press **fast charge** checkbox enable/disable fast charging [img]personalshoppersamplefastchargepng **cradle info** button retrieve information cradle's firmware version [img]personalshoppersamplecradleinfopng **diagnostic battery capacity [img]personalshoppersamplediagnosticinfopng unlock** unlock crade removed [img]personalshoppersampleunlockcradlepng flash led's** led's times [img]personalshoppersampleflashledpng **smooth effect** smoothing effect notice fade abrupt on/off state change [img]personalshoppersamplesmootheffectpng ","summary":"\nOverview\nThis sample application will show how the Personal Shopper APIs can be used to interact with the MC18 Cradle programmatically.\n\nNote: Although this sample may work with previous versions of the EMDK, it is advised to update the EMDK runtime on your device before loading this sample.","url":"/emdk-for-android/6-0/samples/personal-shopper"},{"title":"Rebooting The Device","keywords":"##overview emdk android control power state symbol device actions sleep mode reboot os update sample application set suspend reset >note work previous versions advised [update runtime]//guide/setupdevice/ loading ##requirements api installed sdk manager attempting load ##loading guide walk setting samples ide * [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using starts [img]1_1png select [img]1_2png click check status field [img]1_3png ","summary":"\nOverview\nThe EMDK for Android allows you to control the power state of a Symbol device. \n\nThe available actions are:  \nDo Nothing  \nSleep Mode  \nReboot  \nOS Update  \n\nThis sample application will allow you to set the power state of \"Suspend\" (sleep mode) or \"Reset\" (reboot).","url":"/emdk-for-android/6-0/samples/power"},{"title":"Scan and Pair","keywords":"##overview sample application show scan pair api bluetooth devices programmatically ##prerequisites android emdk supported device barcode mac address remote pairing withthe running app >note work previous versions advised [update runtime]//guide/setupdevice/ loading ##requirements installed sdk manager attempting load ##loading guide walk setting samples ide * [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using starts leave **always scan** **hard trigger** check boxes selected insure **scandata type** spinner set **mac address** [img]scanandpair1png press **pair** button status label update stating process started prompt user hard trigger [img]scanandpair3png place view window retrieve **bluetooth field initiate connection request dialog complete display paired successfully [img]scanandpair4png ","summary":"\nOverview\nThis sample application will show how the Scan and Pair API can be used to pair two bluetooth devices programmatically.\n\nPrerequisites\n\nFor this sample, you will need two Android Bluetooth devices, one must be an EMDK for Android supported device.","url":"/emdk-for-android/6-0/samples/scanandpair"},{"title":"Secure NFC","keywords":"##overview sample demonstrates emdk secure nfc api's application securely communicate tags mifaredesfire mifareplus sl3 access module sam ##prerequisites **items needed** * approved devices listed provisioned card mifare >note work previous versions advised [update runtime]//guide/setupdevice/ device loading ##requirements android api installed sdk manager attempting load ##loading guide walk setting samples ide [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ","summary":"\n\nOverview\nThis sample demonstrates the EMDK Secure NFC API's which allow your application to securely communicate with the NFC tags such as MifareDesfire, MifarePlus SL3 using the Secure Access Module (SAM)\n\nPrerequisites\n\nItems Needed\nOne of the approved devices listed above\nProvisioned SAM (Secure Access Module) card\nNFC card ( Mifare Plus S )\n\nNote: Although this sample may work with previous versions of the EMDK, it is advised to update the EMDK runtime on your device before loading this sample.","url":"/emdk-for-android/6-0/samples/securenfc"},{"title":"Serial Communication","keywords":"##overview sample demonstrates emdk serial communication api enable support dex application data exchange format collecting audit event vending machines >note order **read** functionality apply patch provided [SPR-28877](https://spr.motorolasolutions.com/ViewSPR.aspx?sprID=28877). obtain contact zebra ##prerequisites **items needed** * approved devices listed tc7x snap cable cbl-tc7x-dex1-01 information setting [emdk setup guide]/emdk-for-android/6-0/guide/setup work previous versions advised [update runtime]//guide/setupdevice/ device loading ##requirements android installed sdk manager attempting load ##loading guide walk samples ide [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using attached starts [img]3png press **write** button display message text edit field number bytes status area [img]2png continue read seconds [img]4png ","summary":"\n\nOverview\nThis sample demonstrates the EMDK Serial Communication API to enable support for DEX in your application. DEX (data exchange) is a format for collecting audit and event data from vending machines.","url":"/emdk-for-android/6-0/samples/serialcomm"},{"title":"Document Capture","keywords":"##overview sample application show simulscan api's capture multiple types data forms boxes ##prerequisites * licensed device template printed copy form create follow generation licensing sections [simulscan api tutorial]/emdk-for-android/6-0/tutorial/tutsimulscanapi >note work previous versions emdk advised [update runtime]//guide/setupdevice/ loading ##requirements android installed sdk manager attempting load ##loading guide walk setting samples ide [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using place sdcard adb push mytemplatexml /sdcard/simulscan/templates/ launch app find templates devices populate set option list select [img]simulscansample1png press read button screen instructions extract fields defined display results view checked displayed review [img]simulscansample2png [img]simulscansample3png accept showing long decode back hardware return main [img]simulscansample4png ","summary":"\n\nOverview\nThis sample application will show how the Simulscan API's can be used to capture multiple types of data from forms, boxes and the like.\n\nPrerequisites\n\nYou will need:\n\nA SimulScan licensed device\nA Simulscan template\nA printed copy of the form used to create the template\n\nFollow the template generation and device licensing sections of the SimulScan API tutorial\n\nNote: Although this sample may work with previous versions of the EMDK, it is advised to update the EMDK runtime on your device before loading this sample.","url":"/emdk-for-android/6-0/samples/simulscan"},{"title":"WiFi Configuration","keywords":"##overview emdk android configure wi-fi symbol device actions * disable enable add network connect disconnect remove > note order perform operations enabled sample application mentioned >note work previous versions advised [update runtime]//guide/setupdevice/ loading ##requirements api installed sdk manager attempting load ##loading guide walk setting samples ide [android studio]/emdk-for-android/6-0/guide/emdksamples_androidstudio ##using starts [img]wifi_1png select operation enable/disable [img]wifi_2png action execute drop-down adddefault open option [img]wifi_3png personal passphrase enterprise required certificate scope provide ssid field test_network [img]wifi_4png click apply button check status [img]wifi_5png ","summary":"\nOverview\nThe EMDK for Android allows you to configure Wi-Fi of a Symbol device. \n\nThe available actions are:\n  \nDisable Wi-Fi  \nEnable Wi-Fi  \nAdd a Network  \nConnect to a Network\nEnable a Network\nDisconnect from a Network\nDisable a Network\nRemove a Network\n\n Note: In order to perform all Wi-Fi network operations, Wi-Fi should be enabled.","url":"/emdk-for-android/6-0/samples/wifi"},{"title":"Adding features to Profile Manager","keywords":"## overview tutorial helps adding features profile manager newly created existing [emdk Android](https://developer.motorolasolutions.com/community/android/emdk) application creation common step tutorials api targeted respective creating select project package explorer click emdk menu present top-bar option window [img]//images/addprofilemanagerfeatureimage/emdk_profile_managerjpg create assign myemdkprofile [img]//images/addprofilemanagerfeatureimage/create_new_profilejpg set editor left hand side [img]//images/addprofilemanagerfeatureimage/profile_editor_43jpg wizard data capture capturing barcode msr mx wireless clock access browser encrypt configuring symbol device based requirements ","summary":"\nOverview\nThis tutorial helps you adding different features using Profile Manager to your newly created or existing Profile for any EMDK for Android application.","url":"/emdk-for-android/6-0/tutorial/tutAddProfileManagerFeature"},{"title":"Advanced Scanning Tutorial using Barcode API","keywords":"## overview guide walk creating emdk android application [barcode/scanning apis]/emdk-for-android/6-0/api introduced perform additional options scanning operations symbol devices profile wizard api [barcode manager]/emdk-for-android/6-0/api/barcode/barcodemanager primary object access barcode feature tutorial explore api]/emdk-for-android/6-0/api/barcode features developing advanced scan barcodes focuses soft trigger button hard device > note barcode/scanning apis configured programmatically code configuring * **device types** supported specific serial ssi scanner camera **[decoder params]/emdk-for-android/6-0/api/barcode/scannerconfig-decoderparams** configure types decoders applications type decoder upca **[reader params]/emdk-for-android/6-0/api/barcode/scannerconfig-readerparams** reader params illumination mode **[scan params]/emdk-for-android/6-0/api/barcode/scannerconfig-scanparams** scanparams class parameters vibration param tone set apply media notification alarm tones silent passing parameter attribute provide list user select including pass project advancedscanningtutorial create studio click [here]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio enabling permissions modify application's manifestxml library permission [img]//images/advancedscanningtutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/advancedscanningtutorialimages/manifest_permissions_addedjpg ##adding start add references libraries java import comsymbolemdkemdkmanager comsymbolemdkemdkmanageremdklistener comsymbolemdkbarcodescandatacollection comsymbolemdkbarcodescannerdatalistener comsymbolemdkbarcodescannerstatuslistener comsymbolemdkbarcodestatusdata extend activity implement emdklistener `statuslistener` notifying client notify events override `onstatus` function `datalistener` data `ondata` finally `oncheckedchangelistener` overriden method `oncheckedchanged` called checks unchecks checkbox checkboxes check uncheck based requirement public mainactivity extends implements statuslistener datalistener oncheckedchangelistener { @override void onclosed // todo auto-generated stub } onopenedemdkmanager arg0 ondatascandatacollection scandatacollection onstatusstatusdata statusdata oncheckedchangedcompoundbutton buttonview boolean ischecked organize imports press ctrl+alt+o cmd+alt+o global variables hold instance objects emdkmanager [barcodemanager]/emdk-for-android/6-0/api/barcode/barcodemanager [scanner]/emdk-for-android/6-0/api/barcode/scanner ui elements [Checkboxes](https://developer.android.com/reference/android/widget/CheckBox.html) starting [TextView](https://developer.android.com/reference/android/widget/TextView.html) display status operation [EditText](https://developer.android.com/reference/android/widget/EditText.html) populate scanned declare variable call setprofile required avoiding exceptions setting store private = null manager barcodemanager app scanbutton text view textview statustextview edit edittext dataview checkboxcode11 checkboxcode39 checkboxcode128 checkboxcodeupca ean checkboxean8 checkboxean13 checkboxilluminationmode decodehapticfeedback checkboxvibrationmode drop selecting spinner deviceselectionspinner streaming beep played scantonespinner array adapter arrays downs arrayadapter spinnerdataadapter devicelist current index selection int scannerindex avoid calling listener isscantonefirsttime till [img]//images/advancedscanningtutorialimages/variables_addedjpg remaining part [img]//images/advancedscanningtutorialimages/variables_added_remainingjpg due divided multiple screen captures design simple fields mentioned [Spinner](https://developer.android.com/guide/topics/ui/controls/spinner.html) bottom [Button](https://developer.android.com/reference/android/widget/Button.html) lots embed [ScrollView](https://developer.android.com/reference/android/widget/ScrollView.html) remove inside res/layout/activity_mainxml layout [img]//images/advancedscanningtutorialimages/ui_layoutjpg `oncreate` reference declared `res/layout/activity_mainxml` order [Activity](https://developer.android.com/reference/android/app/Activity.html). `setontouchlistener` calls spinners getemdkmanager initialized checked ready findviewbyidridtextviewstatus findviewbyidridedittext1 findviewbyidridcheckboxcode11 findviewbyidridcheckboxcode39 findviewbyidridcheckboxcode128 findviewbyidridcheckboxupca findviewbyidridcheckboxean8 findviewbyidridcheckboxean13 findviewbyidridillumination findviewbyidridvibration checkboxcode11setoncheckedchangelistenerthis checkboxcode39setoncheckedchangelistenerthis checkboxcode128setoncheckedchangelistenerthis checkboxcodeupcasetoncheckedchangelistenerthis checkboxean8setoncheckedchangelistenerthis checkboxean13setoncheckedchangelistenerthis checkboxilluminationmodesetoncheckedchangelistenerthis checkboxvibrationmodesetoncheckedchangelistenerthis findviewbyidriddevice_selection_spinner findviewbyidridscan_tone_spinner arrayadapterthis androidrlayoutsimple_spinner_item getresources getstringarrayrarrayscan_tone_array setdropdownviewresourceandroidrlayoutsimple_spinner_dropdown_item scantonespinnersetadapterspinnerdataadapter onclick addscanbuttonlistener item addspinnerscannerdeviceslistener addspinnerscantonelistener created returned callback emdkresults results emdkmanagergetemdkmanager getapplicationcontext return update resultsstatuscode emdkresultsstatus_codesuccess statustextviewsettextemdkmanager request failed complete [img]//images/advancedscanningtutorialimages/on_create_addedjpg errors rid `scan_tone_array` `arraysxml` file `res/values` folder write `` tag error adaraogg antimonyogg xenonogg vegaogg decode-shortwav decodewav [img]//images/advancedscanningtutorialimages/arrays_codejpg listeners `scanner devices` `scan tone` disable `deinitscanner` selected stored `scannerindex` `initializescanner` `setprofile` enabled interface re-initialize properties change simply changing setonitemselectedlistenernew onitemselectedlistener onitemselectedadapterview parent arg1 position long arg3 deinitscanner initializescanner catch scannerexception eprintstacktrace onnothingselectedadapterview scantonespinnersetonitemselectedlistenernew ignore firing time true purpose `isscantonefirsttime` initially [img]//images/advancedscanningtutorialimages/device_and_tone_listenersjpg [img]//images/advancedscanningtutorialimages/device_and_tone_listeners_1jpg `read` presses stop canceling pending asynchronous read `cancelread` releases turn put state turned pressing hardware automatically determined `scannertriggertype` `triggertypesoft_once` beam issuing findviewbyidridbtn_scan touch scans pressed stops released scanbuttonsetontouchlistenernew ontouchlistener ontouchview motionevent event eventgetaction == motioneventaction_down scannertriggertype triggertypesoft_once cancel reads reading scannerisreadpending scannercancelread puts scannerread release motioneventaction_up false [img]//images/advancedscanningtutorialimages/scan_touch_listenerjpg show methods cancels removes disables existing sets `null` scannerremovedatalistenerthis scannerremovestatuslistenerthis scannerdisable block statustextviewsettextstatus + egetmessage [img]//images/advancedscanningtutorialimages/de_init_methodjpg initialize `enable` enables make laser basically throws scannerexceptions `disable` remain locked unavailable case `statustextview` failure message devicelistsize barcodemanagergetdevicedevicelistgetscannerindex settextstatus close restart scanneradddatalistenerthis scanneraddstatuslistenerthis scannerenable [img]//images/advancedscanningtutorialimages/initialize_scanner_methodjpg [scannerconfig]/emdk-for-android/6-0/api/barcode/scannerconfig [decoder params]/emdk-for-android/6-0/api/barcode/scannerconfig-decoderparams [reader params]/emdk-for-android/6-0/api/barcode/scannerconfig-readerparams [scan params]/emdk-for-android/6-0/api/barcode/scannerconfig-scanparams back values `config` applying `scanner` `configdecoderparams` `code11``code39` `readerparamsreaderspecificcameraspecificilluminationmode` [illumination mode]/emdk-for-android/6-0/api/barcode/scannerconfig/#scannerconfigilluminationmode cameraspecific `configscanparamsdecodehapticfeedback` lets [vibration mode]/emdk-for-android/6-0/api/barcode/scannerconfig-scanparams#decodehapticfeedback `configscanparamsdecodeaudiofeedbackuri` accept uri [audio tone]/emdk-for-android/6-0/api/barcode/scannerconfig-scanparams/#decodeaudiofeedbackuri empty `configscanparamsdecodeaudiofeedbackuri ` words scannerconfig config scannergetconfig code11 checkboxcode11ischecked configdecoderparamscode11enabled code39 checkboxcode39ischecked configdecoderparamscode39enabled code128 checkboxcode128ischecked configdecoderparamscode128enabled codeupca checkboxcodeupcaischecked configdecoderparamsupcaenabled ean8 checkboxean8ischecked configdecoderparamsean8enabled ean13 checkboxean13ischecked configdecoderparamsean13enabled internal_camera1 checkboxilluminationmodeischecked && deviceselectionspinnergetselecteditemtostring containscamera configreaderparamsreaderspecificcameraspecificilluminationmode illuminationmodeon illuminationmodeoff checkboxvibrationmodeischecked configscanparamsdecodehapticfeedback configscanparamsaudiostreamtype audiostreamtyperinger string scantone scantonespinnergetselecteditemtostring scantonecontainsnone configscanparamsdecodeaudiofeedbackuri drop-down system/media/audio/notifications/ scannersetconfigconfig starts toastmaketextmainactivitythis appplied toastlength_shortshow statustextviewsettextetostring [img]//images/advancedscanningtutorialimages/set_profile_methodjpg settings runtime implemented earlier [img]//images/advancedscanningtutorialimages/on_checked_change_methodjpg `onopened` [emdkmanager]/emdk-for-android/6-0/api/core/emdkmanager [emdklistener]/emdk-for-android/6-0/api/core/emdkmanager-emdklistener assign `emdkmanager` steps supports default `enumeratescannerdevices` step rename argument `arg0` thisemdkmanager getinstancefeature_typebarcode enumeratescannerdevices [img]//images/advancedscanningtutorialimages/on_opened_methodjpg `getsupporteddevicesinfo` `barcodemanager` returns iterate friendly names friendlynamelist arraylist spinnerindex defaultindex barcodemanagergetsupporteddevicesinfo iterator devicelistiterator ithasnext scannerinfo scninfo itnext friendlynamelistaddscninfogetfriendlyname scninfoisdefaultscanner ++spinnerindex arrayadaptermainactivitythis deviceselectionspinnersetadapterspinnerdataadapter deviceselectionspinnersetselectiondefaultindex [img]//images/advancedscanningtutorialimages/enumerate_scanner_methodjpg received availability process format processed background thread android's [AsyncTask](https://developer.android.com/reference/android/os/AsyncTask.html) asynctask `asyncdataupdate` takes [scandatacollection]/emdk-for-android/6-0/api/barcode/scandatacollection processes `doinbackground` filter label strings passed `onpostexecute` datalength configures updated result asyncdataupdate protected doinbackgroundscandatacollection params[0] statusstr collection scandata scandatacollectiongetresult scannerresultssuccess scandatacollectiongetscandata prepare barcodedate datagetdata labeltype datagetlabeltype concatenate onpostexecutestring datalength++ clear cache dataviewgettextclear dataviewappendresult \\n onpreexecute onprogressupdatevoid overridden `scandatacollection` processing asyncdataupdateexecutescandatacollection [img]//images/advancedscanningtutorialimages/async_data_updatejpg key idle point displaying named `asyncstatusupdate` [statusdata]/emdk-for-android/6-0/api/barcode/statusdata retrieve populated updates asyncstatusupdate doinbackgroundstatusdata scannerstates statusdatagetstate states switch isscanning break waiting disabled statustextviewsettextresult `statusdata` asyncstatusupdateexecutestatusdata [img]//images/advancedscanningtutorialimages/async_status_updatejpg `ondestroy` resources ondestroy superondestroy clean emdkmanagerrelease [img]//images/advancedscanningtutorialimages/on_destroy_methodjpg `onstop` onstop superonstop [img]//images/advancedscanningtutorialimages/on_stop_methodjpg `onclosed` closed abruptly thisemdkmanagerrelease [img]//images/advancedscanningtutorialimages/on_closed_methodjpg coding run running connect latest usb port debug [img]//images/advancedscanningtutorialimages/home_screenpng [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html), working displayed [TextView](https://developer.android.com/reference/android/widget/TextView.html), `scanning` shows tc55 means configuration `none` tone/sound [img]//images/advancedscanningtutorialimages/status_scanningpng configurations [img]//images/advancedscanningtutorialimages/device_listpng [img]//images/advancedscanningtutorialimages/camera_scannerpng success toast applied knowledge [img]//images/advancedscanningtutorialimages/tone_listpng [img]//images/advancedscanningtutorialimages/tone_selectedpng open device's [img]//images/advancedscanningtutorialimages/camera_openedpng [img]//images/advancedscanningtutorialimages/final_scanpng ##important programming tips## `androidmanifestxml` >note >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile profiles ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Barcode/Scanning APIs introduced in EMDK V 3.0, to perform some of the additional options along with Scanning operations on your Symbol Android devices without using Profile Wizard.","url":"/emdk-for-android/6-0/tutorial/tutAdvancedScanningAPI"},{"title":"Apply Mx Profile Silently in a Non-Blocking way","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial discuss apply silently displaying user interface blocking **problem** profiles programmatically configuring feature profile wizard require operation applying configuration takes place ui main thread depending complexity seconds symbol application's blocked interact time period respond showing responding anr message wait **reason** heavy process performed manage components primarily functionalities happen single delay response actions irritate stop **solution** recommended run background completing smoothly interruptions non-blocking methods **1 handler** * [Handler](https://developer.android.com/reference/android/os/Handler.html) send [Message](https://developer.android.com/reference/android/os/Message.html) runnable objects thread's [MessageQueue](https://developer.android.com/reference/android/os/MessageQueue.html). handler instance queue schedule messages runnables executed point future enqueue action multiple repeated tasks downloading images displayed imageviews thumbnails download task created dedicated running care managing top-level activities broadcast receivers windows create threads communicate back **2 asynctask** [AsyncTask](https://developer.android.com/reference/android/os/AsyncTask.html) enables proper easy class operations publish results manipulate and/or handlers asynctask designed helper [Thread](https://developer.android.com/reference/java/lang/Thread.html) constitute generic threading framework asynctasks ideally short long periods highly apis provided `javautilconcurrent` pacakge [Executor](https://developer.android.com/reference/java/util/concurrent/Executor.html), [ThreadPoolExecutor](https://developer.android.com/reference/java/util/concurrent/ThreadPoolExecutor.html) [FutureTask](https://developer.android.com/reference/java/util/concurrent/FutureTask.html). requires solutions configure activity word trigger launch quickly close triggering applied > note closing immediately notifying independent app manager install ###prerequisites apk file [here](https://github.com/Zebra/examples-emdk/archive/AllInstalledApps.zip) downloaded copy sd card information setting [emdk setup guide]/emdk-for-android/6-0/guide/setup/ provide applyprofilesilentlytutorial handleractivity start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific appmanagerprofile make access similar code left hand side editor window residing device's select list arrow [img]//images/applyprofilesilentlytutorialimages/app_manager_featurejpg field modify myappmanager empty drop-down path system /storage/sdcard1/allinstalledappsapk [img]//images/applyprofilesilentlytutorialimages/app_manager_detailsjpg settings [img]//images/applyprofilesilentlytutorialimages/app_manager_profile_createdjpg finish installing [img]//images/applyprofilesilentlytutorialimages/app_profile_createdjpg >note >now emdkconfigxml \\assets folder definition inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/applyprofilesilentlytutorialimages/emdk_config_file_entriesjpg enabling permissions manifestxml library set permission [img]//images/applyprofilesilentlytutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/applyprofilesilentlytutorialimages/manifest_permissions_addedjpg ##adding ###using references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener extend implement emdklistener public mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold profilemanager >verify identical assign private string profilename = declare variable store object null remove line `setcontentviewrlayoutactivity_handler` `oncreate` oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults emdkmanagergetemdkmanagergetapplicationcontext //check return status resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/applyprofilesilentlytutorialimages/on_create_addedjpg `onopened` reference event implemented order pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager getinstanceemdkmanagerfeature_typeprofile manager's final msg mhandlerobtainmessage threadnew msgobj applyprofileprofilename result processing mhandlersendmessagemsg backgroundstart ignore errors calls `applyprofile` applies parameter `msgobj` step `finish` sending triggered closes turn complete onopened [img]//images/applyprofilesilentlytutorialimages/on_opened_methodjpg retrieve type casting `string` `handlemessage` receives populate mhandler handlemessagemessage passed typecasting `string msgobj` display [img]//images/applyprofilesilentlytutorialimages/handler_createdjpg helpful applications proflemanager activate built `processprofile` applyprofile applyprofilestring profilemanagerprocessprofileprofilename profilemanagerprofile_flagset string[] check processprofile emdkresultsstatus_codecheck_xml + successful catch exception exgetmessage [img]//images/applyprofilesilentlytutorialimages/apply_profilejpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/applyprofilesilentlytutorialimages/on_destroy_methodjpg coding starts execution visible small milliseconds closed avoid invisible basically transparent [android Styles](https://developer.android.com/guide/topics/ui/themes.html) `handleractivity` custom style res -> values stylesxml write `` tag @androidcolor/transparent true @null false styles res->values->stylesxml [img]//images/applyprofilesilentlytutorialimages/stylesjpg include `androidmanifestxml` androidtheme=@style/transparent resolve purpose calling **silently** manifest [img]//images/applyprofilesilentlytutorialimages/handler_stylesjpg completes part test thing option **asynctask** asynctaskactivity [AsyncTask](https://developer.android.com/reference/android/os/AsyncTask.html). follow modifydata [img]//images/applyprofilesilentlytutorialimages/async_oncreate_addedjpg named configureprofile `asynctask` extending runs returns completed doinbackgroundstring params string[1] processprfoile flag onpostexecutestring failure based asyntask executes onpreexecute updates onprogressupdateinteger progress `doinbackground` `onpostexecute` [img]//images/applyprofilesilentlytutorialimages/async_task_classjpg execute executing configureprofileexecute [img]//images/applyprofilesilentlytutorialimages/async_on_opened_methodjpg `ondestroy` `onclosed` added [img]//images/applyprofilesilentlytutorialimages/on_closed_destroyed_asyncjpg case `asynctaskactivity` simply [img]//images/applyprofilesilentlytutorialimages/async_stylesjpg ways connect latest runtime usb port debug change lable androidmanifestxml androidlabel=@string/app_name [img]//images/applyprofilesilentlytutorialimages/change_lable_namejpg label grid launcher [img]//images/applyprofilesilentlytutorialimages/handler_manifest_launcherjpg allinstalledapps installed give error [img]//images/applyprofilesilentlytutorialimages/handler_successpng intent-filter [img]//images/applyprofilesilentlytutorialimages/async_manifest_launcherjpg uninstall hang ##important programming tips## required >* deploying fail missing shared datawedge v1712 higher version profilemanagerprocessprofile ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutApplyProfileSilently"},{"title":"Basic Scanning Tutorial using Barcode API","keywords":"## overview guide walk creating emdk android application [barcode/scanning apis]/emdk-for-android/6-0/api introduced perform scanning operations symbol devices profile wizard api [barcode manager]/emdk-for-android/6-0/api/barcode/barcodemanager primary object access barcode feature tutorial explore api]/emdk-for-android/6-0/api developing basic scan barcodes > note barcode/scanning apis configured programmatically code project provide basicscanningtutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio enabling permissions modify application's manifestxml library set permission enable comsymbolemdkpermissionemdk' xml node ##adding add references libraries java import comsymbolemdkemdkmanager comsymbolemdkemdkmanageremdklistener comsymbolemdkbarcodescandatacollection comsymbolemdkbarcodescannerdatalistener comsymbolemdkbarcodescannerstatuslistener comsymbolemdkbarcodestatusdata extend activity implement emdklistener statuslistener notifying client applications notify events override `onstatus` function finally datalistener data `ondata` public class mainactivity extends implements datalistener{ //some lines omitted clarity @override void onclosed { // todo auto-generated method stub } onopenedemdkmanager emdkmanager ondatascandatacollection scandatacollection onstatusstatusdata statusdata create global variables hold instance objects barcodemanager scanner ui elements starting [TextView](https://developer.android.com/reference/android/widget/TextView.html) display status operation [EditText](https://developer.android.com/reference/android/widget/EditText.html) populate scanned declare variable store private = null manager device text view textview statustextview edit edittext dataview design simple remove inside res/layout/activity_mainxml layout press ctrl+shft+f cmd+shft+f indentation oncreate reference declared order [Activity](https://developer.android.com/reference/android/app/Activity.html). call getemdkmanager initialized checked ready findviewbyidridtextviewstatus findviewbyidridedittext1 created returned callback emdkresults results emdkmanagergetemdkmanager getapplicationcontext check return update resultsstatuscode emdkresultsstatus_codesuccess statustextviewsettextemdkmanager request failed write `initializescanner` initialize listeners `enable` enables hardware make turn laser basically enabled throws scannerexceptions `disable` remain locked unavailable `read` starts asynchronous put state turned pressing trigger automatically determined `scannertriggertype` notification registered read canceled issuing `cancelread` submitted pending fail recommended calling `isreadpending` submitting called idle received checking multiple times executed time initializescanner scannerexception == thisemdkmanager getinstancefeature_typebarcode default defined barcodemanagergetdevicedeviceidentifierdefault scanneradddatalistenerthis scanneraddstatuslistenerthis hard mode user manually scannertriggertype triggertypehard scannerenable scannerread `onopened` interface event implemented pass assign `emdkmanager` earlier steps rename argument `arg0` catch eprintstacktrace toast toastmaketextmainactivitythis button toastlength_shortshow mentioned availability process format processed background thread block android's [AsyncTask](https://developer.android.com/reference/android/os/AsyncTask.html) asynctask `asyncdataupdate` takes [scandatacollection]/emdk-for-android/6-0/api/barcode/scandatacollection processes `doinbackground` filter label type strings passed `onpostexecute` int datalength configures updated result asyncdataupdate protected string doinbackgroundscandatacollection params statusstr params[0] collection scandata && scandatacollectiongetresult scannerresultssuccess arraylist getscandata iterate prepare datagetdata labeltype datagetlabeltype concatenate barcodedata + onpostexecutestring datalength++ clear cache scans dataviewgettextclear dataviewappendresult \\n onpreexecute onprogressupdatevoid values overridden passing `scandatacollection` processing asyncdataupdateexecutescandatacollection key returns specific point `statuslistener` displaying named `asyncstatusupdate` [statusdata]/emdk-for-android/6-0/api/barcode/statusdata retrieve populated current updates asyncstatusupdate doinbackgroundstatusdata scannerstates statusdatagetstate states switch case break waiting disabled statustextviewsettextresult `statusdata` asyncstatusupdateexecutestatusdata `ondestroy` release resources ondestroy superondestroy clean emdkmanagerrelease `onstop` disable onstop superonstop releases scannerremovedatalistenerthis scannerremovestatuslistenerthis scannerdisable `onclosed` closed abruptly thisemdkmanagerrelease coding part decoder run running connect latest runtime usb port debug [img]//images/basicscanningtutorialimages/home_screenpng [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html), listener working displayed [TextView](https://developer.android.com/reference/android/widget/TextView.html), `scanning` [img]//images/basicscanningtutorialimages/status_scanningpng `idle` [img]//images/basicscanningtutorialimages/status_idlepng depth advanced ##important programming tips## required androidmanifestxml >note >* include installing deploying missing shared datawedge v1712 higher version test profilemanagerprocessprofile profiles learned understand concentrate ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Barcode/Scanning APIs introduced in EMDK V 3.0, to perform Scanning operations on your Symbol Android devices without using Profile Wizard.","url":"/emdk-for-android/6-0/tutorial/tutBasicScanningAPI"},{"title":"Pairing with Bluetooth Scanning device using Bluetooth Scanner API","keywords":"## overview guide walk creating emdk android application [bluetooth scanner api]/emdk-for-android/6-0/api/barcode introduced perform pairing bluetooth scanning device utility api > note part [barcode initially connected turn app running tc55 turned scan barcode rs507 start process pair tutorial explore developing basic allowing profile wizard configured programmatically code project provide bluetoothscannertutorial studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio enabling permissions modify application's manifestxml library set permission barcodes [img]//images/bluetoothscannertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/bluetoothscannertutorialimages/manifest_permissions_addedjpg ##adding add references libraries java import comsymbolemdkemdkmanager comsymbolemdkbarcodebarcodemanager make activity implement [emdklistener]/emdk-for-android/6-0/api/core/emdkmanager-emdklistener [barcodemanager​scannerconnectionlistener]/emdk-for-android/6-0/api/barcode/barcodemanager-scannerconnectionlistener interface notify client disconnected mobile override `onconnectionchange` method called public class mainactivity extends emdkmanageremdklistener barcodemanagerscannerconnectionlistener { @override void onopenedemdkmanager emdkmanager } onclosed onconnectionchangeconnectionstatus connectionstatus create global variables hold instance objects barcodemanager ui elements [TextView](https://developer.android.com/reference/android/widget/TextView.html) notifying intermediate status operations performed // text view display operation private textview statusview = null declare variable store object manager till [img]//images/bluetoothscannertutorialimages/variables_addedjpg design simple simply remove inside res/layout/activity_mainxml layout [img]//images/bluetoothscannertutorialimages/layout_addedjpg `oncreate` reference declared order [Activity](https://developer.android.com/reference/android/app/Activity.html). call getemdkmanager initialized checked ready findviewbyidridtextviewstatus created returned callback emdkresults results emdkmanagergetemdkmanager getapplicationcontext check return update resultsstatuscode emdkresultsstatus_codesuccess statusviewsettextstatus + request failed complete [img]//images/bluetoothscannertutorialimages/on_create_addedjpg [emdk manager]/emdk-for-android/6-0/api/core/emdkmanager `onopened` `statusview` message [scannerconnectionlistener]/emdk-for-android/6-0/api/barcode/barcodemanager-scannerconnectionlistener connected/disconnected events adding open success thisemdkmanager getinstanceemdkmanagerfeature_typebarcode connection listener receive barcodemanageraddconnectionlistenerthis initialize initscanner [img]//images/bluetoothscannertutorialimages/on_opened_methodjpg error added `initscanner` initializing number supported devices list devicelist getsupporteddevicesinfo iterates checks refering friendly initializes scannerinfo devicelist{ ifscannerinfogetfriendlynameequalsignorecasebluetooth barcodemanagergetdevicescannerinfo iteration support finally scannerenable source == iterate supports ifscanner statusviewsettextbluetooth }else{ catch scannerexception egetmessage [img]//images/bluetoothscannertutorialimages/init_scannerjpg de-initialize named `deinitscanner` sequence * cancel pending read disable release resource eventually `null` deinitialize deinitscanner reads scannercancelread scannerdisable scannerrelease [img]//images/bluetoothscannertutorialimages/de_init_scannerjpg [AsyncTask](https://developer.android.com/reference/android/os/AsyncTask.html) asynchronously updating updates depending result `asyncstatusupdate` asynctask asyncstatusupdate protected string doinbackgroundstring params params[0] onpostexecutestring [img]//images/bluetoothscannertutorialimages/async_status_updatejpg invoked state received returns statusbt connectionstatusgetconnectionstatetostring scannernamebt connectionstatusgetscannerinfo getfriendlyname `connected` invoke `disconnected` mentioned steps scannername device's scannergetscannerinfogetfriendlyname scannernameequalsignorecasescannernamebt asyncstatusupdateexecutestatus based switch connectionstatusgetconnectionstate case break [img]//images/bluetoothscannertutorialimages/on_connection_changejpg resources `onclosed` `scannerconnectionlistener` `emdkmanager` barcodemanagerremoveconnectionlistenerthis emdkmanagerrelease settextstatus closed unexpectedly close restart [img]//images/bluetoothscannertutorialimages/on_closedjpg coding run connect latest runtime usb port debug [img]//images/bluetoothscannertutorialimages/home_screenpng displays [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html) [img]//images/bluetoothscannertutorialimages/enable_bluetoothpng click [img]//images/bluetoothscannertutorialimages/turning_on_bluetoothpng screen scanned [img]//images/bluetoothscannertutorialimages/barcode_screenpng shown [img]//images/bluetoothscannertutorialimages/bluetooth_scanner_connectedpng confirming paired updated lets settings confirmation -> [img]//images/bluetoothscannertutorialimages/devices_pairedpng confirms ##important programming tips## required androidmanifestxml >note >* include installing deploying symbol fail missing shared learned concentrate [scanandpair apis]/emdk-for-android/6-0/api/scanandpair develop demonstrate ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Bluetooth Scanner API introduced in EMDK V 3.1, to perform pairing with Bluetooth Scanning device using Bluetooth Pairing Utility of Bluetooth Scanner API.","url":"/emdk-for-android/6-0/tutorial/tutBluetoothScannerAPI"},{"title":"Creating Project using Android Studio","keywords":"## overview tutorial aid creating android application project studio open previous close clicking **close project** **file** menu select **start **quick start** section [img]//images/creatingprojectandroidstudioimages/fresh_launchjpg wizard assign specific emdk feature company domain click [img]//images/creatingprojectandroidstudioimages/app_namejpg **minimum sdk** supports sdk features requires **next** [img]//images/creatingprojectandroidstudioimages/as_select_min_sdkpng **blank activity** option **add activity mobile** screen [img]//images/creatingprojectandroidstudioimages/as_select_blank_activitypng **finish** created [img]//images/creatingprojectandroidstudioimages/as_new_project_wizard_finishpng >note `\\assets` folder present structure profile manager create needed enable ### set compile completing steps **creating **project structure** window **app** left pane **modules** **emdk apis rev xxx api xx** **compile version drop-down box **ok** button **your ready apis** dependency gradlebuild method make level addon viewer **buildgradle** file module add dependencies **windows** { provided filetreeinclude ['comsymbolemdkjar'] dir c\\\\users\\\\\\\\appdata\\\\local\\\\android\\\\sdk\\\\add-ons\\\\addon-symbol_emdk-symbol-19\\\\libs' filetreeexclude libs' **mac** /users/<your username/library/android/sdk/add-ons/addon-symbol_emdk-symbol-19/libs' rebuild selecting **make **build** ","summary":"Overview\n\nThis tutorial will aid you creating a new Android application project using Android Studio.\n\n Creating The Project\n\nOpen Android Studio.  If you have a previous project open, close the project by clicking Close Project from the File menu.","url":"/emdk-for-android/6-0/tutorial/tutCreateProjectAndroidStudio"},{"title":"Modifying Profiles With ProfileConfig API","keywords":"## overview guide walk creating emdk android application make [profile config]/emdk-for-android/6-0/api/core/profileconfig object modify profile settings programmatically order barcode data [keystroke output]/emdk-for-android/6-0/mx/data-capture/keystroke feature [emdk profiles]/emdk-for-android/6-0/guide/profile-manager project > note provide modifybarcodeprofiletutorial tutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding datacapture click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific manager modifybarcodeprofile access similar code features left hand side editor window select list arrow activityselection selected activities capture enabled automatically activity foreground [img]//images/modify_profile_settings_images/activity_selectionjpg identify datacaptureactivity required editing [img]//images/modify_profile_settings_images/activity_selection_parametersjpg parameters [img]//images/modify_profile_settings_images/activity_selection_parameter_package_namejpg applications package apply [img]//images/modify_profile_settings_images/activity_selection_parameter_activity_namejpg inside [img]//images/modify_profile_settings_images/activity_selection_donejpg [img]//images/modify_profile_settings_images/barcodejpg input section parameter populated [img]//images/modify_profile_settings_images/barcode_profile_editorjpg scanner datainputbarcode enable change [img]//images/modify_profile_settings_images/barcode_select_scanner_typejpg [img]//images/modify_profile_settings_images/barcode_select_decodersjpg keystroke delivery [img]//images/modify_profile_settings_images/keystroke_editorjpg output datadeliverykeystroke [img]//images/modify_profile_settings_images/enable_keystrokejpg [img]//images/modify_profile_settings_images/enable_keystroke_data_formattingjpg finish [img]//images/modify_profile_settings_images/profile_editing_donejpg close emdkconfigxml created \\assets folder file definition profiles create inspect reflecting made gui earlier advised manually updated controlled [img]//images/modify_profile_settings_images/emdk_config_activity_selection_changesjpg [img]//images/modify_profile_settings_images/emdk_config_keystroke_changesjpg enabling permissions application's manifestxml library set permission [img]//images/modify_profile_settings_images/manifest_file_defaultjpg comsymbolemdkpermissionemdk' xml [img]//images/modify_profile_settings_images/manifest_file_updatedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener extend implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager //assign private string profilename = //declare variable store null oncreate call getemdkmanager initialized checked ready creation returned callback emdkresults results emdkmanagergetemdkmanager getapplicationcontext check return status processprofile resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/modify_profile_settings_images/main_activity_declare_profile_namejpg `onopened` reference interface trigger event implemented apis pass assign `emdkmanager` previous steps `profilemanager` rest thisemdkmanager //get process emdkmanagergetinstanceemdkmanagerfeature_typeprofile default `arg0` rename proflemanager install activate built `processprofile` performed action time pressed button chose getinstanceemdkmanagerfeature_typeprofile string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset toastmaketextmainactivitythis initialization toastlength_shortshow onopened [img]//images/modify_profile_settings_images/onopened_methodjpg override ondestroy release resources protected superondestroy clean emdkmanagerrelease [img]//images/modify_profile_settings_images/on_destroy_methodjpg lets values res/values/stringsxml layout files code128 code39 ean8 ean13 upca upce0 update remove res/layout/activity_mainxml checkboxes represent types enable/disable drop-down spinner type device bottom user activity_mainxml [img]//images/modify_profile_settings_images/create_layoutjpg declare ui elements writing mainactivityjava checkbox checkboxcode128 checkboxcode39 checkboxean8 checkboxean13 checkboxupca checkboxupce0 drop displays scanners scannertypespinner updating setbutton current barcodestatusbutton declaration [img]//images/modify_profile_settings_images/declare_ui_elementsjpg declared findviewbyidridcheckboxcode128 findviewbyidridcheckboxcode39 findviewbyidridcheckboxean8 findviewbyidridcheckboxean13 findviewbyidridcheckboxupca findviewbyidridcheckboxupce0 buttons findviewbyidridbtn_set findviewbyidridbtn_barcode findviewbyidridscanner_type_spinner point [img]//images/modify_profile_settings_images/references_of_ui_elementsjpg step scanning devices [Spinner](https://developer.android.com/guide/topics/ui/controls/spinner.html) arraylist strings scan barcodes array adapter item listener respective supported scannertypelist scannertypelistaddauto scannertypelistaddinternal_laser1 scannertypelistaddinternal_imager1 scannertypelistaddinternal_camera1 arrayadapter dataadapter arrayadapterthis androidrlayoutsimple_spinner_item setdropdownviewresourceandroidrlayoutsimple_spinner_dropdown_item scannertypespinnersetadapterdataadapter items setonitemselectedlistenernew onitemselectedlistener onitemselectedadapterview parent view int position long id setdevicetypeparentgetitematpositionposition tostring onnothingselectedadapterview [img]//images/modify_profile_settings_images/drop_down_detailsjpg setdevicetype takes modifies accessing api manager's ways * document handled raw profileconfig preferred option examples present methods work structured properly config modifying profileconfigobj [img]//images/modify_profile_settings_images/profile_config_declarationjpg profile_flagget retrieve exists profile_flagset save notified [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html) exist accepts argument based problemconfig modified selecting sets setdevicetypestring devicetype profilemanagerprofile_flagget emdkresultsstatus_codefailure devicetypeequalsignorecaseauto profileconfigobjdatacapturebarcodescannerselection devicetypesauto devicetypeequalsignorecaseinternal_laser1 devicetypesinternal_laser1 devicetypeequalsignorecaseinternal_camera1 devicetypesinternal_camera1 devicetypesinternal_imager1 [img]//images/modify_profile_settings_images/set_device_type_methodjpg similarly retrieved profile_flagget' profileconfigobjdatacapturebarcodescanner_input_enabled checkbarcodestatus barcodestatusbutton' called complete [img]//images/modify_profile_settings_images/check_barcode_status_method_calljpg display enabled_statefalse barcodestatusbuttonsettextenable barcodestatusbuttonsettextdisable finally [img]//images/modify_profile_settings_images/check_barcode_status_methodjpg settings' concentrate top programatically disable pressing disabled scanned desired press users selection functionalities common perform operations id's listeners setbuttonsetonclicklisteneronclicklistener barcodestatusbuttonsetonclicklisteneronclicklistener makes [img]//images/modify_profile_settings_images/button_on_click_declarationjpg write onclick onclicklistener onclickview viewgetid switch case ridbtn_set updateprofile break ridbtn_barcode setbarcodestatus [img]//images/modify_profile_settings_images/button_on_click_definationjpg >note >we shown toast messages inform explained calling barcodestatusbuttongettexttostring equalsignorecaseenable //barcode enabled_statetrue [img]//images/modify_profile_settings_images/set_barcode_status_methodjpg unchecked vice-versa define updates attributes resultstring checkboxcode128ischecked profileconfigobjdatacapturebarcodedecoderscode128 checkboxcode39ischecked profileconfigobjdatacapturebarcodedecoderscode39 checkboxean8ischecked profileconfigobjdatacapturebarcodedecodersean8 ena13 checkboxean13ischecked profileconfigobjdatacapturebarcodedecodersean13 checkboxupcaischecked profileconfigobjdatacapturebarcodedecodersupca checkboxupce0ischecked profileconfigobjdatacapturebarcodedecodersupce0 successfully toastlength_short show catch exception exgetmessage [img]//images/modify_profile_settings_images/update_profile_methodjpg coding part test running connect latest runtime usb port >make debug run [img]//images/modify_profile_settings_images/initial_screenpng screen [img]//images/modify_profile_settings_images/update_barcode_statuspng choose [img]//images/modify_profile_settings_images/drop_down_for_device_typepng [img]//images/modify_profile_settings_images/update_settingspng edit text field added typs [img]//images/modify_profile_settings_images/scan_datapng ##important programming tips## androidmanifestxml >* include wizard considered auto bt_laser1 bt_imager1 bt_camera1 installing deploying symbol fail missing shared datawedge v1712 higher version profilemanagerprocessprofile ","summary":"\nOverview\nThis guide will walk you through creating an EMDK For Android application that will make use Profile Config object to modify Profile Settings programmatically in order to get barcode data into your application using the KeyStroke output feature of EMDK Profiles.","url":"/emdk-for-android/6-0/tutorial/tutModifyBarcodeProfileSettings"},{"title":"Controlling Application Access using Access Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus controlling access device's applications [access manager]//mx/accessmgr feature configure set allowed run install profile enabled user installed whitelist executed and/or part default operating system disable select single manager supports > note enable refers mode options wizard **1 enable/disable white list** list apps added restrictions disabled **2 add packages package restricted comsymbolemdkmxaccessmanagertutorial multiple separated commas control comsymbolemdkmxaccessmanagertutorialcomsymbolemdkmxclocktutorialcomsymbolmxgprstutorial make executing order lose configuration change behavior reset settings back **3 remove specific names comtestapp1 comtestapp2 comtestapp3 unique identifiers requires refer **4 lots prevents adding manually time consuming **5 menu lets level provide full reduced create demonstrate add/remove to/from observe difference changed enabled/disabled programmatically mxaccessmanagertutorial studio click [here]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature accessmanagerprofile similar code left hand side editor window arrow [img]//images/mxaccessmanagertutorialimages/access_manager_featurejpg mentioned earlier drop showing operation programatically modes show modify wizrad myaccessmgryou field empty [img]//images/mxaccessmanagertutorialimages/access_mgr_detailsjpg apply provided setting display [img]//images/mxaccessmanagertutorialimages/access_profile_appliedjpg finish created rest [img]//images/mxaccessmanagertutorialimages/access_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui advised updated controlled [img]//images/mxaccessmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions application's manifestxml library permission [img]//images/mxaccessmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxaccessmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxaccessmanagertutorialimages/on_create_addedjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxaccessmanagertutorialimages/on_destroy_methodjpg `onopened` reference interface trigger event implemented apis pass `emdkmanager` previous steps `profilemanager` rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed action pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed `check_xml` parse response details applied message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). processing simply displaying ahead check types scope sample `handleemdkresult` handle step emdkresult handleemdkresultresults complete [img]//images/mxaccessmanagertutorialimages/on_opened_methodjpg shows declared `parsexml` eventually `displayresults` output [dialog](https://developer.android.com/reference/android/app/AlertDialog.html), declaring coming extracting parsing handleemdkresultemdkresults statusxmlresponse resultsgetstatusstring pull parser xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace displayresults [img]//images/mxaccessmanagertutorialimages/handle_emdk_resultjpg respective methods [xml Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxaccessmanagertutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed * match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxaccessmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxaccessmanagertutorialimages/display_resultsjpg moment annoying repetitively interfaces drop-down spinner edit text radio group relative layout adapter holds lists downs integers position item clicked drop-downs spinners entire view relativelayout whitelistlayout boolean with/without false true iswhitelistactive settingsaccessspinner deleting deletepackagespinner comma removed edittext deletepackageedittext addpackagespinner addpackageedittext array arrays arrayadapter dataadapter holding buttons option radiogroup selected settingsspinnerposition delete deletepackagespinnerposition addpackagespinnerposition setbutton [img]//images/mxaccessmanagertutorialimages/global_variablesjpg required texts enter enables finally >remove inside res/layout/activity_mainxml ui selections adapters held res/values values [img]//images/mxaccessmanagertutorialimages/right_click_valuejpg screen shot clicking [img]//images/mxaccessmanagertutorialimages/right_click_value_android_studiojpg [img]//images/mxaccessmanagertutorialimages/new_xml_filejpg arraysxml `` packagess elements listeners `oncreate` findviewbyidridbuttonset listener setbuttonsetonclicklisteneronclicklistsner findviewbyidridwhitelist_layout findviewbyidridradiogroupaccess radiogroupsetoncheckedchangelisteneroncheckedchangelistener findviewbyidridet_delete_package findviewbyidridet_add_package findviewbyidridsettings_access_spinner findviewbyidriddelete_package_spinner findviewbyidridadd_package_spinner arrayadapterthis androidrlayoutsimple_spinner_item getresources getstringarrayrarraysystem_settings_array setdropdownviewresourceandroidrlayoutsimple_spinner_dropdown_item settingsaccessspinnersetadapterdataadapter getstringarrayrarraydelete_packages_array deletepackagespinnersetadapterdataadapter getstringarrayrarrayadd_packages_array addpackagespinnersetadapterdataadapter common settingsaccessspinnersetonitemselectedlisteneronitemselectedlistener deletepackagespinnersetonitemselectedlisteneronitemselectedlistener addpackagespinnersetonitemselectedlisteneronitemselectedlistener completed read detailed comments significance attribute [img]//images/mxaccessmanagertutorialimages/complete_on_createjpg point `oncheckedchangelistener` disbaled hidden oncheckedchangelistener oncheckedchangedradiogroup checkedid ridradio_without_whitelist clear deletepackageedittextsettext addpackageedittextsettext hide whitelistlayoutsetvisibilityviewgone ridradio_with_whitelist whitelistlayoutsetvisibilityviewvisible importing compound widget [img]//images/mxaccessmanagertutorialimages/on_checked_change_listenerjpg `onitemselectedlistener` actions onitemselectedlistener onitemselectedadapterview parent long spinnerid parentgetid ridsettings_access_spinner ++position riddelete_package_spinner show/hide selection deletepackageedittextsetvisibilityviewvisible deletepackageedittextsetvisibilityviewgone ridadd_package_spinner addpackageedittextsetvisibilityviewvisible addpackageedittextsetvisibilityviewgone onnothingselectedadapterview arg0 [img]//images/mxaccessmanagertutorialimages/on_item_slected_listenerjpg `onclicklistener` `modifyaccessmanagerprofilexml` forms users sets onclicklistener onclicklistsner onclickview viewgetid ridbuttonset modifyaccessmanagerprofilexml modifyaccessmanagerprofilexmliswhitelistactive [img]//images/mxaccessmanagertutorialimages/on_click_listenerjpg prepares input calls understand integres attributes add/delete integer forming passed modifyaccessmanagerprofilexmlboolean prepare existing modifydata[0] stored -> deleted clock [img]//images/mxaccessmanagertutorialimages/modify_profile_methodjpg coding test running connect latest runtime usb port debug [img]//images/mxaccessmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) app configured means visible [img]//images/mxaccessmanagertutorialimages/with_whitelistpng [img]//images/mxaccessmanagertutorialimages/add_package_spinnerpng [img]//images/mxaccessmanagertutorialimages/add_package_edit_textpng comsymbolmxaccessmanagertutorial comallinstalledapps comsymbolmxgprstutorial [img]//images/mxaccessmanagertutorialimages/add_packagespng current press [img]//images/mxaccessmanagertutorialimages/whitelist_modepng developed comment ensure works fine highlighted snapshot [img]//images/mxaccessmanagertutorialimages/commented_codejpg uncomment verifying [img]//images/mxaccessmanagertutorialimages/delete_packagepng previously symbol ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version profilemanagerprocessprofile learned concentrate certificate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxAccessManager"},{"title":"Application Management with AppManger Profile Feature","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial configuring managing applications [appmanager]//mx/appmgr feature profiles user app management operations * **install** install provided apk file location **uninstall** remove **upgrade** upgrade/downgrade exists receive error parameter **default launcher** provide launcher enable reside **enable disable application** package disabling ability launch **clear list** clear list recent apps opened **manage protected manage adding removing info** info dialog shows detailed information actions force stop enable/disable data cache application's > note refer compatibility matrix check availability symbol devices [here]//mx/appmgr emdkmxappmanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio appmanager profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific manager mxappmanagerprofile make access similar code left hand side editor window select arrow installing uninstalling upgrading mentioned beginning [img]//images/mxappmanagertutorialimages/select_app_manager_featurejpg order modify programmatically providing path field /storage/sdcard1/heraldapk action fields [img]//images/mxappmanagertutorialimages/app_manager_install_valuejpg apply finish [img]//images/mxappmanagertutorialimages/app_manager_profile_createdjpg close >note >now emdkconfigxml created \\assets folder definition create inspect reflecting made parameters gui earlier advised manually updated controlled entry sd card entered creation [img]//images/mxappmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions manifestxml library set permission [img]//images/mxappmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxappmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors //assign private string profilename = //declare store object null parm-error sub-feature errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/mxappmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented apis pass assign `emdkmanager` previous steps `profilemanager` rest thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result wizard [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` declare parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxappmanagertutorialimages/on_opened_method_1jpg [img]//images/mxappmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxappmanagertutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxappmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxappmanagertutorialimages/display_resultsjpg override ondestroy release resources superondestroy //clean emdkmanagerrelease [img]//images/mxappmanagertutorialimages/on_destroy_methodjpg running coding run connect latest runtime usb port herald present >make debug displays toast [img]//images/mxappmanagertutorialimages/app_runpng installed [img]//images/mxappmanagertutorialimages/app_installedpng similarly leverage uninstall upgrade default setting [img]//images/mxappmanagertutorialimages/other_app_manager_featuresjpg ##important programming tips## required androidmanifestxml >* include deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned configure concentrate power explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxAppManager"},{"title":"Configure Device Browser using Browser Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring browser symbol [browser manager]//mx/browsermgr feature manager set default home page opened configure save form data turning on/off profile wizard create youtubecom turn remember typed forms > note provide browsermanagertutorial requires kitkat start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific browserprofile make access similar code left hand side editor window select list arrow [img]//images/mxbrowsermanagertutorialimages/browser_featurejpg field mybrowsermanager identify required editing programmatically empty discussed `youtubecom` `default page` url youtube `https://www.youtube.com` front `set longer type drop-down option [img]//images/mxbrowsermanagertutorialimages/browser_manager_detailsjpg [img]//images/mxbrowsermanagertutorialimages/browser_manager_details_selectedjpg **apply** apply settings provided **finish** [img]//images/mxbrowsermanagertutorialimages/browsermanagerstep5png **close** >note file **emdkconfigxml** created **\\assets** folder definition profiles inspect reflects made advised manually modified [img]//images/mxbrowsermanagertutorialimages/browsermanagerstep7png ##enabling permissions modify application's **androidmanifestxml** library enable comsymbolemdkpermissionemdk' xml androidmanifestxml resemble [img]//images/mxbrowsermanagertutorialimages/modifymanifestpng ##adding references libraries java import androidappactivity androidappalertdialog androidcontentdialoginterface androidosbundle androidtexttextutils androidutilxml androidviewmenu androidviewmenuitem comsymbolemdkemdkmanager comsymbolemdkemdkresults comsymbolemdkprofilemanager orgxmlpullv1xmlpullparser orgxmlpullv1xmlpullparserexception comsymbolemdkemdkmanageremdklistener javaiostringreader extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying description case errors >verify identical assign emdkconfigxml private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxbrowsermanagertutorialimages/variables_addedjpg [img]//images/mxbrowsermanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built earlier `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parameters parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxbrowsermanagertutorialimages/on_opened_method_1jpg [img]//images/mxbrowsermanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception content shown specifically `buildfailuremessage` formed * match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow added **displayresults** messages override ondestroy release resources protected superondestroy //clean emdkmanagerrelease coding configuration part browsers homepage disable saving run running connect latest runtime usb port debuging enabled development envroment pressing play icon apk tray [img]//images/mxbrowsermanagertutorialimages/runapp1png [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) **ok** exit launch devices browser's **youtubecom** [img]//images/mxbrowsermanagertutorialimages/runapp2png ##important programming tips## >* include permission installing deploying fail missing shared ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxBrowserManager"},{"title":"Administer Use of Camera using Camera Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus managing cameras symbol devices [camera manager]//mx/cameramgr feature basically control front-camera rear-camera create disable enable back > note provide cameramanagertutorial requires kitkat start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding camera manager profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific cameraprofile make access similar code left hand side editor window select list arrow [img]//images/mxcameramanagertutorialimages/camera_featurejpg field mycameramanager identify required editing programmatically empty manage fields wizard configure drop-down option [img]//images/mxcameramanagertutorialimages/camera_manager_detailsjpg [img]//images/mxcameramanagertutorialimages/camera_manager_details_selectedjpg apply settings provided [img]//images/mxcameramanagertutorialimages/camera_profile_createdjpg finish configuring created [img]//images/mxcameramanagertutorialimages/camera_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxcameramanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library set permission [img]//images/mxcameramanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxcameramanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxcameramanagertutorialimages/variables_addedjpg [img]//images/mxcameramanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxcameramanagertutorialimages/on_opened_method_1jpg [img]//images/mxcameramanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxcameramanagertutorialimages/parse_xml_1jpg [img]//images/mxcameramanagertutorialimages/parse_xml_2jpg form content shown specifically `buildfailuremessage` formed * match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxcameramanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxcameramanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxcameramanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug enabled accessible initially default [img]//images/mxcameramanagertutorialimages/camera_enabledpng [img]//images/mxcameramanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) disabled [img]//images/mxcameramanagertutorialimages/camera_disabledpng edit [img]//images/mxcameramanagertutorialimages/edit_camera_profilejpg [img]//images/mxcameramanagertutorialimages/enable_camera_wizardjpg enable/disable ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned applications understand concentrate power key explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxCameraManager"},{"title":"Set the Roaming State using Cellular Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring roaming state symbol turn on/off data [cellular manager]//mx/cellularmgr feature create > note provide cellularmanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding cellular manager profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific cellularprofile make access similar code left hand side editor window select list arrow [img]//images/mxcellularmanagertutorialimages/cellular_featurejpg field mycellularmanager identify required editing programmatically empty configure background devices apps services work connected wi-fi discussed wizard set drop-down option [img]//images/mxcellularmanagertutorialimages/cellular_manager_detailsjpg [img]//images/mxcellularmanagertutorialimages/cellular_manager_details_selectedjpg apply settings provided [img]//images/mxcellularmanagertutorialimages/cellular_profile_createdjpg finish created [img]//images/mxcellularmanagertutorialimages/cellular_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxcellularmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library permission [img]//images/mxcellularmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxcellularmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxcellularmanagertutorialimages/variables_addedjpg [img]//images/mxcellularmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxcellularmanagertutorialimages/on_opened_method_1jpg [img]//images/mxcellularmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxcellularmanagertutorialimages/parse_xml_1jpg [img]//images/mxcellularmanagertutorialimages/parse_xml_2jpg form content shown specifically `buildfailuremessage` formed * match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxcellularmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxcellularmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxcellularmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug turned device's -> mobile networks unchecked [img]//images/mxcellularmanagertutorialimages/data_roaming_offpng [img]//images/mxcellularmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) [img]//images/mxcellularmanagertutorialimages/data_roaming_onpng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned applications understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxCellularManager"},{"title":"Install CA Certificate using Certificate Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus installing certificates symbol [certificate manager]//mx/certmgr installed digital identify variety purposes including vpn wi-fi network access authentication servers apps email chrome create install sample ca certificate wificonfig configure profile eap-tls adding >note >we types pem pfx p12 file > note provide certmanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio manager feature click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific certificateprofile make similar code left hand side editor window select list arrow [img]//images/mxcertmanagertutorialimages/certificate_keystorejpg uninstalling keystore exist means initialize replacing previously existing choose action separate include multiple times field mykeystore required editing programmatically empty drop-down option [img]//images/mxcertmanagertutorialimages/initialize_android_keystorejpg password [img]//images/mxcertmanagertutorialimages/keystore_passwordjpg mentioned [img]//images/mxcertmanagertutorialimages/certificate_featurejpg mycertificatemanager discussed execute steps proceed * wizard [img]//images/mxcertmanagertutorialimages/install_certjpg >to uninstall alias refer performing actions test-certificate type [img]//images/mxcertmanagertutorialimages/cert_typejpg sd card path put beginning /storage/sdcard1/testpem vary based rest fields [img]//images/mxcertmanagertutorialimages/cert_manager_wizardjpg apply settings provided [img]//images/mxcertmanagertutorialimages/certificate_profile_createdjpg added finish initializing created [img]//images/mxcertmanagertutorialimages/certificate_manager_profile_createdjpg close >now emdkconfigxml \\assets folder definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxcertmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library set permission enable comsymbolemdkpermissionemdk' xml [img]//images/mxcertmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation declaration [img]//images/mxcertmanagertutorialimages/variables_addedjpg oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxcertmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous `profilemanager` rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclickdialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check scope retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxcertmanagertutorialimages/on_opened_method_1jpg [img]//images/mxcertmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxcertmanagertutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxcertmanagertutorialimages/build_failure_messagejpg `success` `failure` mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok alertdialogbuildercreate alertdialogshow [img]//images/mxcertmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxcertmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug recommended key cleared -> security clear credentials [img]//images/mxcertmanagertutorialimages/clear_credentialspng disabled [img]//images/mxcertmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) verify executing navigate press [img]//images/mxcertmanagertutorialimages/add_networkpng tap 8021x eap [img]//images/mxcertmanagertutorialimages/security_optionpng scroll tls [img]//images/mxcertmanagertutorialimages/tlspng [img]//images/mxcertmanagertutorialimages/ca_certificate_installedpng listed config selecting [img]//images/mxcertmanagertutorialimages/uninstall_certificatejpg ##important programming tips## androidmanifestxml >* deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxCertificateManager"},{"title":"Setting The Clock With ProfileManager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial configure device's date time [mx clock]//mx/clock feature profile manager expects attributes user set clock symbol * **timezone** timezone supported format **date** utc **time** **autotime** select network provided > note provide emdkmxclocktutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific mxclockprofile make access similar code left hand side editor window list arrow parameter populated [img]//images/mxclocktutorialimages/clock_feature_parametersjpg enter timings means pst gmt automatically change local autotime lets unchecked [img]//images/mxclocktutorialimages/clock_parameters_valuesjpg foreample **name** mxclock gmt-0700 2014-12-22 1pm 8pm hour apply finish [img]//images/mxclocktutorialimages/clock_profile_createdjpg close >note >now emdkconfigxml created \\assets folder file definition profiles create inspect reflecting made parameters gui earlier advised manually updated controlled entry entered creation [img]//images/mxclocktutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library permission [img]//images/mxclocktutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxclocktutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical //assign private string profilename = //declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/mxclocktutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass assign `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result wizard [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` declare parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxclocktutorialimages/on_opened_method_1jpg [img]//images/mxclocktutorialimages/on_opened_method_2jpg methods reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxclocktutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxclocktutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessagedevice title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxclocktutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxclocktutorialimages/on_destroy_methodjpg running coding run connect latest runtime usb port >make debug [img]//images/mxclocktutorialimages/date_time_before_runningpng app changed [img]//images/mxclocktutorialimages/time_after_running_apppng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) notice notification bar [img]//images/mxclocktutorialimages/date_timepng ##important programming tips## required androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned configuring concentrate explore ","summary":"Overview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxClock"},{"title":"Set Default Launcher Application Using App Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus functions app manager user set launcher default enable **1 profile wizard** initially configure ehs home screen wizard [enterprise (EHS)](https://developer.motorolasolutions.com/docs/DOC-1875) replacement symbol devices designed applications launched replace existing **2 api** modify setting code applicable [galaxy Launcher](https://www.appsapk.com/galaxy-launcher/) understand parameters downloading required discussed download install ([EHS](https://developer.motorolasolutions.com/docs/DOC-1875) Launcher](https://www.appsapk.com/galaxy-launcher/)). * [here](https://portal.motorolasolutions.com/Support/US-EN/Resolution?solutionId=92627&redirectForm=search&searchQuery=%3FsearchType%3Dsimple%26searchTerm%3DDownload%20EHS). unzip file apk galaxy [here](https://www.appsapk.com/galaxy-launcher/). downloaded put sd card requires *package name* package field case theses files sources >note >android provide names installed [created application](https://github.com/Zebra/examples-emdk/archive/AllInstalledApps.zip) finds programmatically displays list [download](https://github.com/Zebra/examples-emdk/archive/AllInstalledApps.zip) [source](https://github.com/Zebra/examples-emdk/archive/AllInstalledApps.zip) liking find **commotorolasolutionsenterprisehomescreen** [img]//images/mxdefaultlaunchertutorialimages/ehs_appjpg **comepiclaunchertw** [img]//images/mxdefaultlaunchertutorialimages/galaxy_launcher_appjpg > note mxdefaultlaunchertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding appmanager click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific feature defaultlauncherprofile make access similar left hand side editor window select arrow operations apps installing uninstalling upgrading concentrating parameter populated [img]//images/mxdefaultlaunchertutorialimages/select_app_manager_featurejpg drop-down action supported [img]//images/mxdefaultlaunchertutorialimages/app_manager_featuresjpg [img]//images/mxdefaultlaunchertutorialimages/feature_default_launcherjpg empty earlier previously found commotorolasolutionsenterprisehomescreen fields [img]//images/mxdefaultlaunchertutorialimages/app_manager_install_valuejpg apply finish [img]//images/mxdefaultlaunchertutorialimages/app_manager_profile_createdjpg close >now emdkconfigxml created \\assets folder definition profiles create inspect reflecting made gui advised manually updated controlled entry entered creation [img]//images/mxdefaultlaunchertutorialimages/emdk_config_file_entriesjpg enabling permissions application's manifestxml library permission [img]//images/mxdefaultlaunchertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxdefaultlaunchertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description errors >verify identical //assign private string profilename = //declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/mxdefaultlaunchertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass assign `emdkmanager` previous steps `profilemanager` rest >set argument thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` `handleemdkresult` handle step emdkresult handleemdkresultresults onopened [img]//images/mxdefaultlaunchertutorialimages/on_opened_methodjpg shows declared `parsexml` eventually `displayresults` output [dialog](https://developer.android.com/reference/android/app/AlertDialog.html), declaring coming extracting parsing handleemdkresultemdkresults statusxmlresponse resultsgetstatusstring pull parser xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace displayresults [img]//images/mxdefaultlaunchertutorialimages/handle_emdk_resultjpg respective methods lets [xml Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception complete [img]//images/mxdefaultlaunchertutorialimages/parse_xmljpg declare form content shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxdefaultlaunchertutorialimages/build_failure_messagejpg [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html) [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) textutilsisemptyerrordescription toastmaketextmainactivitythis changed toastlength_shortshow mainactivitythis title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxdefaultlaunchertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxdefaultlaunchertutorialimages/on_destroy_methodjpg settings point mototrola run remove textview inside res/layout/activity_mainxml edittext enter layout activity_mainxml res/layout/ [img]//images/mxdefaultlaunchertutorialimages/activity_mainjpg main ui elements edit text ro packagenameedittext setdefaultlauncherbutton [img]//images/mxdefaultlaunchertutorialimages/ui_element_referencejpg `oncreate` findviewbyidridpackage_name findviewbyidridbtn_set_default_launcher [img]//images/mxdefaultlaunchertutorialimages/reference_on_createjpg write function takes input sets prepares accepting provided calls `profile manager` `emdkresults` setlauncherapplicationstring packagename prepare modifydata[0] `setlauncherapplication` [img]//images/mxdefaultlaunchertutorialimages/set_launcher_app_methodjpg implementing listener `setdefaultlauncherbutton` valid setdefaultlauncherbuttonsetonclicklistenernew onclicklistener onclickview packagenameedittextgettexttostring textutilsisemptypackagename invalid setlauncherapplicationpackagename finally [img]//images/mxdefaultlaunchertutorialimages/final_on_create_methodjpg coding configuration part running connect latest runtime usb port debug tc [img]//images/mxdefaultlaunchertutorialimages/default_launcherpng automatically closes [img]//images/mxdefaultlaunchertutorialimages/ehs_launcherpng press menu key [img]//images/mxdefaultlaunchertutorialimages/device_home_keypng [img]//images/mxdefaultlaunchertutorialimages/mx_default_launcher_apppng obtained [img]//images/mxdefaultlaunchertutorialimages/enter_package_namepng `set launcher` [img]//images/mxdefaultlaunchertutorialimages/galaxy_launcherpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) change place ##important programming tips## androidmanifestxml >* include deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned configuring concentrate power explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxDefaultLauncher"},{"title":"Allow installation of apps from unknown sources using DevAdmin Manager.","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus installation apps unknown sources symbol [devadmin manager]//mx/devadmin feature > note phone personal data vulnerable attack agree solely responsible damage loss result create devices provide devadmintutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding devadmin manager profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific devadminprofile make access similar code left hand side editor window select dev admin list arrow [img]//images/mxdevadminmanagertutorialimages/devadmin_featurejpg field mydevadminmanager identify required editing programmatically empty setting screen-lock timeout interval occur configuring administration providing package class administrator discussed wizard install app drop-down option turn [img]//images/mxdevadminmanagertutorialimages/devadmin_manager_detailsjpg [img]//images/mxdevadminmanagertutorialimages/devadmin_manager_details_selectedjpg apply settings provided [img]//images/mxdevadminmanagertutorialimages/devadmin_profile_createdjpg finish allowing created [img]//images/mxdevadminmanagertutorialimages/devadmin_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxdevadminmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library set permission [img]//images/mxdevadminmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxdevadminmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxdevadminmanagertutorialimages/variables_addedjpg [img]//images/mxdevadminmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxdevadminmanagertutorialimages/on_opened_method_1jpg [img]//images/mxdevadminmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxdevadminmanagertutorialimages/parse_xml_1jpg [img]//images/mxdevadminmanagertutorialimages/parse_xml_2jpg form content shown specifically `buildfailuremessage` formed * match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxdevadminmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxdevadminmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxdevadminmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug turned device's -> security default [img]//images/mxdevadminmanagertutorialimages/unknown_sources_offpng [img]//images/mxdevadminmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) [img]//images/mxdevadminmanagertutorialimages/unknown_sources_onpng applications ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned understand concentrate power key explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxDevAdminManager"},{"title":"Configure Screen Off Timeout Interval using Display Manager.","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus setting screen timeout interval symbol device's turned time inactivity [display manager]//mx/displaymgr feature option popularly sleep present settings -> display create set specific seconds means automatically applied profile wizard > note provide displaymanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding manager click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add displayprofile make access similar code left hand side editor window select list arrow [img]//images/mxdisplaymanagertutorialimages/display_featurejpg field mydisplaymanager identify required editing programmatically empty discussed drop-down [img]//images/mxdisplaymanagertutorialimages/display_manager_detailsjpg [img]//images/mxdisplaymanagertutorialimages/display_manager_details_selectedjpg apply provided [img]//images/mxdisplaymanagertutorialimages/display_profile_createdjpg finish configuring created [img]//images/mxdisplaymanagertutorialimages/display_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxdisplaymanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library permission [img]//images/mxdisplaymanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxdisplaymanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxdisplaymanagertutorialimages/variables_addedjpg [img]//images/mxdisplaymanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response details message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxdisplaymanagertutorialimages/on_opened_method_1jpg [img]//images/mxdisplaymanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxdisplaymanagertutorialimages/parse_xml_1jpg [img]//images/mxdisplaymanagertutorialimages/parse_xml_2jpg form content shown specifically `buildfailuremessage` formed * match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxdisplaymanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessagetimeout title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxdisplaymanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxdisplaymanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug checkout default [img]//images/mxdisplaymanagertutorialimages/default_sleep_timepng [img]//images/mxdisplaymanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) [img]//images/mxdisplaymanagertutorialimages/default_sleep_changedpng devices ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned configure applications understand concentrate power key explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxDisplayManager"},{"title":"Creating Encrypted File System (EFS) using Encrypt Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus encrypted file system efs storing data internal/external storage [encrypt manager]//mx/encryptmgr feature enables files transparently protect confidential attackers physical access hand developer set encryption policies xml create install key external symbol profile wizard ###prerequisites * make sd card option > note provide encryptmanagertutorial requires kitkat start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding encrypt manager click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific encryptprofile similar code left side editor window select list arrow [img]//images/mxencryptmanagertutorialimages/encrypt_featurejpg field myencryptmanager identify required editing programmatically empty discussed newly installed drop-down section samplekey installing optional provided hex string length bytes random generated [img]//images/mxencryptmanagertutorialimages/install_keyjpg [img]//images/mxencryptmanagertutorialimages/create_efs_optionjpg sampleefs sample location mount path mounted /external belongs selected sdcard size mb 5mb 1mb exceed 4096mb [img]//images/mxencryptmanagertutorialimages/efs_profilejpg apply settings [img]//images/mxencryptmanagertutorialimages/encrypt_profile_createdjpg finish created [img]//images/mxencryptmanagertutorialimages/encrypt_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxencryptmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library permission [img]//images/mxencryptmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' [img]//images/mxencryptmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements emdkmanageremdklistener { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxencryptmanagertutorialimages/variables_addedjpg [img]//images/mxencryptmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxencryptmanagertutorialimages/on_opened_method_1jpg [img]//images/mxencryptmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxencryptmanagertutorialimages/parse_xml_1jpg [img]//images/mxencryptmanagertutorialimages/parse_xml_2jpg form content shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxencryptmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxencryptmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxencryptmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug [img]//images/mxencryptmanagertutorialimages/home_screenpng takes denied [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) browser -> directory efsstorage [img]//images/mxencryptmanagertutorialimages/efs_directorypng [img]//images/mxencryptmanagertutorialimages/efs_createdpng installation devices ##important programming tips## androidmanifestxml >* include deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned applications understand concentrate threat explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxEncryptManager"},{"title":"Errors When Processing Profiles","keywords":"## overview guide walk creating emdk android application analyze mx errors features declared profile creation occur due invalid input incorrect device configuration tutorial deliberately producing providing inputs `getstatusdocument` `getstatusstring` `emdkresults` obtain error description parsing resulting xml response compare output usual working case goal make understand find correct project > note provide mxerrorstutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding includes clock feature click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific manager mxerrorsprofile access similar code left hand side editor window select list arrow parameter populated [img]//images/mxerrorstutorialimages/select_clock_featurejpg configure values setting parameters parse display result dialog enter timezone date time format mentioned wizard field mmt valid proceed empty autotime unchecked [img]//images/mxerrorstutorialimages/clock_featuresjpg apply finish [img]//images/mxerrorstutorialimages/error_profile_createdjpg close >note >now emdkconfigxml created \\assets folder file definition profiles create inspect reflecting made gui earlier advised manually updated controlled entry attributes set [img]//images/mxerrorstutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library permission [img]//images/mxerrorstutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' [img]//images/mxerrorstutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type >verify identical //assign private string profilename = //declare store object null parm-error sub-feature errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/mxerrorstutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass assign `emdkmanager` previous steps `profilemanager` rest >set argument thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` details applied message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines functionality provided [xmlpull v1 API](https://www.xmlpull.org/) visit website learn api implementations tags found respective step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` declare parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxerrorstutorialimages/on_opened_method_1jpg [img]//images/mxerrorstutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxerrorstutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed * match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxerrorstutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxerrorstutorialimages/display_resultsjpg override `ondestroy` release resources protected ondestroy superondestroy //clean emdkmanagerrelease [img]//images/mxerrorstutorialimages/on_destroy_methodjpg coding run running connect latest runtime usb port debug `resultsgetstatusstring` saved `statusxmlresponse` `` fails gmt+0530 looked fields finally displayed [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) user [img]//images/mxerrorstutorialimages/failed_to_set_clockpng change settings edit [img]//images/mxerrorstutorialimages/correct_datejpg [img]//images/mxerrorstutorialimages/clock_settings_changedpng identify kind helps debugging figure ##important programming tips## required androidmanifestxml >* include installing deploying symbol fail missing shared ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will analyze MX errors that we get while using MX features that are declared in Profile creation.","url":"/emdk-for-android/6-0/tutorial/tutMxErrors"},{"title":"Configure Access Points using Mx GPRS Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring access points mobile networks present symbol [gprs manager]//mx/gprsmgr feature operations device's network **1 add/replace named apn** user add apn point replace existing set specific default wizard gprs manager requires inputs carrier att t-mobile custom supply details password > note option filed required **2 remove removes list apn's provide **3 apn's** additional input selecting action create demonstrate configure profile test mxgprstutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature gprsprofile make similar code left hand side editor window select arrow [img]//images/mxgprsmanagertutorialimages/gprs_featurejpg discussed earlier changing attribute step performing actions * field mygprs helps modifying programmatically drop-down menu choose att_apn_1 check checkbox exixts exists unchecked wapcingular wap@cingulargprscom enter cingular1 [img]//images/mxgprsmanagertutorialimages/att_gprs_detailsjpg apply settings provided [img]//images/mxgprsmanagertutorialimages/att_profile_createdjpg finish created [img]//images/mxgprsmanagertutorialimages/att_gprs_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui advised manually updated controlled [img]//images/mxgprsmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library permission [img]//images/mxgprsmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxgprsmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxgprsmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxgprsmanagertutorialimages/on_opened_method_1jpg [img]//images/mxgprsmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxgprsmanagertutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxgprsmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxgprsmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxgprsmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug -> wireless names [img]//images/mxgprsmanagertutorialimages/existing_access_pointspng added [img]//images/mxgprsmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) [img]//images/mxgprsmanagertutorialimages/att_access_point_addedpng selected top-bar edit [img]//images/mxgprsmanagertutorialimages/first_editjpg drop [img]//images/mxgprsmanagertutorialimages/remove_apnjpg unique [img]//images/mxgprsmanagertutorialimages/remove_att_apnjpg edited removed finally [img]//images/mxgprsmanagertutorialimages/remove_all_apnjpg buttons final ensure verify [img]//images/mxgprsmanagertutorialimages/all_apn_removedpng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version profilemanagerprocessprofile learned devices applications understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxGPRSManager"},{"title":"Persist MX configurations using Persist Manager API","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus [persist manager]//mx/persistance user persist configuration xml's settings performing factory reset persisted applied default apply manually main purpose manager feature supports **1 adding xml persisted** create specific clock details > note profile data capture **2 removing xml** remove wizard query **3 receive list xml's** order **4 based parameters** find attributes persisting * persistasversion persistasorder persistiferror **5 reset** re-sends framework helps re-applying back files survive folder profiles demonstrate retrieved re-applied designing steps store app manager's install setting means change timing stored deliberately timings uninstall installed symbol tc55 finally ensure automatically time set path provided ###prerequisites download apk sample [here](https://github.com/Zebra/examples-emdk/archive/AllInstalledApps.zip) respective package zip file os version [here](https://portal.motorolasolutions.com/Support/US-EN/Mobile+Networks+RFID+and+BarCode+Scanners/Mobile+Computers/Handheld+Computers/TC55) copy sd card/internal memory link update packages [here](https://portal.motorolasolutions.com/Support/US-EN/Mobile+Networks+RFID+and+BarCode+Scanners/Mobile+Computers/Handheld+Computers) provide mxpersistmanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add persistmanagerprofile make access similar code left hand side editor window select arrow [img]//images/mxpersistmanagertutorialimages/clock_featurejpg providing timezone date values utc pst gmt local enter foreample **name** mxclock **timezone** gmt-0700 **date** 2014-18-15 **time** 1pm 8pm hour format [img]//images/mxpersistmanagertutorialimages/clock_detailsjpg created [img]//images/mxpersistmanagertutorialimages/clock_profile_createdjpg proceed persistence [img]//images/mxpersistmanagertutorialimages/persist_managerjpg field persistclock action current persistent selector dialog [img]//images/mxpersistmanagertutorialimages/name_selector_clockjpg type generic/absolute drop-down option clock_profile [img]//images/mxpersistmanagertutorialimages/name_selector_clock_detailsjpg check error creation returns [img]//images/mxpersistmanagertutorialimages/persist_clock_completedjpg added [img]//images/mxpersistmanagertutorialimages/clock_profile_addedjpg discussed earlier follow show parameter [img]//images/mxpersistmanagertutorialimages/app_manager_parameter_listjpg mxappmanager card downloaded /storage/sdcard1/allinstalledappsapk devices [img]//images/mxpersistmanagertutorialimages/app_manager_detailsjpg [img]//images/mxpersistmanagertutorialimages/persist_app_managerjpg persistappmanager absolute/generic [img]//images/mxpersistmanagertutorialimages/persist_app_manager_completedjpg finish [img]//images/mxpersistmanagertutorialimages/persist_manager_profile_createdjpg close ready >note >now emdkconfigxml \\assets definition inspect reflecting made parameters gui advised updated controlled [img]//images/mxpersistmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library permission [img]//images/mxpersistmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' [img]//images/mxpersistmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying description case errors >verify identical assign private string profilename = declare object null parm-error sub-feature errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/mxpersistmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented apis pass `emdkmanager` previous `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed `check_xml` parse response display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead types scope retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxwirelessmanagertutorialimages/on_opened_method_1jpg [img]//images/mxwirelessmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxpersistmanagertutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxpersistmanagertutorialimages/build_failure_messagejpg `success` `failure` mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxpersistmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxpersistmanagertutorialimages/on_destroy_methodjpg coding part run running connect latest runtime usb port debug date-time phone [img]//images/mxpersistmanagertutorialimages/before_running_apppng changed allinstalledapps [img]//images/mxpersistmanagertutorialimages/xml_persistedpng [img]//images/mxpersistmanagertutorialimages/date_time_updatedpng [img]//images/mxpersistmanagertutorialimages/app_installedpng browser tc /enterprise/usr/persist/mxframework/persistmgr [img]//images/mxpersistmanagertutorialimages/persist_pathpng erases applications resets system read present device's simultaneously press power programmable volume buttons shuts reboots navigating erasing reboot completed resends captured works [img]//images/mxpersistmanagertutorialimages/after_resetpng ##important programming tips## required androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher test profilemanagerprocessprofile learned configure understand concentrate gprs explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxPersistManager"},{"title":"Disable Airplane Mode Menu Option using Power Key Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring power key manager parameters airplane mode touch panel safe auto screen lock [power manager]//mx/powerkeymgr feature powerkey control options menu create disable option symbol > note provide powerkeymanagertutorial requires kitkat start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific powerkeyprofile make access similar code left hand side editor window select list arrow [img]//images/mxpowerkeymanagertutorialimages/power_key_featurejpg field mypowerkeymanager identify required editing programmatically empty configure * **airplane mode** **touch panel** **safe **auto option** button instantly locks settings ui state** automatically powered discussed wizard user enabled back drop-down show [img]//images/mxpowerkeymanagertutorialimages/power_key_manager_detailsjpg [img]//images/mxpowerkeymanagertutorialimages/power_key_manager_details_selectedjpg apply provided [img]//images/mxpowerkeymanagertutorialimages/power_key_profile_createdjpg finish disabling created [img]//images/mxpowerkeymanagertutorialimages/power_key_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made gui earlier advised manually updated controlled [img]//images/mxpowerkeymanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library set permission [img]//images/mxpowerkeymanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxpowerkeymanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxpowerkeymanagertutorialimages/variables_addedjpg [img]//images/mxpowerkeymanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxpowerkeymanagertutorialimages/on_opened_method_1jpg [img]//images/mxpowerkeymanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxpowerkeymanagertutorialimages/parse_xml_1jpg [img]//images/mxpowerkeymanagertutorialimages/parse_xml_2jpg form content shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxpowerkeymanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxpowerkeymanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxpowerkeymanagertutorialimages/on_destroy_methodjpg coding configuration part running connect latest runtime usb port debug device's -> means edit [img]//images/mxpowerkeymanagertutorialimages/airplane_mode_enabledpng run [img]//images/mxpowerkeymanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) disabled admin [img]//images/mxpowerkeymanagertutorialimages/airplane_mode_disabledpng [img]//images/mxpowerkeymanagertutorialimages/airplane_mode_reenablejpg devices ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned applications understand concentrate sd card explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxPowerKeyManager"},{"title":"Power Management using Power Manager API","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus [power manager]//mx/powermgr user power management operations symbol devices theses include setting sleep mode rebooting updating operating system **1 mode** feature enter order conserve **2 reboot** reboot restarts app **3 os update** manager update provide path package zip file resides device's external sd card based > note copy make work internal * **enterprise reset** resets data packages **factory **full wipe** performs full wipe supported kitkat version **os upgrade** upgrades/downgrades implementing understand ###prerequisites download respective update/factory reset/enterprise reset [here](https://portal.motorolasolutions.com/Support/US-EN/Mobile+Networks+RFID+and+BarCode+Scanners/Mobile+Computers/Handheld+Computers/TC55) link tc55 [here](https://portal.motorolasolutions.com/Support/US-EN/Mobile+Networks+RFID+and+BarCode+Scanners/Mobile+Computers/Handheld+Computers) mxpowermanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific powermanagerprofile access similar code left hand side editor window select list arrow apps explained earlier parameter populated [img]//images/mxpowermanagertutorialimages/select_power_manager_featurejpg drop-down action field [img]//images/mxpowermanagertutorialimages/power_manager_featuresjpg shown drop suggests `do nothing` configuring mentioned `reset action` wizard option implement launch [img]//images/mxpowermanagertutorialimages/feature_do_nothingjpg mypowermanager refer empty apply finish [img]//images/mxpowermanagertutorialimages/power_manager_profile_createdjpg close >note >now emdkconfigxml created \\assets folder definition profiles create inspect reflecting made parameters gui advised manually updated controlled entry assigned values factory selection emdkconfig modify shortly [img]//images/mxpowermanagertutorialimages/emdk_config_file_entriesjpg enabling permissions application's manifestxml library set permission [img]//images/mxpowermanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxpowermanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager ui elements required type description case errors >verify identical assign private string profilename = declare variable store object null text view displaying status textview statustextview radio group buttons options radiogroup pwrradiogroup edit edittext zipfilepathedittext zipfilepath initial executed onopened ready default -> int parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation [img]//images/mxpowermanagertutorialimages/global_variable_entryjpg oncreate call getemdkmanager initialized checked //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxpowermanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event `statustextview` implemented apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued statustextviewsettextemdk thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface id alertdialog alert buildercreate alertshow returns result applying [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply ahead check types scope sample retrieve `getstatusstring` `handleemdkresult` handle step emdkresult handleemdkresultresults [img]//images/mxpowermanagertutorialimages/on_opened_methodjpg shows declared `parsexml` eventually `displayresults` output [dialog](https://developer.android.com/reference/android/app/AlertDialog.html), declaring coming extracting parsing handleemdkresultemdkresults statusxmlresponse resultsgetstatusstring pull parser xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace displayresults [img]//images/mxpowermanagertutorialimages/handle_emdk_resultjpg methods lets [xml Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception complete [img]//images/mxpowermanagertutorialimages/parse_xmljpg form content specifically `buildfailuremessage` formed match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxpowermanagertutorialimages/build_failure_messagejpg proceed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) textutilsisemptyerrordescription mainactivitythis title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxpowermanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxpowermanagertutorialimages/on_destroy_methodjpg layout/view remove inside res/layout/activity_mainxml displays triggers selected configures layout activity_mainxml [img]//images/mxpowermanagertutorialimages/activity_mainjpg addsetbuttonlistener creates listener settings findviewbyidridtextviewstatus findviewbyidridradiogrouppwr findviewbyidridet_zip_file_path execute `oncreate` [img]//images/mxpowermanagertutorialimages/complete_on_createjpg added sets integer 1-sleep 4-reboot 8-os calls modifyprofile_xmlstring modifies setbutton findviewbyidridbuttonset setbuttonsetonclicklistenernew onclicklistener onclickview arg0 radioid pwrradiogroupgetcheckedradiobuttonid ridradiosuspend suspend/ ridradioreset reset/reboot ridradioosupdate [img]//images/mxpowermanagertutorialimages/add_set_button_listenerjpg `modifyprofile_xmlstring` prepares input attribute remains `if-else` condition `zipfilepath` modifydata[0] `profile manager` `emdkresults` applies modified prepare existing zipfilepathedittextgettexttostring entered toast textutilsisemptyzipfilepath toastmaketextmainactivitythis incorrect toastlength_shortshow rebbot profilesetpositivebutton [img]//images/mxpowermanagertutorialimages/modifyprofile_xmlstringjpg closed abruptly `onclosed` called coding configuration part run running connect latest runtime usb port debug loads main page [img]//images/mxpowermanagertutorialimages/home_screenpng suspend press put locking [img]//images/mxpowermanagertutorialimages/sleep_modepng locked unlock resumed [img]//images/mxpowermanagertutorialimages/sleep_mode_resumedpng [img]//images/mxpowermanagertutorialimages/reboot_modepng rebooted located downloaded [this link](https://portal.motorolasolutions.com/Support/US-EN/Mobile+Networks+RFID+and+BarCode+Scanners/Mobile+Computers/Handheld+Computers/TC55) /sdcard/t55n0jb0vruen17400zip upgrade [img]//images/mxpowermanagertutorialimages/os_update_pathpng phone shut performing due bottom [img]//images/mxpowermanagertutorialimages/performing_os_updatepng finally reboots configure [img]//images/mxpowermanagertutorialimages/after_os_updatepng ##important programming tips## androidmanifestxml >* installing deploying fail missing shared datawedge v1712 higher test profilemanagerprocessprofile learned applications concentrate persist explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxPowerManager"},{"title":"Configure the use of SD Card using SD Card Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring sd card allowing enable/disable [sd manager]//mx/sdcardmgr feature create disable external enable back profile wizard symbol ###prerequisites * make > note provide sdcardmanagertutorial requires kitkat start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding manager click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific sdcardprofile access similar code left hand side editor window select list arrow [img]//images/mxsdcardmanagertutorialimages/sd_card_featurejpg field mysdcardmanager identify required editing programmatically empty discussed sdcard drop-down option [img]//images/mxsdcardmanagertutorialimages/sd_card_manager_detailsjpg [img]//images/mxsdcardmanagertutorialimages/sd_card_manager_details_selectedjpg apply settings provided [img]//images/mxsdcardmanagertutorialimages/sd_card_profile_createdjpg finish disabling created [img]//images/mxsdcardmanagertutorialimages/sd_card_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxsdcardmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library set permission [img]//images/mxsdcardmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxsdcardmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxsdcardmanagertutorialimages/variables_addedjpg [img]//images/mxsdcardmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxsdcardmanagertutorialimages/on_opened_method_1jpg [img]//images/mxsdcardmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxsdcardmanagertutorialimages/parse_xml_1jpg [img]//images/mxsdcardmanagertutorialimages/parse_xml_2jpg form content shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxsdcardmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxsdcardmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxsdcardmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug enabled device's browser -> stage [img]//images/mxsdcardmanagertutorialimages/sd_card_enabledpng [img]//images/mxsdcardmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) directory [img]//images/mxsdcardmanagertutorialimages/sd_card_disabledpng means disabled view edit [img]//images/mxsdcardmanagertutorialimages/edit_profile_managerjpg [img]//images/mxsdcardmanagertutorialimages/sd_card_re_enabledjpg checking devices ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned configure applications understand concentrate encrypt explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxSDCardManager"},{"title":"Invoke Enterprise Reset in Settings UI","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus ability configure reset option settings ui symbol [settings manager]//mx/settingsmgr feature create disable invoke typical case prevent user accidentally pressing > note provide mxsettingsmanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding manager profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific settingsmanagerprofile make access similar code left hand side editor window select list arrow [img]//images/mxsettingsmanagertutorialimages/settings_featurejpg field mysettingsmanager identify required editing programmatically empty drop-down offers additional turning on/off wi-fi unknownsources airplane mode enable existing based selection [img]//images/mxsettingsmanagertutorialimages/settings_manager_detailsjpg [img]//images/mxsettingsmanagertutorialimages/settings_manager_details_selectedjpg apply provided [img]//images/mxsettingsmanagertutorialimages/settings_profile_createdjpg finish disabling created [img]//images/mxsettingsmanagertutorialimages/settings_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxsettingsmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library set permission [img]//images/mxsettingsmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxsettingsmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxsettingsmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result wizard [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxsettingsmanagertutorialimages/on_opened_method_1jpg [img]//images/mxsettingsmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxsettingsmanagertutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed * match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxsettingsmanagertutorialimages/build_failure_messagejpg `success` `failure` mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxsettingsmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxsettingsmanagertutorialimages/on_destroy_methodjpg coding configuration part **disable** run running connect latest runtime usb port debug [img]//images/mxsettingsmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) app disabled verify device's [img]//images/mxsettingsmanagertutorialimages/device_settingsbmp [img]//images/mxsettingsmanagertutorialimages/reset_disabledbmp ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxSettingsManager"},{"title":"Specify Touch Mode using Mx Touch Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring touch mode symbol [touch manager]//mx/touchmgr feature create configure > note provide mxtouchmanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding manager profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific touchmanagerprofile make access similar code left hand side editor window select list arrow [img]//images/mxtouchmanagertutorialimages/touch_featurejpg field mytouchmanager identify required editing programmatically empty drop-down action modes choose set stylus finger glove existing setting option interact [img]//images/mxtouchmanagertutorialimages/touch_manager_detailsjpg [img]//images/mxtouchmanagertutorialimages/touch_manager_details_selectedjpg apply settings provided [img]//images/mxtouchmanagertutorialimages/touch_profile_createdjpg finish created [img]//images/mxtouchmanagertutorialimages/touch_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxtouchmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library permission [img]//images/mxtouchmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxtouchmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxtouchmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result wizard [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxtouchmanagertutorialimages/on_opened_method_1jpg [img]//images/mxtouchmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxtouchmanagertutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed * match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxtouchmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxtouchmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxtouchmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug device's -> default change [img]//images/mxtouchmanagertutorialimages/touch_modepng [img]//images/mxtouchmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) implies verify [img]//images/mxtouchmanagertutorialimages/touch_mode_changedpng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxTouchManager"},{"title":"Configure Clipboard using Mx UI Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring clipboard symbol [ui manager]//mx/uimgr feature create configure enable/disable clear > note provide mxuimanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding ui manager profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific uimanagerprofile make access similar code left hand side editor window select list arrow [img]//images/mxuimanagertutorialimages/new_features_43jpg field myuimanager identify required editing programmatically empty discussed enable disable run saved drop-down wizard option check checkbox clearing additional sub-features enabling/disabling autocorrect homekey bluetooth pairing popup setting current locale default input method configured [img]//images/mxuimanagertutorialimages/ui_manager_detailsjpg [img]//images/mxuimanagertutorialimages/ui_manager_details_selectedjpg apply settings provided [img]//images/mxuimanagertutorialimages/ui_profile_createdjpg finish wireless created [img]//images/mxuimanagertutorialimages/ui_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxuimanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library set permission [img]//images/mxuimanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxuimanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxuimanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxuimanagertutorialimages/on_opened_method_1jpg [img]//images/mxuimanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxuimanagertutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed * match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxuimanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxuimanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxuimanagertutorialimages/on_destroy_methodjpg coding configuration part running connect latest runtime usb port debug copied device's messages copy text [img]//images/mxuimanagertutorialimages/copy_text_to_clipboardpng [img]//images/mxuimanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) means enabled cleared verify opening existing long edit press paste [img]//images/mxuimanagertutorialimages/paste_datapng [img]//images/mxuimanagertutorialimages/no_datapng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate touch explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxUIManager"},{"title":"Manage USB Configurations","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus managing usb symbol [usb manager]//mx/usbmgr feature create configure enable/disable [ADB](https://developer.android.com/tools/help/adb.html) mode adb communicate emulator instance connected android-powered order run applications > note provide mxusbmanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding manager profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific usbmanagerprofile make access similar code left hand side editor window select list arrow [img]//images/mxusbmanagertutorialimages/usb_featurejpg field myusbmanager identify required editing programmatically empty number options configuring settings dependent option mentioned debugging usage disable communication machine enable degugger turned change existing case providing user interface coming steps disabled wizard manually performed factory reset [img]//images/mxusbmanagertutorialimages/usb_manager_detailsjpg [img]//images/mxusbmanagertutorialimages/usb_manager_details_selectedjpg apply provided [img]//images/mxusbmanagertutorialimages/usb_profile_createdjpg finish created [img]//images/mxusbmanagertutorialimages/usb_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised updated controlled [img]//images/mxusbmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library set permission [img]//images/mxusbmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxusbmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold objects profilemanager status variable applying [RadioGroup](https://developer.android.com/reference/android/widget/RadioGroup.html) [radio Buttons](https://developer.android.com/guide/topics/ui/controls/radiobutton.html), selected Button](https://developer.android.com/guide/topics/ui/controls/radiobutton.html) processing type description errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation declaration [img]//images/mxusbmanagertutorialimages/global_variablesjpg Buttons](https://developer.android.com/guide/topics/ui/controls/radiobutton.html) [Button](https://developer.android.com/reference/android/widget/Button.html) inside res/layout/activity_mainxml remove desired layout activity_mainxml [img]//images/mxusbmanagertutorialimages/activity_main_1jpg remaining part [img]//images/mxusbmanagertutorialimages/activity_main_2jpg back mainactivityjava `oncreate` ui element previous step listener button call `getemdkmanager` initialized checked ready reference elements adbradiogroup radiogroup findviewbyidridradiogroupadb update addsetbuttonlistener returned callback emdkresults results emdkmanagergetemdkmanager getapplicationcontext check return getemdkmanager resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxusbmanagertutorialimages/on_create_addedjpg `onopened` trigger event implemented apis pass `emdkmanager` `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile complete [img]//images/mxusbmanagertutorialimages/on_opened_methodjpg displays added `addsetbuttonlistener` setbutton findviewbyidridbuttonset setbuttonsetonclicklistenernew onclicklistener onclickview arg0 int radioid adbradiogroupgetcheckedradiobuttonid ridradioenableadb ridradiodisableadb updateusbsettings sets `value` based -> [img]//images/mxusbmanagertutorialimages/add_set_button_listenerjpg `updateusbsettings` attribute depending radio prepares input `processprofile` returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed `check_xml` parse response details applied display failure message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference simply displaying ahead types scope sample retrieve `getstatusstring` updates setting values prepare string[] modifydata string[1] modifydata[0] + processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml statusxmlresponse resultsgetstatusstring pull parser xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace textutilsisemptyerrordescription dialog displayresultssuccess displayresultsstatus buildfailuremessage displayresultsfailure exception exprintstacktrace [img]//images/mxusbmanagertutorialimages/update_usb_settings_1jpg [img]//images/mxusbmanagertutorialimages/update_usb_settings_2jpg declared received `parsexml` eventually `displayresults` output [xml Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext [img]//images/mxusbmanagertutorialimages/parse_xmljpg parsed detail messages handle `buildfailuremessage` formed * match criteria build respective failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype \\n [img]//images/mxusbmanagertutorialimages/build_failure_messagejpg generic takes arguments `title` `description` [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) understands describes displayresultsstring title alert alertdialogbuilder mainactivitythis alertdialogbuildersettitletitle alertdialogbuildersetmessagedescription alertdialogbuildersetcancelablefalsesetpositivebuttonok dialoginterfaceonclicklistener onclickdialoginterface id cancels alertdialog alertdialogbuildercreate show alertdialogshow [img]//images/mxusbmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxusbmanagertutorialimages/on_destroy_methodjpg coding configuration running connect latest runtime port debug developer [img]//images/mxusbmanagertutorialimages/adb_mode_onpng [img]//images/mxusbmanagertutorialimages/home_screenpng press [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) app [img]//images/mxusbmanagertutorialimages/successpng words [img]//images/mxusbmanagertutorialimages/adb_mode_offpng turn ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned manage devices understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxUSBManager"},{"title":"Configure Wi-Fi settings and Network Profiles using Mx Wi-Fi","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus [wi-fi manager]//mx/wifi manage device's wi-fi settings network profiles connecting remembering networks > note order apply enabled enable profile error attempting configured wizard programmatically manager implementing programmatic change scope designed configure sequence * add connect existing disconnect remove ###prerequisites symbol provide wifimanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding feature click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature specific wifiprofile make access similar code left hand side editor window select list arrow explained earlier parameter populated [img]//images/mxwifimanagertutorialimages/select_wifi_featurejpg mentioned initially field mywifi identify required editing empty lets disabled configuring step enabling drop-down option [img]//images/mxwifimanagertutorialimages/wifi_enable_dropdownjpg [img]//images/mxwifimanagertutorialimages/wifi_enabledjpg action radio-specific section display operations performed unchanged [img]//images/mxwifimanagertutorialimages/network_action_dropdownjpg show configurable related [img]//images/mxwifimanagertutorialimages/add_new_networkjpg types security mode personal type [img]//images/mxwifimanagertutorialimages/personal_networkjpg enter details fields provided ssid rholink-ap wpa passphrase password authentication check protect key checkbox protected depending [img]//images/mxwifimanagertutorialimages/personal_network_details_addedjpg finish [img]//images/mxwifimanagertutorialimages/wifi_profile_createdjpg close >note >now emdkconfigxml created \\assets folder file definition create inspect reflecting made parameters gui advised manually updated controlled entry elements [img]//images/mxwifimanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission [img]//images/mxwifimanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxwifimanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying ui values description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxwifimanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued statustextviewsettextemdk thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed `check_xml` parse response applied message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxwifimanagertutorialimages/on_opened_method_1jpg [img]//images/mxwifimanagertutorialimages/on_opened_method_2jpg methods reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxwifimanagertutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxwifimanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxwifimanagertutorialimages/display_resultsjpg override ondestroy release resources superondestroy //clean emdkmanagerrelease [img]//images/mxwifimanagertutorialimages/on_destroy_methodjpg coding configuration part running latest runtime usb port debug disable toggling [img]//images/mxwifimanagertutorialimages/disable_wifipng run app [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html). [img]//images/mxwifimanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) displayed means added named verify [img]//images/mxwifimanagertutorialimages/wifi_onpng tap lock icon image secured [img]//images/mxwifimanagertutorialimages/rho_link_addedpng setting connected selecting edit [img]//images/mxwifimanagertutorialimages/edit_profilejpg choose [img]//images/mxwifimanagertutorialimages/connect_existing_networkjpg [img]//images/mxwifimanagertutorialimages/ssid_providedjpg save -> [img]//images/mxwifimanagertutorialimages/wifi_connectedpng [img]//images/mxwifimanagertutorialimages/disconnect_from_networkjpg [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html) successful disconnected [img]//images/mxwifimanagertutorialimages/disconnected_from_networkpng finally variation [img]//images/mxwifimanagertutorialimages/ssid_to_removepng screen deven providing [img]//images/mxwifimanagertutorialimages/remove_existing_networkjpg removed [img]//images/mxwifimanagertutorialimages/network_removedpng range scans periodically ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate certificate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxWiFiManager"},{"title":"Configure Bluetooth using Mx Wireless Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring wireless symbol configure device's bluetooth [wireless manager]//mx/wirelessmgr feature create enable/disable > note provide mxwirelessmanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding manager profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific wirelessprofile make access similar code left hand side editor window select list arrow [img]//images/mxwirelessmanagertutorialimages/wireless_featurejpg field mywirelessmanager identify required editing programmatically empty additional sub-features turning on/off nfc gps wwan discussed enable wizard drop-down option [img]//images/mxwirelessmanagertutorialimages/wireless_manager_detailsjpg [img]//images/mxwirelessmanagertutorialimages/wireless_manager_details_selectedjpg apply settings provided [img]//images/mxwirelessmanagertutorialimages/wireless_profile_createdjpg finish created [img]//images/mxwirelessmanagertutorialimages/wireless_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxwirelessmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library set permission [img]//images/mxwirelessmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxwirelessmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxwirelessmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxwirelessmanagertutorialimages/on_opened_method_1jpg [img]//images/mxwirelessmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxwirelessmanagertutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed * match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxwirelessmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxwirelessmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxwirelessmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug disabled -> [img]//images/mxwirelessmanagertutorialimages/bluetooth_offpng [img]//images/mxwirelessmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) enabled [img]//images/mxwirelessmanagertutorialimages/bluetooth_onpng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate ui explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxWirelessManager"},{"title":"Manage MX Processing Behavior","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus managing xml processing mode symbol [xml manager]//mx/xml feature manager supports modes * execute end error stop skip catch remainder create configure manager]/emdk-for-android/6-0/mx/mx/xml > note provide xmlmanagertutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding profile click [here]/emdk-for-android/6-0/tutorial/tutaddprofilemanagerfeature add specific xmlmanagerprofile make access similar code left hand side editor window select list arrow [img]//images/mxxmlmanagertutorialimages/xml_featurejpg field myxmlmanager identify required editing programmatically empty drop-down choose choice [img]//images/mxxmlmanagertutorialimages/xml_manager_detailsjpg [img]//images/mxxmlmanagertutorialimages/xml_manager_details_selectedjpg apply settings provided [img]//images/mxxmlmanagertutorialimages/xml_profile_createdjpg finish created [img]//images/mxxmlmanagertutorialimages/xml_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxxmlmanagertutorialimages/emdk_config_file_entriesjpg enabling permissions modify application's manifestxml library set permission [img]//images/mxxmlmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' [img]//images/mxxmlmanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxxmlmanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result wizard [emdkresults]/emdk-for-android/6-0/api/core/emdkresults successfully processed reruns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared step xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxxmlmanagertutorialimages/on_opened_method_1jpg [img]//images/mxxmlmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxxmlmanagertutorialimages/parse_xmljpg form content shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxxmlmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxxmlmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxxmlmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug [img]//images/mxxmlmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) implies verify device's -> touch [img]//images/mxxmlmanagertutorialimages/touch_mode_changedpng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate wireless explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/6-0/tutorial/tutMxXMLManager"},{"title":"Pairing Bluetooth devices with ScanAndPair APIs","keywords":"## overview guide walk creating emdk android application [scanandpair apis]/emdk-for-android/6-0/api/scanandpair introduced perform pairing remote scanning device bluetooth address api [scan pair manager]/emdk-for-android/6-0/api/scanandpair/scanandpairmanager primary object devices tutorial explore developing basic scan name/address [MC40](https://www.zebra.com/content/dam/msi-new/assets/web/Business/Products/Mobile%20Computers/Handheld%20Computers/MC40/_Documents/Static_Files/MC40_Specifications.pdf)) scanned discovering > note api]/emdk-for-android/6-0/api/scanandpair profile wizard configured programmatically code project provide scanandpairtutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio enabling permissions modify application's manifestxml library set permission barcodes [img]//images/scanandpairtutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/scanandpairtutorialimages/manifest_permissions_addedjpg ##adding add references libraries java import comsymbolemdkemdkmanager comsymbolemdkscanandpairscanandpairmanager comsymbolemdkscanandpairstatusdata make activity implement [emdklistener]/emdk-for-android/6-0/api/core/emdkmanager-emdklistener [scanandpairmanagerstatuslistener]/emdk-for-android/6-0/api/scanandpair/scanandpairmanager-statuslistener interface informing client applications notify unpair events override `onstatus` function callback method called status event occurs public class mainactivity extends implements emdkmanageremdklistener scanandpairmanagerstatuslistener { @override void onopenedemdkmanager emdkmanager } onclosed onstatusstatusdata statusdata create global variables hold instance objects scanandpairmanager ui elements starting [TextView](https://developer.android.com/reference/android/widget/TextView.html) display operation [EditText](https://developer.android.com/reference/android/widget/EditText.html) user enter symbol paired [Spinner](https://developer.android.com/guide/topics/ui/controls/spinner.html) type data prior [check Boxes](https://developer.android.com/reference/android/widget/CheckBox.html) explained adding [Buttons](https://developer.android.com/guide/topics/ui/controls/button.html) apply settings // text view private edittext btname = null btaddress select hard soft option checkbox checkboxhardtrigger checkboxalwaysscan button scanandpairbutton scanandunpairbutton spinner scandatatype operations textview statusview declare variable store scanandpair scanandpairmgr notifying comsymbolemdkscanandpairscanandpairmanagerstatuslistener statuscallbackobj till [img]//images/scanandpairtutorialimages/variables_added_1jpg [img]//images/scanandpairtutorialimages/variables_added_2jpg design simple components remove inside res/layout/activity_mainxml layout `oncreate` reference declared order [Activity](https://developer.android.com/reference/android/app/Activity.html). call getemdkmanager initialized checked ready [ArrayAdapter](https://developer.android.com/reference/android/widget/ArrayAdapter.html) list types]/emdk-for-android/6-0/api/scanandpair/scanandpairconfigscanandpairconfigscandatatype scanner finally methods calls handle buttons check boxes findviewbyidridname findviewbyidridaddress findviewbyidridalwaysscan findviewbyidridtriggertype findviewbyidridscanandpair findviewbyidridscanandunpair findviewbyidridlogs spinnerfindviewbyidridscandatatype statusviewsettext\\n initially disable checkboxes btnamesetenabledfalse btaddresssetenabledfalse creation returned emdkresults results emdkmanagergetemdkmanagergetapplicationcontext return resultsstatuscode == emdkresultsstatus_codesuccess statusviewsettextplease wait initialization progress statusviewsettextinitialization failed supported types arraylist scandatatypes scandatatypesaddscanandpairconfigscandatatypemac_address scandatatypesaddscanandpairconfigscandatatypedevice_name scandatatypesaddscanandpairconfigscandatatypeunspecified array adapter arrayadapter arrayadaptergetapplicationcontext rlayoutsimple_spinner_item scandatatypesetadapterarrayadapter register onclick listeners registerforbuttonevents onchecked listener addcheckboxlistener complete [img]//images/scanandpairtutorialimages/on_create_added_1jpg [img]//images/scanandpairtutorialimages/on_create_added_2jpg [emdk manager]/emdk-for-android/6-0/api/core/emdkmanager `onopened` update `statusview` message manager thisemdkmanager thread runonuithreadnew runnable run statusviewsettextapplication [img]//images/scanandpairtutorialimages/on_opened_methodjpg errors created resolve res -> file `simple_spinner_itemxml` [img]//images/scanandpairtutorialimages/adapter_layout_addedjpg lets `addcheckboxlistener` box edittexts parameters provided unchecked details related `scanandpairmgrconfigalwaysscan` field `scanandpair` checkboxalwaysscansetoncheckedchangelistener compoundbuttononcheckedchangelistener oncheckedchangedcompoundbutton buttonview boolean ischecked btnamesetenabledtrue btaddresssetenabledtrue [img]//images/scanandpairtutorialimages/always_scan_check_box_listenerjpg error `registerforbuttonevents` rid addscanandpairbuttonevents addscanandunpairbuttonevents [img]//images/scanandpairtutorialimages/method_calls_for_both_buttonsjpg important part mc40 `addscanandpairbuttonevents` `scanandpairbutton` onclicklistener `onclick` [img]//images/scanandpairtutorialimages/on_click_listener_scan_pairjpg case [scanandpairmanager]/emdk-for-android/6-0/api/scanandpair/scanandpairmanager ifscanandpairmgr emdkmanagergetinstancefeature_typescanandpair scanandpairmgraddstatuslistenerstatuscallbackobj parameter `scanandpairmanagerconfigalwaysscan` determines performed * scanandpairmanagerconfigalwaysscan true default barcode required false skipped scanandpairmgrconfigbluetoothinfodevicename scanandpairmgrconfigbluetoothinfomacaddress directly `checkboxalwaysscan` [notification type]/emdk-for-android/6-0/api/scanandpair/scanandpairconfigscanandpairconfignotificationtype `scanandunpair` scanandpairmgrconfigalwaysscan checkboxalwaysscanischecked scanandpairmgrconfignotificationtype notificationtypebeeper ifcheckboxalwaysscanischecked btaddressgettexttostringtrim btnamegettexttostringtrim notification specific beep sequence table [img]//images/scanandpairtutorialimages/notification_tablejpg timeout specifies duration seconds `checkboxhardtrigger` `triggertypehard` trigger `triggertypesoft` scanandpairmgrconfigscaninfoscantimeout ifcheckboxhardtriggerischecked scanandpairmgrconfigscaninfotriggertype triggertypehard triggertypesoft scanandpairmgrconfigscaninfoscandatatype scandatatypescandatatypegetselecteditem result `scanandpairresults` asynchronous registered enabled configuration scans pairs performing discovery find authentication pin maximum allowed length characters scanandpairresults resultcode scanandpairmgrscanandpair0000 [scanandpairresults]/emdk-for-android/6-0/api/scanandpair/scanandpairmanagerscanandpairresults ifresultcodeequalsscanandpairresultssuccess statusviewappendresultcodetostring+ \\n\\n statusviewappendscanandpairmanager entire source copy scanandpairbuttonsetonclicklistenernew viewonclicklistener onclickview statusviewsettextscanandpair started+ \\n emdkmanagergetinstance emdkmanagerfeature_typescanandpair beeper scanandpairconfignotificationtypebeeper //set scanandpairconfigtriggertypehard scanandpairconfigtriggertypesoft selected scanandpairconfigscandatatypescandatatypegetselecteditem catch exception statusviewsettextscanandunpair error+ egetmessage + [img]//images/scanandpairtutorialimages/complete_scan_and_pair_button_event_method_1jpg [img]//images/scanandpairtutorialimages/complete_scan_and_pair_button_event_method_2jpg write `addscanandunpairbuttonevents` similar steps previous step thing scanandpairmgrscanandunpair unpairs unpairing scanandunpair presses `unpair` `scanandunpairbutton` scanandunpairbuttonsetonclicklistenernew emdkmanagergetinstanceemdkmanagerfeature_typescanandpair [img]//images/scanandpairtutorialimages/complete_scan_and_unpair_button_event_method_1jpg [img]//images/scanandpairtutorialimages/complete_scan_and_unpair_button_event_method_2jpg received added track `statusdatagetstate` states mentions final stringbuilder text= isupdateaddress switch statusdatagetstate waiting textappendwaiting press break textappendscanner beam aim textappenddiscovering textappendbluetooth successfully unpaired un-paired textappend\\n+ statusdatagetstatetostring+ statusdatagetresult main isupdateui statusviewsettexttext ifisupdateui btnamesettextscanandpairmgrconfigbluetoothinfodevicename btaddresssettextscanandpairmgrconfigbluetoothinfomacaddress [img]//images/scanandpairtutorialimages/on_status_method_1jpg [img]//images/scanandpairtutorialimages/on_status_method_2jpg `onclosed` statusviewsettexterror restart [img]//images/scanandpairtutorialimages/on_closed_methodjpg clean `ondestroy` emdkmanagerrelease emdkmanager=null [img]//images/scanandpairtutorialimages/on_destroy_methodjpg coding running connect latest runtime usb port debug [img]//images/scanandpairtutorialimages/home_screenpng `mac address` scandata [img]//images/scanandpairtutorialimages/mac_address_scan_data_typepng eventually [img]//images/scanandpairtutorialimages/config_before_scanpng process intermediate [img]//images/scanandpairtutorialimages/scan_and_pair_startedpng [img]//images/scanandpairtutorialimages/waiting_for_trigger_presspng key [img]//images/scanandpairtutorialimages/beam_on_aim_barcodepng mac [img]//images/scanandpairtutorialimages/barcode_with_mac_addressjpg tc55 [img]//images/scanandpairtutorialimages/discovering_devicepng [img]//images/scanandpairtutorialimages/pairing_dialogpng click mobile [img]//images/scanandpairtutorialimages/device_pairedpng success confirm device's [img]//images/scanandpairtutorialimages/confirm_pairingpng section ##important programming tips## androidmanifestxml >note >* include installing deploying fail missing shared learned concentrate [simulscan apis]/emdk-for-android/6-0/api/simulscan develop demonstrate ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use ScanAndPair APIs introduced in EMDK V 3.1, to perform pairing of any remote Scanning device by Scanning its Bluetooth Name or Bluetooth Address.","url":"/emdk-for-android/6-0/tutorial/tutScanAndPairAPI"},{"title":"Capture critical data from documents using SimulScan API","keywords":"## overview guide walk creating emdk android application [simulscan apis]/emdk-for-android/6-0/api/simulscan introduced capture critical data documents facilitates capturing fields interest document converting end-user immediately point transaction ways api]/emdk-for-android/6-0/api/simulscan * **barcode** productivity gain decoding multiple bar codes read single trigger pull **ocr optical character recognition** automated entry recognition [ocr] **omr mark simplified workflow exceptions checked [omr] signature presence detection discussed mentioned types treated templates position positions template simulscan api access **templates** existing create depending captured click [here](https://simulscan.zebra.com) login partner credentials uploading image form upload load tutorial automatically recognize marked populate ui **use case** [img]//images/simulscantutorialimages/example_documentjpg text barcode needed display repeatedly [img]//images/simulscantutorialimages/example_document_requirementjpg suppose highlighted characters **problem** required number painful field individually decode **solution** handy captures upto barcodes populating ###prerequisites supported tc55 rev kitkat tc75 > note built os devices download latest [SupportCentral](https://support.zebra.com). log [https://simulscan.zebra.com](https://simulscan.zebra.com). [img]//images/simulscantutorialimages/template_builder_homejpg button [img]//images/simulscantutorialimages/choose_document_typejpg based format structured targets provide path machine [img]//images/simulscantutorialimages/select_area_for_templatejpg [img]//images/simulscantutorialimages/create_new_templatejpg top left corner mytemplate press enter highlight app side section sections shipper's vat/gst shippers vatgst select ocr processing word check [img]//images/simulscantutorialimages/first_fieldjpg postal type [img]//images/simulscantutorialimages/second_fieldjpg [img]//images/simulscantutorialimages/template_with_both_fieldsjpg file created downloaded xml mytemplatexml put /sdcard/simulscan/templates device detect [img]//images/simulscantutorialimages/template_on_devicepng installing license features require follow steps request trial product manager andrewknight@zebracom copy licensexml received licensing server location sdcard upgrade software [246 tc75] launch settings -> phone –> legal information symbol licenses install mass deployment end customers stagenow post queries launchpad page team assist earliest project simulscantutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio enabling permissions modify application's manifestxml library set permission scan [img]//images/simulscantutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' add accessing androidpermissionwrite_external_storage' orientation portrait mode restrict adding line `` tag androidscreenorientation=portrait [img]//images/simulscantutorialimages/manifest_permissions_addedjpg ##adding code references libraries java import comsymbolemdkemdkmanager comsymbolemdksimulscansimulscandata comsymbolemdksimulscansimulscanreader comsymbolemdksimulscansimulscanstatusdata make activity implement interfaces [emdklistener]/emdk-for-android/6-0/api/core/emdkmanager-emdklistener emdkmanager [simulscanreaderdatalisterner]/emdk-for-android/6-0/api/simulscan/simulscanreader-datalisterner interface notifying client applications override `ondata` method receive scanned [simulscanreaderstatuslisterner]/emdk-for-android/6-0/api/simulscan/simulscanreader-statuslisterner notify events `onstatus` status operation performed [View.OnClickListener](https://developer.android.com/reference/android/view/View.OnClickListener.html) `onclick` handle buttons [AdapterView.OnItemSelectedListener](https://developer.android.com/reference/android/widget/AdapterView.OnItemSelectedListener.html) `onitemselected` `onnothingselected` methods handling spinner public class mainactivity extends implements emdkmanageremdklistener simulscanreaderdatalisterner simulscanreaderstatuslisterner viewonclicklistener adapterviewonitemselectedlistener { @override void ondatasimulscandata simulscandata } onopenedemdkmanager onclosed onclickview onitemselectedadapterview parent view int long id onnothingselectedadapterview onstatussimulscanstatusdata simulscanstatusdata global variables hold instance objects [emdkmanager]/emdk-for-android/6-0/api/core/emdkmanager [simulscanmanager]/emdk-for-android/6-0/api/simulscan/simulscanmanager [simulscanreader]/emdk-for-android/6-0/api/simulscan/simulscanreader elements starting [TextView](https://developer.android.com/reference/android/widget/TextView.html) [Spinner](https://developer.android.com/guide/topics/ui/controls/spinner.html) list [Buttons](https://developer.android.com/guide/topics/ui/controls/button.html) stop reading readerinfolist `synchronized` simulscandatalist exception lastexception catch // managing logs private final static string = mainactivityclassgetcanonicalname textview displaying operations textviewstatus null selecting scanning deviceselectionspinner triggers readbutton stopreadbutton declare variable store object simulscanmanager holding emdkresults results physical reader simulscanreader selectedsimulscanreader collections synchronizedlistnew arraylist catches till [img]//images/simulscantutorialimages/variables_added_1jpg [img]//images/simulscantutorialimages/variables_added_2jpg design simple components explained remove inside res/layout/activity_mainxml layout `oncreate` reference declared order [Activity](https://developer.android.com/reference/android/app/Activity.html) respective onclick listeners call getemdkmanager initialized ready finally calls boxes returned callback emdkmanagergetemdkmanagergetapplicationcontext findviewbyidridstatus_view findviewbyidriddevices_spinner findviewbyidridbtn_start_read findviewbyidridbtn_stop_read update textviewstatussettextstatus + deviceselectionspinnersetonitemselectedlistenerthis readbuttonsetonclicklistenerthis stopreadbuttonsetonclicklistenerthis resultsstatuscode emdkresultsstatus_codesuccess failed complete [img]//images/simulscantutorialimages/on_create_addedjpg [emdk manager]/emdk-for-android/6-0/api/core/emdkmanager `onopened` `statusview` iterate added listener performing sequence issued thisemdkmanager getinstanceemdkmanagerfeature_typesimulscan == return simulscanmanagergetsupporteddevicesinfo namelist simulscanreaderinfo rinfo namelistaddrinfogetfriendlyname item selected additemsonspinnerdeviceselectionspinner [img]//images/simulscantutorialimages/on_opened_methodjpg error `additemsonspinner` lets basically arguments adapter additemsonspinnerspinner arrayadapter dataadapter androidrlayoutsimple_spinner_item setdropdownviewresourceandroidrlayoutsimple_spinner_dropdown_item spinnersetadapterdataadapter [img]//images/simulscantutorialimages/add_items_on_spinner_methodjpg user initiate overridden [simulscanreaderinfo]/emdk-for-android/6-0/api/simulscan/simulscanreaderinfo pass `simulscanmanagerget` represents current initialize deinitialize simul parentequalsdeviceselectionspinner readerinfo readerinfolistgetposition deinitcurrentscanner getdevicereaderinfo initcurrentscanner simulscanexception eprintstacktrace [img]//images/simulscantutorialimages/on_item_selected_methodjpg simply de-initialize scanner [img]//images/simulscantutorialimages/on_nothing_selected_methodjpg `initcurrentscanner` `deinitcurrentscanner` errors setting throws selectedsimulscanreaderaddstatuslistenerthis selectedsimulscanreaderadddatalistenerthis selectedsimulscanreaderenable notifications removing canceling pending reads selectedsimulscanreaderisreadpending selectedsimulscanreadercancelread selectedsimulscanreaderisenabled selectedsimulscanreaderdisable selectedsimulscanreaderremovedatalistenerthis selectedsimulscanreaderremovestatuslistenerthis cancel disable [img]//images/simulscantutorialimages/init_deinit_scanner_methodsjpg life cycle `onstart` `onstop` onstart superonstart onstop superonstop [img]//images/simulscantutorialimages/on_start_methodjpg [img]//images/simulscantutorialimages/on_stop_methodjpg simulscanconfig parameters config setcurrentconfig selectedsimulscanreadergetconfig storage templatepath environmentgetexternalstoragedirectorytostring /simulscan/templates/mytemplatexml filetemplatepath simulscanmultitemplate simulscanmultitemplatesimulscanmanager urifromfilefile ifmytemplate configmultitemplate amount time milliseconds wait timing identification configidentificationtimeout configprocessingtimeout userconfirmationonscan true shows confirm sending configuserconfirmationonscan detected configautocapture enabled session write region images values configdebugmode false turn on/off audio feedback configaudiofeedback haptic confighapticfeedback led configledfeedback selectedsimulscanreadersetconfigconfig `setcurrentconfig` [img]//images/simulscantutorialimages/set_current_config_method_1jpg [img]//images/simulscantutorialimages/set_current_config_method_2jpg step `readcurrentscanner` `stopreadcurrentscanner` readcurrentscanner selectedsimulscanreaderread cancel/stop stopreadcurrentscanner [img]//images/simulscantutorialimages/start_stop_reading_scannerjpg ifvequalsreadbutton{ textviewstatuspostnew runnable run lastexceptiongetmessage ifvequalsstopreadbutton{ understand pressed stop/cancel updated viewstatus entire [img]//images/simulscantutorialimages/on_click_method_1jpg [img]//images/simulscantutorialimages/on_click_method_2jpg executing handled availability [simulscandata]/emdk-for-android/6-0/api/simulscan/simulscandata clear synchronized simulscandatalistclear simulscandatalistaddsimulscandata [img]//images/simulscantutorialimages/on_datajpg event occurs statusview thread statusdatarunnablesimulscanstatusdata [img]//images/simulscantutorialimages/on_status_methodjpg `statusdatarunnable` implementing taking [simulscanstatusdata]/emdk-for-android/6-0/api/simulscan/simulscanstatusdata argument constructor `simulscanstatusdatagetstate` statusdatarunnable statusdata thisstatusdata switch statusdatagetstate case disabled statusdatagetfriendlyname closed successfully break opened started idle stopped error- statusdataextendedinfogetextendedstatus unknown default [img]//images/simulscantutorialimages/status_data_runnable_1jpg [img]//images/simulscantutorialimages/status_data_runnable_2jpg `onclosed` abrupt closing unexpectedly [img]//images/simulscantutorialimages/on_closedjpg coding configuration part stored running connect runtime usb port debug [img]//images/simulscantutorialimages/home_screenpng message clicking supports internal camera [img]//images/simulscantutorialimages/spinnerpng opens [img]//images/simulscantutorialimages/place_doc_for_scanningpng searching place printed process outlining [img]//images/simulscantutorialimages/processing_templatepng [img]//images/simulscantutorialimages/parsed_datapng parsed displayed accept bottom correctness red background means re-scan pressing rescan [img]//images/simulscantutorialimages/re_scan_templatepng result correct shown illustrates [template Builder](https://simulscan.zebra.com). ##important programming tips## androidmanifestxml >note >* include deploying fail missing shared sd card ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use SimulScan APIs introduced in EMDK V 3.1, to capture critical data from documents.","url":"/emdk-for-android/6-0/tutorial/tutSimulScanAPI"},{"title":"Battery Intent Tutorial","keywords":"## overview symbol devices mc40 extra battery information retrieved standard [android Intent](https://developer.android.com/training/monitoring-device-state/battery-monitoring.html). setting receive consumer android data returned application includes * backup voltage manufacture date serial number part unique id rated capacity charge cycle count enabling receiver java mintent_receiver = intent_receiver mintentfilter intentfilter mintentfilteraddactionintentaction_battery_changed registerreceivermintent_receivermintentfilter processing code specific provided [battery intent]/emdk-for-android/6-0/guide/reference/refbatteryintent extras notice values strings integers public void onreceivecontext context intent { battery_state_changed_intentequalsintentgetaction int bkvoltage intentgetextrasgetintbkvoltage string mfd intentgetextrasgetstringmfd serialnumber intentgetextrasgetstringserialnumber partnumber intentgetextrasgetstringpartnumber uniqueid intentgetextrasgetstringuniqueid ratedcapacity intentgetextrasgetintratedcapacity intentgetextrasgetintcycle } downloading sample download source project [associated sample]/emdk-for-android/6-0/guide/sample/samplebatteryintent ","summary":"\nOverview\nOn Symbol devices like the MC40, extra battery information can be retrieved using the standard Android Battery Intent. Setting up to receive this information is the same as with consumer Android devices.","url":"/emdk-for-android/6-0/tutorial/tutbatteryintent"},{"title":"Data Capture Intents Tutorial","keywords":"## overview datawedge android ability output captured data intents article describes intent plug-in capture api receive native application knowledge programming familiarity mechanism assumed read section integrator guide device layout tutorial created blank activity added xml things note imageview edittext widgets widget effectively act button toggle scanner pressing trigger display strings bundle retrieving intentgetstringtextra intentgetserializableextra methods ### items list item names * string source_tag = commotorolasolutionsemdkdatawedgesource source msr data_string_tag commotorolasolutionsemdkdatawedgedata_string case concatenated bar codes decode single tracks label_type_tag commotorolasolutionsemdkdatawedgelabel_type label type code decode_data_tag commotorolasolutionsemdkdatawedgedecode_data returned byte arrays cases array bar-code symbologies support concatenation codabar code128 micropdf decoded stored multiple clients passing index future related intent's retrieved calls tags msr_data_tag commotorolasolutionsemdkdatawedgemsr_data msr_track1_tag commotorolasolutionsemdkdatawedgemsr_track1 track msr_track2_tag commotorolasolutionsemdkdatawedgemsr_track2 msr_track3_tag commotorolasolutionsemdkdatawedgemsr_track3 msr_track1_status_tag commotorolasolutionsemdkdatawedgemsr_track1_status status integer successful msr_track2_status_tag commotorolasolutionsemdkdatawedgemsr_track2_status msr_track3_status_tag commotorolasolutionsemdkdatawedgemsr_track3_status msr_track1_encrypted_tag commotorolasolutionsemdkdatawedgemsr_track1_encrypted encrypted msr_track2_encrypted_tag commotorolasolutionsemdkdatawedgemsr_track2_encrypted msr_track3_encrypted_tag commotorolasolutionsemdkdatawedgemsr_track3_encrypted msr_track1_hashed_tag commotorolasolutionsemdkdatawedgemsr_track1_hashed hashed msr_track2_hashed_tag commotorolasolutionsemdkdatawedgemsr_track2_hashed msr_track3_hashed_tag commotorolasolutionsemdkdatawedgemsr_track3_hashed soft scan action_softscantrigger commotorolasolutionsemdkdatawedgeapiaction_softscantrigger action extra_param commotorolasolutionsemdkdatawedgeapiextra_parameter parameter passed perform actions recognized dwapi_start_scanning start_scanning start scanning dwapi_stop_scanning stop_scanning stop dwapi_toggle_scanning toggle_scanning >in handling incoming handled overriding onnewintent method java @override public void onnewintentintent { handledecodedatai } *handledecodedata* responsible formatting adding end edit box private handledecodedataintent // check igetactioncontentequalscommotorolasolutionsemdksampledwdemosamplerecvr define hold igetstringextrasource_tag save == null igetstringextradata_string_tag variable length data_len set datalength barcode sourceequalsignorecasescanner && > symbology slabeltype igetstringextralabel_type_tag empty slabeltypelength format label-type-symbology skip label-type- portion slabeltypesubstring11 unknown construct beginning + data_lentostring \\r\\n sourceequalsignorecasemsr view edittextfindviewbyidrideditbox text editable txt etgettext put spannable builder spannablestringbuilder stringbuilder spannablestringbuildertxt add constructed earlier stringbuilderappendout highlight bold stringbuildersetspannew stylespantypefacebold txtlength stringbuilderlength spannablestringspan_exclusive_exclusive line stringbuilderappenddata update etsettextstringbuilder cursor position etsetselectiontxtlength toggling toggles time image tapped img findviewbyidriddwdemo_logo imgsetonclicklistenernew onclicklistener onclickview isetactionaction_softscantrigger iputextraextra_param dwdemoactivitythissendbroadcasti toastmaketextvgetcontext toggled toastlength_shortshow putting final class package commotorolasolutionsemdksampledwdemosample import androidosbundle androidappactivity androidcontentintent androidgraphicstypeface androidviewview androidviewviewonclicklistener androidwidgetedittext androidwidgetimageview androidwidgettoast androidtexteditable androidtextspannablestring androidtextspannablestringbuilder androidtextstylestylespan mainactivity extends tag logging errors static mainactivityclassgetsimplename ourintentaction commotorolasolutionsemdksampledwdemosamplerecvr oncreatebundle savedinstancestate superoncreatesavedinstancestate setcontentviewrlayoutactivity_main field handle onclick event findviewbyidridlogo shoot create declared dw broadcast mainactivitythissendbroadcasti provide feedback user launched startactivity getintent override igetactioncontentequalsourintentaction defining filters dealt coding inform system implicit intent-filter androidintentcategorydefault category defined configure profile configured send instance launch mode task androidlaunchmode=singletask androidmanifestxml configuring desired steps started give dwdemosample apps tap menu app/activity select commotorolasolutionsemdksampledwdemosamplemainactivty back disable keystroke enable enter summary sample covered receiving barcode/msr sending download project [associated sample]/emdk-for-android/6-0/guide/sample/sampledatacaptureintent ","summary":"\nOverview\nDataWedge on Android has the ability to output captured data via Intents. This article describes how to use the DataWedge Intent output plug-in and the Data Capture API to receive captured data in your native Android application.","url":"/emdk-for-android/6-0/tutorial/tutdatacaptureintent"},{"title":"Data Capture Profile Feature Tutorial","keywords":"## developing emdk android application part guide walk creating [data capture profiles]/emdk-for-android/6-0/mx/data-capture/barcode barcode data [keystroke output]/emdk-for-android/6-0/mx/data-capture/keystroke feature [emdk profiles]/emdk-for-android/6-0/mx/ project > note provide emdksample tutorial start studio [project]/emdk-for-android/6-0/tutorial/tutcreateprojectandroidstudio adding datacapture profile click [here]/emdk-for-android/6-0/guide/profile-manager/ add specific manager datacaptureprofile make access similar code features left hand side editor window select list arrow activityselection selected activities enabled automatically activity foreground [img]//images/setup/image051jpg parameter populated field user defined identify required editing programmatically scope empty parameters applications package apply inside [img]//images/setup/image061jpg [img]//images/setup/image063jpg enable change [img]//images/setup/image067jpg [img]//images/setup/image069jpg [img]//images/setup/image071jpg keystroke [img]//images/setup/image073jpg [img]//images/setup/image075jpg [img]//images/setup/image077jpg finish [img]//images/setup/image079jpg close >note >now emdkconfigxml created \\assets folder file definition profiles create inspect reflecting made gui earlier advised manually updated controlled [img]//images/setup/image083jpg [img]//images/setup/image085jpg enabling permissions modify application's manifestxml library set permission [img]//images/setup/image087jpg comsymbolemdkpermissionemdk' xml [img]//images/setup/image089jpg ##adding references libraries java import comsymbolemdk* comsymbolemdkemdkmanageremdklistener extend implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager //assign private string profilename = //declare variable store object mprofilemanager null oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return status ifresultsstatuscode == status_codefailure //failed [img]//images/setup/image091jpg `onopened` reference interface trigger event implemented order apis pass assign `emdkmanager` previous steps `mprofilemanager` rest thisemdkmanager //get process emdkmanagergetinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose ifmprofilemanager try{ string[] modifydata string[1] //call processprfoile flag mprofilemanagerprocessprofileprofilename profilemanagerprofile_flagset }catch exception ex{ handle onopened [img]//images/setup/image095jpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/setup/image093jpg remove default textview res/layout/activity_mainxml edittext ui called edittextbarcode connect device latest runtime usb port >make debug run [img]//images/setup/image103png press scan scanned edit text added [img]//images/setup/image104png ##important programming tips## androidmanifestxml >* include wizard scanner supported considered auto bt_laser1 bt_imager1 bt_camera1 installing deploying symbol fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned basics [next tutorial]/emdk-for-android/6-0/tutorial/tutdatacaptureprofilept2 show [intent output]/emdk-for-android/6-0/mx/data-capture/intent output ","summary":"Developing an EMDK for Android Application Part 1\n\nThis guide will walk you through creating an EMDK For Android application that will use Data Capture Profiles to get barcode data into your application using the KeyStroke output feature of EMDK Profiles.","url":"/emdk-for-android/6-0/tutorial/tutdatacaptureprofile"},{"title":"Using Intent Output With DataCapture Profiles","keywords":"## developing emdk android application part tutorial walk adding [intent output]/emdk-for-android/6-0/mx/data-capture/intent support made [developing 1]/emdk-for-android/6-0/tutorial/tutdatacaptureprofile assume project state end build top follow previous step download source start organized existing features discussed ###prerequisites * completion intents datacapture profile select emdksample package explorer click menu present top-bar manager option window [img]//images/setup/image105jpg datacaptureprofile edit intent list add selected clicking arrow > note field user defined identify output feature required editing specific programmatically scope empty [img]//images/setup/image106jpg configure parameters switch enable action enter comsymbolemdksamplerecvr category androidintentcategorydefault delivery send startactivity basic data formatting configuration [img]//images/setup/image107jpg apply finish close >note >now emdkconfigxml \\assets folder updated ##adding filter open application's manifestxml file [img]//images/setup/image211jpg make application'smanifestxml parameter activity settings singletask mode xml androidlaunchmode=singletask lines receive [img]//images/setup/image108jpg >* match code imports program java import androidcontentintent androidwidgettextview [img]//images/setup/image109jpg function processing //this responsible private void handledecodedataintent { } [img]//images/setup/image110jpg oncreate check //in case launched datawedge plug-in = getintent handledecodedatai [img]//images/setup/image112jpg overide onnewintent handle incoming //we override method @override public onnewintentintent [img]//images/setup/image111jpg textview ui called textviewbarcode inside res/layout/activity_mainxml [img]//images/setup/image113jpg global variable //declare store null [img]//images/setup/image114jpg //get findviewbyidridtextviewbarcode [img]//images/setup/image115jpg handledecodedata confirm meant //check igetactioncontentequalscomsymbolemdksamplerecvr [img]//images/setup/image116jpg barcode string igetstringextracommotorolasolutionsemdkdatawedgesource scanner ifsourceequalsignorecasescanner [img]//images/setup/image117jpg retrieve igetstringextracommotorolasolutionsemdkdatawedgedata_string received ifdata && datalength [img]//images/setup/image118jpg populate revived //display text view textviewbarcodesettextdata + [img]//images/setup/image119jpg connect device latest runtime usb port >make debug run [img]//images/setup/image120png press trigger button scan scanned populated keystroke [img]//images/setup/image121png [next tutorial]/emdk-for-android/6-0/tutorial/tutdatacaptureprofilept3 show multiple capture profiles handled activities ","summary":"Developing an EMDK for Android Application Part 2\n\nThis tutorial will walk you through adding Intent Output support to the EMDK For Android application you made using Developing an EMDK for Android Application Part 1.","url":"/emdk-for-android/6-0/tutorial/tutdatacaptureprofilePt2"},{"title":"Using Multiple Data Capture Profiles","keywords":"## developing emdk android application part guide walk adding msr support multiple profiles made [developing 2]/emdk-for-android/6-0/tutorial/tutdatacaptureprofilept2 tutorial add complexity screen data capture profile ###prerequisites * completion 1]/emdk-for-android/6-0/tutorial/tutdatacaptureprofile information setting [setup]/emdk-for-android/6-0/guide/setup ##adding activity start defining activate listens select emdksample project click create msractivity completed listen display user msrcompletedactivity ##updating main update mainactivity button launch activity_mainxml package explorer studio opening xml [img]//images/setup/image129jpg mainactivityjava [img]//images/setup/image130jpg imports java import androidwidgetbutton androidviewview androidviewviewonclicklistener [img]//images/setup/image131jpg declare variable inside store buttonmsr //declare private = null [img]//images/setup/image132jpg oncreate reference [img]//images/setup/image133jpg onclicklistener //add buttonmsrsetonclicklistenerbuttonmsronclick [img]//images/setup/image134jpg //onclicklistener buttonmsronclick { public void onclickview } [img]//images/setup/image135jpg code onclick //launch intent myintent intentmainactivitythis msractivityclass startactivitymyintent [img]//images/setup/image136jpg ##creating ui activity_msrxml remove default textview [img]//images/setup/image138jpg send startactivity menu present top-bar manager option window [img]//images/setup/image139jpg [img]//images/setup/image140jpg provide datacaptureprofilemsr > note make access similar [img]//images/setup/image141jpg activityselection list features selected arrow field defined identify feature required editing specific programmatically scope empty [img]//images/setup/image142jpg selection [img]//images/setup/image143jpg enter comsymbolemdksample apply [img]//images/setup/image144jpg [img]//images/setup/image145jpg input [img]//images/setup/image146jpg change enable [img]//images/setup/image147jpg [img]//images/setup/image148jpg configure parameters switch output action comsymbolemdksamplerecvrmsr category androidintentcategorydefault delivery basic formatting configuration [img]//images/setup/image149jpg finish [img]//images/setup/image150jpg close >note >now emdkconfigxml file \\assets folder updated filter manifest open application's manifestxml [img]//images/setup/image151jpg comsymbolemdksamplemsrcompletedactivity revive [img]//images/setup/image152jpg >* match ##registering register [img]//images/setup/image153jpg hold //assign handling string profilenamemsr [img]//images/setup/image154jpg onopened //call processprfoile results mprofilemanagerprocessprofileprofilenamemsr profilemanagerprofile_flagset modifydata ifresultsstatuscode == status_codefailure //failed set [img]//images/setup/image155jpg [img]//images/setup/image157jpg ##handling intents capturing displaying result msrcompletedactivityjava [img]//images/setup/image158jpg androidcontentintent androidwidgettextview [img]//images/setup/image159jpg function processing //this responsible handledecodedataintent [img]//images/setup/image160jpg check //in case launched datawedge plug-in getintent handledecodedatai [img]//images/setup/image161jpg overide onnewintent handle incoming //we override method @override onnewintentintent [img]//images/setup/image162jpg global textviewmsrdata [img]//images/setup/image163jpg //get textviewbarcode findviewbyidridtextviewmsrdata [img]//images/setup/image164jpg handledecodedata confirm meant //check igetactioncontentequalscomsymbolemdksamplerecvrmsr [img]//images/setup/image165jpg source igetstringextracommotorolasolutionsemdkdatawedgesource ifsourceequalsignorecasemsr [img]//images/setup/image166jpg retrieve igetstringextracommotorolasolutionsemdkdatawedgedata_string received ifdata && datalength [img]//images/setup/image167jpg populate revived //display textviewmsrdatasettextdata + [img]//images/setup/image168jpg ##running lastly run test connect device latest runtime usb port >make debug [img]//images/setup/image169png press trigger scan barcode scanned populated edit text previous keystroke view [img]//images/setup/image170png [img]//images/setup/image171png swipe cad [img]//images/setup/image172png return back card hit [next tutorial]/emdk-for-android/6-0/tutorial/tutdatacaptureprofilept4 show broadcast starting ","summary":"Developing an EMDK for Android Application Part 3\n\nThis guide will walk you through adding MSR support and multiple profiles to the Android application you made using Developing an EMDK for Android Application Part 2.","url":"/emdk-for-android/6-0/tutorial/tutdatacaptureprofilePt3"},{"title":"Using Broadcast Intent in DataCapture Profiles","keywords":"## developing emdk android application part guide walk adding broadcast intent support made [developing 3]/emdk-for-android/6-0/tutorial/tutdatacaptureprofilept3 ###prerequisites * completion 1]/emdk-for-android/6-0/tutorial/tutdatacaptureprofile 2]/emdk-for-android/6-0/tutorial/tutdatacaptureprofilept2 information setting [setup]/emdk-for-android/6-0/guide/setup ##using wizard intents ###adding activity add listening displaying barcode data user select emdksample package explorer studio click create empty broadcastintentactivity ###updating main update mainactivity button launch activity_mainxml opening xml [img]//images/setup/image171jpg mainactivityjava [img]//images/setup/image172jpg declare variable inside store buttonbroadcastintent java //declare private = null [img]//images/setup/image173jpg oncreate reference //get findviewbyidridbuttonbroadcastintent [img]//images/setup/image174jpg onclicklistener buttonmsr //add buttonbroadcastintentsetonclicklistenerbuttonbroadcastintentonclick [img]//images/setup/image175jpg //onclicklistener buttonbroadcastintentonclick { public void onclickview } [img]//images/setup/image176jpg code onclick //launch myintent intentmainactivitythis broadcastintentactivityclass startactivitymyintent [img]//images/setup/image177jpg ###creating ui activity_msrxml remove default textview [img]//images/setup/image179jpg profile capture active send project menu present top-bar manager option window [img]//images/setup/image180jpg [img]//images/setup/image181jpg provide datacaptureprofilebroadcastintent tutorial > note make access similar [img]//images/setup/image182jpg activityselection list features selected arrow field defined identify feature required editing specific programmatically scope [img]//images/setup/image_data_capture_broadcast_activity_selectionjpg selection [img]//images/setup/image143jpg enter comsymbolemdksample apply [img]//images/setup/image144jpg [img]//images/setup/image183jpg [img]//images/setup/image184jpg change scanner input enable [img]//images/setup/image185jpg [img]//images/setup/image186jpg configure parameters switch output action comsymbolemdksamplerecvrbi delivery basic formatting configuration [img]//images/setup/image187jpg finish [img]//images/setup/image188jpg close >note >now emdkconfigxml file \\assets folder updated ###registering register [img]//images/setup/image189jpg hold //assign handling string profilenamebroadcastintent [img]//images/setup/image190jpg onopened //call processprfoile results mprofilemanagerprocessprofileprofilenamebroadcastintent profilemanagerprofile_flagset modifydata ifresultsstatuscode == status_codefailure //failed set [img]//images/setup/image191jpg ###handling newt listen display side broadcastintentactivityjava [img]//images/setup/image192jpg imports import androidcontentbroadcastreceiver androidcontentcontext androidcontentintent androidcontentintentfilter androidwidgettextview [img]//images/setup/image193jpg global textviewdata [img]//images/setup/image194jpg function handle findviewbyidridtextviewdata [img]//images/setup/image195jpg receiver broadcastreceiver emdkreceiver [img]//images/setup/image196jpg override onresume @override protected // todo auto-generated method stub superonresume [img]//images/setup/image197jpg onpause superonpause [img]//images/setup/image198jpg filter //create intentfilter intentfiltercomsymbolemdksamplerecvrbi [img]//images/setup/image199jpg [img]//images/setup/image200jpg onreceive onreceivecontext context [img]//images/setup/image201jpg check coming source intentgetstringextracommotorolasolutionsemdkdatawedgesource //check ifsourceequalsignorecasescanner{ [img]//images/setup/image202jpg intentgetstringextracommotorolasolutionsemdkdatawedgedata_string received ifdata && datalength 0{ [img]//images/setup/image203jpg //display text view textviewdatasettextdata + [img]//images/setup/image204jpg //register thisregisterreceiveremdkreceiver [img]//images/setup/image205jpg unregister [img]//images/setup/image206jpg ###running application### lastly run test connect device latest runtime usb port >make debug [img]//images/setup/image207png press trigger scan [img]//images/setup/image208png scanned populated edit previous keystroke datawedge [img]//images/setup/image209png [img]//images/setup/image210png back rerun screen msr [img]//images/setup/image171png swipe cad [img]//images/setup/image172png return card hit ","summary":"Developing an EMDK for Android Application Part 4\n\nThis guide will walk you through adding broadcast intent support to the Android application you made using Developing an EMDK for Android Application Part 3.","url":"/emdk-for-android/6-0/tutorial/tutdatacaptureprofilePt4"}]