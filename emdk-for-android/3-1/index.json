[{"title":"PersonalShopper APIs","keywords":">supported devices * mc18kk ","summary":"Supported Devices:\nMC18KK\n\n","url":"/emdk-for-android/3-1/api/PersonalShopper"},{"title":"Cradle","keywords":"class communicate mc18 cradle ##public methods ### enable **public void enable** method enables communication interact **returns** **throws** comsymbolemdkpersonalshoppercradleexception disable disable** disables isenabled boolean isenabled** check enabled getcradleinfo cradleinfo getcradleinfo** information comsymbolemdkpersonalshoppercradleinfo unlock cradleresults unlockint unlockduration cradleledflashinfo ledflashinfo** unlocks terminal flashes led timeout represents duration remains unlocked locked seconds range minimum maximum continuous lead heating hardware failure blinking red led's fail cool **parameters** ledflashinfo comsymbolemdkpersonalshoppercradleresults flashled flashledint ledflashcount flashed identify device location unlocking fields ###config field access configuration **type** comsymbolemdkpersonalshoppercradleconfig ","summary":"\nClass to communicate with the MC18 cradle.\n\nPublic Methods\n\n enable\n\npublic void enable()\n\nThis method enables the communication to interact with the cradle.","url":"/emdk-for-android/3-1/api/PersonalShopper/Cradle"},{"title":"CradleConfig","keywords":"class access cradle configuration ##public methods ### getlocation **public cradlelocation getlocation** location **returns** comsymbolemdkpersonalshoppercradleconfigcradlelocation **throws** comsymbolemdkpersonalshoppercradleexception setlocation int setlocationcradleconfigcradlelocation cradlelocation** sets **parameters** setfastchargingstate setfastchargingstateboolean isfastchargingstate** fast charging state true false slow isfastchargingstate enable charge getfastchargingstate boolean getfastchargingstate** returned ","summary":"\nThe class to access cradle configuration.\n\nPublic Methods\n\n getLocation\n\npublic CradleLocation getLocation()\n\nGets the cradle location.\n\nReturns:\n\ncom.symbol.emdk.personalshopper.CradleConfig.CradleLocation\n\nThrows:\n\ncom.symbol.emdk.personalshopper.CradleException\n\nsetLocation\n\npublic int setLocation(CradleConfig.CradleLocation cradleLocation)\n\nSets the cradle location.","url":"/emdk-for-android/3-1/api/PersonalShopper/CradleConfig"},{"title":"CradleConfig.CradleLocation","keywords":"class access cradle location values modified effective calling setconfig ##constructors ###cradlelocation constructor **parameters** wall **type** int row column ##public fields ###wall identification number ###row ###column ","summary":"\nThe class for provides access to the cradle location. \n The values modified will take effective only by calling setConfig().\n\nConstructors\n\nCradleLocation\n\nConstructor\n\nParameters:\n\nwall\n\nType: int\n\nrow\n\nType: int\n\ncolumn\n\nType: int\n\nPublic Fields\n\nwall\n\nThe wall identification number.","url":"/emdk-for-android/3-1/api/PersonalShopper/CradleConfig-CradleLocation"},{"title":"CradleException","keywords":"methods cradle api throws cradleexception error occurs due client incorrectly unexpected occurred ##public ### getresult **public cradleresults getresult** returns enum **returns** comsymbolemdkpersonalshoppercradleresults ","summary":"\nThe methods of cradle API throws CradleException when an error\n occurs.\n\nThe error could be due to:\n\nClient using the API incorrectly\nOr because an unexpected error occurred\n\nPublic Methods\n\n getResult\n\npublic CradleResults getResult()\n\nReturns the CradleResults enum.","url":"/emdk-for-android/3-1/api/PersonalShopper/CradleException"},{"title":"CradleInfo","keywords":"class holds cradle information ##public methods ### getserialnumber **public string getserialnumber** returns serial number empty returned **returns** javalangstring getpartnumber getpartnumber** part getdateofmanufacture getdateofmanufacture** date manufacture format mm/dd/yy 4/10/2014 means april gethardwareid gethardwareid** hardware id getfirmwareversion getfirmwareversion** return firmware version ","summary":"\nThis class holds cradle information.\n\nPublic Methods\n\n getSerialNumber\n\npublic String getSerialNumber()\n\nReturns the serial number of the cradle. The empty string returned if not available.","url":"/emdk-for-android/3-1/api/PersonalShopper/CradleInfo"},{"title":"CradleLedFlashInfo","keywords":"class hold led flash settings ##constructors ###cradleledflashinfo constructor instantiate cradleledconfig **parameters** onduration **type** int offduration smootheffect boolean ##public fields ###onduration cradle time millisecondsthis msecs range msec minimum maximum seconds ###offduration ###smootheffect enable disable smooth effect blinking ","summary":"\nThe class to hold the LED Flash settings.\n\nConstructors\n\nCradleLedFlashInfo\n\nConstructor to instantiate the CradleLEDConfig.\n\nParameters:\n\nonDuration\n\nType: int\n\noffDuration\n\nType: int\n\nsmoothEffect\n\nType: boolean\n\nPublic Fields\n\nonDuration\n\nCradle LED on time in milliseconds.This is in mSecs and the range is from 0 mSec (minimum) to 65535 mSec (maximum) seconds.","url":"/emdk-for-android/3-1/api/PersonalShopper/CradleLedFlashInfo"},{"title":"CradleResults","keywords":"defines error codes cradle api returns **values** * **success** -success **failure** -failure **already_enabled** -already enabled **already_unlocked** unlocked **already_disabled** disabled **already_in_use** **feature_not_supported** -feature supported **invalid_value** -invalid **not_enabled** -not **invalid_object** object **undefined** -error code defined ","summary":"\nDefines all the error codes the cradle API returns.\n brbr\n\nValues:\n\nSUCCESS -Success.\n\nFAILURE -Failure\n\nALREADY_ENABLED -Already enabled.\n\nALREADY_UNLOCKED -Already unlocked.","url":"/emdk-for-android/3-1/api/PersonalShopper/CradleResults"},{"title":"Diagnostic","keywords":"class access fetch diagnostics information **example usage** java paramid diagnosticdata = psobjectdiagnosticgetdiagnosticdatadiagnosticparamid diagnosticconfig ##public methods ### getdiagnosticdata **public getdiagnosticdataint diagnosticconfig** values parameters parameter id **parameters** **returns** comsymbolemdkpersonalshopperdiagnosticdata **throws** comsymbolemdkpersonalshopperdiagnosticexception ","summary":"\nThis class provides access to fetch the diagnostics information.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tparamId\n\tDiagnosticData diagnosticData =  PsObject.diagnostic.getDiagnosticData(DiagnosticParamId paramId\n\t,DiagnosticConfig diagnosticconfig);\n\nPublic Methods\n\n getDiagnosticData\n\npublic DiagnosticData getDiagnosticData(int paramId, DiagnosticConfig diagnosticconfig)\n\nGet the values for all the parameters or the specified parameter ID.","url":"/emdk-for-android/3-1/api/PersonalShopper/Diagnostic"},{"title":"DiagnosticConfig","keywords":"diagnostic configuration class configured calling diagnostics parameter data configures average current shopping trip minutes ##constructors ###diagnosticconfig diagnosticsconfig constructor **parameters** averagecurrent ma **type** int tripinminutes mins ##public fields ###averagecurrent consumption default selected based running ###tripinminutes duration generated ","summary":"\nThe diagnostic configuration class has to be configured before calling the get diagnostics parameter data.\n This class configures average current and Shopping trip in minutes.","url":"/emdk-for-android/3-1/api/PersonalShopper/DiagnosticConfig"},{"title":"DiagnosticData","keywords":"diagnostic data ##constructors ###diagnosticdata **parameters** svcdiagnosticdata **type** comsymbolemdkemdkservicediagnosticsvcdiagnosticdata ##public fields ###batterytimetoempty remaining capacity battery minutes default -1 assigned parameter requested failed int ###batterystateofcharge predicted terms percentage ###batterystateofhealth health state soh rated ###batterychargingtime time needed terminal cradle reach duration shopping trip device charging displays note supported returns 0xffffh65535 ###batterychargingtimeelapsed charged current charge cycle ###timesincebatteryreplaced days replaced ###timesincereboot cold booted ###batterydateofmanufacture manufacture date format year/mm/date empty string request javalangstring ","summary":"\nThe diagnostic data.\n\nConstructors\n\nDiagnosticData\n\nParameters:\n\nsvcDiagnosticData\n\nType: com.symbol.emdk.emdkservice.diagnostic.SvcDiagnosticData\n\nPublic Fields\n\nbatteryTimeToEmpty\n\nThe remaining capacity of the battery in minutes.","url":"/emdk-for-android/3-1/api/PersonalShopper/DiagnosticData"},{"title":"DiagnosticException","keywords":"methods diagnostic api throws diagnosticexception error occurs due client incorrectly unexpected occurred ##public ### getresult **public diagnosticresults getresult** returns enum **returns** comsymbolemdkpersonalshopperdiagnosticresults ","summary":"\nThe methods of diagnostic API throws DiagnosticException when an error\n occurs.\nThe error could be due to:\n\nClient using the API incorrectly\nOr because an unexpected error occurred\n\nPublic Methods\n\n getResult\n\npublic DiagnosticResults getResult()\n\nReturns the DiagnosticResults enum.","url":"/emdk-for-android/3-1/api/PersonalShopper/DiagnosticException"},{"title":"DiagnosticParamId","keywords":"diagnostic parameter ids ##constructors ###diagnosticparamid ##public fields ###battery_state_of_health battery health percentage state soh capacity rated **type** int ###battery_time_to_empty remaining minutes ###battery_state_of_charge ###battery_date_of_manufacture manufacturing date dd/mm/year format ###battery_charging_time time needed terminal cradle reach requested duration shopping trip supported returns 0xffffh ###time_since_battery_replaced days replaced ###time_since_reboot device cold booted ###battery_charging_time_elapsed charged current charge cycle ###battery_status_all parametersexcept reboot ###all diagnostics including ","summary":"\nThe diagnostic parameter IDs.\n\nConstructors\n\nDiagnosticParamId\n\nPublic Fields\n\nBATTERYSTATEOF_HEALTH\n\nBattery health in percentage. State of Health (SOH) is the battery capacity as percentage of its rated capacity.","url":"/emdk-for-android/3-1/api/PersonalShopper/DiagnosticParamId"},{"title":"DiagnosticResults","keywords":"defines error codes diagnostic api returns **values** * **success** -success **failure** -failure **feature_not_supported** -feature supported **invalid_value** -invalid **invalid_object** object **undefined** -error code defined ","summary":"\nDefines all the error codes the diagnostic API returns.\n brbr\n\nValues:\n\nSUCCESS -Success.\n\nFAILURE -Failure\n\nFEATURE_NOT_SUPPORTED -Feature not supported.","url":"/emdk-for-android/3-1/api/PersonalShopper/DiagnosticResults"},{"title":"PersonalShopper","keywords":"primary class access cradle diagnostics api extends emdkbase creates instance field communicate ##public fields ###cradle features **type** comsymbolemdkpersonalshoppercradle ###diagnostic feature comsymbolemdkpersonalshopperdiagnostic ","summary":"\nThis is the primary class to access the cradle and diagnostics API and this class is extends the EMDKBase class.  \nThis class creates the cradle instance field to communicate with the cradle.","url":"/emdk-for-android/3-1/api/PersonalShopper/PersonalShopper"},{"title":"Barcode APIs","keywords":">supported devices * mc18kk mc32n0jb mc40jb mc40kk mc67jb mc92kk tc55jb tc55kk tc70kk tc75kk ","summary":"Supported Devices:\nMC18KK\nMC32N0JB\nMC40JB\nMC40KK\nMC67JB\nMC92KK\nTC55JB\nTC55KK\nTC70KK\nTC75KK\n\n","url":"/emdk-for-android/3-1/api/barcode"},{"title":"BarcodeManager","keywords":"primary object access barcode scanning feature ##public methods ### getsupporteddevicesinfo **public list getsupporteddevicesinfo** returns supported scanner devices information **returns** javautillist getdevice getdevicescannerinfo scannerinfo** method info valid obtain barcodermanagergetsupporteddevices created singleton specific **parameters** scannerinfo comsymbolemdkbarcodescanner getdevicebarcodemanagerdeviceidentifier deviceidentifier** deviceidentifier device identifier specifies application addconnectionlistener void addconnectionlistenerbarcodemanagerscannerconnectionlistener connectionlistener** add scannerconnectionlistener receive connection callback connectionlistener removeconnectionlistener removeconnectionlistenerbarcodemanagerscannerconnectionlistener remove enums ###barcodemanagerconnectionstate states **values** * **connected** **disconnected** ###barcodemanagerdeviceidentifier defines type **default** **internal_camera1** **internal_imager1** **internal_laser1** **bluetooth_imager1** ","summary":"\nThis is the primary object to access the barcode scanning feature.\n \n \n\nPublic Methods\n\n getSupportedDevicesInfo\n\npublic List getSupportedDevicesInfo()\n\nReturns list of supported scanner devices information.","url":"/emdk-for-android/3-1/api/barcode/BarcodeManager"},{"title":"BarcodeManager.ConnectionState","keywords":"connection states scanner device **values** * **connected** **disconnected** ","summary":"\nConnection states of a scanner device.\n\nValues:\n\nCONNECTED\n\nDISCONNECTED\n\n","url":"/emdk-for-android/3-1/api/barcode/BarcodeManager-ConnectionState"},{"title":"BarcodeManager.DeviceIdentifier","keywords":"defines specific scanner devices type **values** * **default** **internal_camera1** **internal_imager1** **internal_laser1** **bluetooth_imager1** ","summary":"\nDefines specific scanner devices of each type.\n\nValues:\n\nDEFAULT\n\nINTERNAL_CAMERA1\n\nINTERNAL_IMAGER1\n\nINTERNAL_LASER1\n\nBLUETOOTH_IMAGER1\n\n","url":"/emdk-for-android/3-1/api/barcode/BarcodeManager-DeviceIdentifier"},{"title":"BarcodeManager.ScannerConnectionListener","keywords":"interface notifying client applications external scanner connected disconnected mobile device **example usage** java public class mainactivity extends activity implements scannerconnectionlistener ##public methods ### onconnectionchange **public void onconnectionchangescannerinfo scannerinfo barcodemanagerconnectionstate connectionstate** called notify **parameters** object affected connectionstate connection state **returns** ","summary":"\nAn interface for notifying client applications when the external scanner\n is connected or disconnected to the mobile device.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tpublic class MainActivity extends Activity implements ScannerConnectionListener\n\t..","url":"/emdk-for-android/3-1/api/barcode/BarcodeManager-ScannerConnectionListener"},{"title":"BarcodeManager.ScannerConnectionListener.ConnectionStatus","keywords":"connectionstatus class information status scanner connection ##constructors ###connectionstatus ##public methods ###getconnectionstate returns device state pluggable **returns** comsymbolemdkbarcode[barcodemanagerconnectionstate]barcodemanager#barcodemanagerconnectionstate ###getscannerinfo scannerinfo obj data returned [scannerinfo]scannerinfo ","summary":"\nThe ConnectionStatus class provides the information about status of scanner connection changes.\n\nConstructors\n\nConnectionStatus()\n\nPublic Methods\ngetConnectionState()\nReturns the device connection state of pluggable scanner.","url":"/emdk-for-android/3-1/api/barcode/BarcodeManager-ScannerConnectionListener-ConnectionStatus"},{"title":"Collection.ScanData","keywords":"scandata object information barcode data scanned **example usage** java arraylist scandatalist = scandatacollectiongetscandata forscandata { string scandatagetdata label_type labeltype scandatagetlabeltype timestamp scandatagettimestamp } **version** ##public methods ###getdata returns **returns** javalangstring ###getlabeltype label type comsymbolemdkbarcode[scandatacollectionlabeltype]scandatacollection#scandatacollectionlabeltype ###gettimestamp time format yyyy-mm-dd hhmmssnnnnnnnnn stamp ","summary":"\nThe ScanData object gives information on the barcode data scanned. \n\nExample Usage:\n\n\t:::java\n\tArrayListScanData scanDataList = scanDataCollection.getScanData();\n     for(ScanData scanData :scanDataList) { \n      String data = scanData.getData(); \n      LABEL_TYPE labelType = scanData.getLabelType(); \n      String timeStamp = scanData.getTimeStamp(); \n     }\n\nVersion:\n\n3.0\n\nPublic Methods\ngetData()\nReturns the scanned barcode data.","url":"/emdk-for-android/3-1/api/barcode/Collection-ScanData"},{"title":"InterfaceConfig","keywords":"**version** ##public fields ###displaybluetoothaddressbarcode > note default = true bluetooth imager scanners pairing process mobile computer scanner require scanning address set displayed barcode scannerenable function called feature eliminates open external tools utility order display user parameter he/she interfaceconfig class calling connected **type** boolean ###connectionestablishtime timeout seconds block returning connection established applicable int ","summary":"\n\nVersion:\n\n3.1\n\nPublic Fields\ndisplayBluetoothAddressBarcode\n\n Note: default = true\n\nWhen using Bluetooth (Imager) scanners, the pairing process between the mobile computer and Bluetooth scanner may require scanning the Bluetooth address of the mobile computer.","url":"/emdk-for-android/3-1/api/barcode/InterfaceConfig"},{"title":"ScanDataCollection","keywords":"scandatacollection object scanning result collection scandata ##public methods ### getfriendlyname **public string getfriendlyname** returns friendly scanner data returned **returns** javalangstring getresult scannerresults getresult** method obtain scanned **example usage** java results = scandatacollectiongetresult comsymbolemdkbarcodescannerresults getscandata arraylist getscandata** list scandatalist scandatacollectiongetscandata javautilarraylist enums ###scandatacollectionlabeltype label types label_typecode39 **values** * **auspostal** -the australian postal symbology **aztec** aztec **bookland** bookland ean **canpostal** canadian **chinese_2of5** chinese_2of5 **codabar** codabar **code11** code-11 **code128** code-128 **code32** code-32 **code39** code-39 **code93** code-93 **composite_ab** composite ab **composite_c** **coupon** coupon code **d2of5** discrete **datamatrix** datamatrix **dutchpostal** dutch **databar_coupon** databar **ean128** ean-128 **ean13** ean-13 **ean8** ean-8 **gs1_databar** gs1_databar **gs1_databar_exp** gs1_databar_exp **gs1_databar_lim** gs1_databar_lim **i2of5** interleaved **iata2of5** iata **isbt128** isbt **jappostal** japanese **korean_3of5** korean 3of5 **matrix_2of5** matrix 2of5 **maxicode** maxicode **micropdf** micro pdf **microqr** qr **msi** msi **ocr** ocr **pdf417** **qrcode** qrcode **signature** signature **tlc39** tcif linked **trioptic39** trioptic **ukpostal** uk **upca** upc-a **upce0** upc-e0 **upce1** upc-e1 **us4state** us4state **us4state_fics** us4state_fics **usplanet** planet **uspostnet** postnet **webcode** scanlet webcode **mailmark** mailmark **hanxin** hanxin **undefined** unknown defined ","summary":"\nThe ScanDataCollection object gives scanning result and the collection of\n ScanData.\n \n \n\nPublic Methods\n\n getFriendlyName\n\npublic String getFriendlyName()\n\nReturns the friendly name of scanner for which the data is returned.","url":"/emdk-for-android/3-1/api/barcode/ScanDataCollection"},{"title":"ScanDataCollection.LabelType","keywords":"list label types scanner data **example usage** java label_typecode39 **values** * **auspostal** -the australian postal symbology **aztec** aztec **bookland** bookland ean **canpostal** canadian **chinese_2of5** chinese_2of5 **codabar** codabar **code11** code-11 **code128** code-128 **code32** code-32 **code39** code-39 **code93** code-93 **composite_ab** composite ab **composite_c** **coupon** coupon code **d2of5** discrete **datamatrix** datamatrix **dutchpostal** dutch **databar_coupon** databar **ean128** ean-128 **ean13** ean-13 **ean8** ean-8 **gs1_databar** gs1_databar **gs1_databar_exp** gs1_databar_exp **gs1_databar_lim** gs1_databar_lim **i2of5** interleaved **iata2of5** iata **isbt128** isbt **jappostal** japanese **korean_3of5** korean 3of5 **matrix_2of5** matrix 2of5 **maxicode** maxicode **micropdf** micro pdf **microqr** qr **msi** msi **ocr** ocr **pdf417** **qrcode** qrcode **signature** signature **tlc39** tcif linked **trioptic39** trioptic **ukpostal** uk **upca** upc-a **upce0** upc-e0 **upce1** upc-e1 **us4state** us4state **us4state_fics** us4state_fics **usplanet** planet **uspostnet** postnet **webcode** scanlet webcode **mailmark** mailmark **hanxin** hanxin **undefined** unknown defined ","summary":"\nList of label types of the scanner data\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tLABEL_TYPE.CODE39\n\nValues:\n\nAUSPOSTAL -The AUSTRALIAN POSTAL symbology.\n\nAZTEC -The AZTEC symbology\n\nBOOKLAND -The BOOKLAND EAN symbology.","url":"/emdk-for-android/3-1/api/barcode/ScanDataCollection-LabelType"},{"title":"ScanDataCollection.ScanData","keywords":"scandata object information barcode data scanned **example usage** java arraylist scandatalist = scandatacollectiongetscandata forscandata { string scandatagetdata label_type labeltype scandatagetlabeltype timestamp scandatagettimestamp } ##public methods ### getdata **public getdata** returns **returns** javalangstring getlabeltype getlabeltype** label type comsymbolemdkbarcodescandatacollectionlabeltype gettimestamp gettimestamp** time format yyyy-mm-dd hhmmssnnnnnnnnn ","summary":"\nThe ScanData object gives information on the barcode data scanned.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tArrayListScanData scanDataList = scanDataCollection.getScanData()\n\tfor(ScanData scanData :scanDataList) {\n\tString data = scanData.getData();\n\tLABEL_TYPE labelType = scanData.getLabelType();\n\tString timeStamp = scanData.getTimeStamp();\n\t}\n\nPublic Methods\n\n getData\n\npublic String getData()\n\nReturns the scanned barcode data.","url":"/emdk-for-android/3-1/api/barcode/ScanDataCollection-ScanData"},{"title":"Scanner","keywords":"scanner class represent access physical device **example usage** java = barcodemanagergetdevicedeviceidentiferdefault scannerenable scanneradddatalistenerthis scannerread scannercancelread scannerdisable ##public methods ### isenabled **public boolean isenabled** returns enabled state **returns** isreadpending isreadpending** read submitted pending getscannerinfo scannerinfo getscannerinfo** information comsymbolemdkbarcodescannerinfo getconfig scannerconfig getconfig** current configuration settings modifications made returned object scannersetconfigscannerconfig called effect calling config scannergetconfig comsymbolemdkbarcodescannerconfig **throws** comsymbolemdkbarcodescannerexception setconfig void setconfigscannerconfig scannerconfig** unsupported parameters method skips continues setting supported values scannerconfigscanparamsdecodeledtime **parameters** exception throw error occurs enable enable** enables hardware make scan turn laser applications throws scannerexceptions call disable scanning remain locked unavailable thrown fails disable** disables scanned data lost releases resources application release release** unusable requested barcodemanagergetdevice failure read** starts asynchronous put turned pressing trigger automatically determined scannertriggertype notification registered order request cancelled issuing cancelread fail recommended check submitting ondata onstatus events idle status received checking cancelread** cancels calls adddatalistener adddatalistenerscannerdatalistener listener** client register callbacks listener datalistener callabck removedatalistener removedatalistenerscannerdatalistener un-register addstatuslistener addstatuslistenerscannerstatuslistener removestatuslistener removestatuslistenerscannerstatuslistener getinterfaceconfig interfaceconfig getinterfaceconfig** comsymbolemdkbarcodeinterfaceconfig setinterfaceconfig setinterfaceconfiginterfaceconfig interfaceconfig** fields ###triggertype specifies type set hard default **type** comsymbolemdkbarcodescannertriggertype enums ###scannertriggertype list **values** * **hard** -hard mode user manually press **soft_once** -soft issued beam **soft_always** scans future reads ","summary":"\nScanner class will represent and provides access to the physical scanner\n device.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tScanner scanner = barcodeManager.getDevice(DeviceIdentifer.DEFAULT);\n\tscanner.enable();\n\tscanner.addDataListener(this);\n\tscanner.read();\n\tscanner.cancelRead();\n\tscanner.disable();\n\nPublic Methods\n\n isEnabled\n\npublic boolean isEnabled()\n\nReturns scanner enabled state.","url":"/emdk-for-android/3-1/api/barcode/Scanner"},{"title":"Scanner.DataListener","keywords":"interface notifying client applications scan data **example usage** java public class mainactivity extends activity implements datalistener ##public methods ### ondata **public void ondatascandatacollection scandatacollection** callback method availability **parameters** scandatacollection collection **returns** ","summary":"\nAn interface for notifying client applications when the scan data is\n available.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tpublic class MainActivity extends Activity implements DataListener\n\t..","url":"/emdk-for-android/3-1/api/barcode/Scanner-DataListener"},{"title":"Scanner.StatusListener","keywords":"interface notifying client applications notify scan events **example usage** java public class mainactivity extends activity implements statuslistener ##public methods ### onstatus **public void onstatusstatusdata statusdata** callback method status event occurs **parameters** statusdata object **returns** ","summary":"\nAn interface for notifying client applications to notify scan events.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tpublic class MainActivity extends Activity implements StatusListener\n\t..","url":"/emdk-for-android/3-1/api/barcode/Scanner-StatusListener"},{"title":"Scanner.TriggerType","keywords":"list supported trigger type **values** * **hard** -hard mode set user manually press device issuing read call **soft_once** -soft pending issued scan beam automatically **soft_always** scans future reads ","summary":"\nList of supported trigger type\n\nValues:\n\nHARD -Hard trigger. When this mode is set, the user has to manually press\n the trigger on the device after issuing the read call.","url":"/emdk-for-android/3-1/api/barcode/Scanner-TriggerType"},{"title":"ScannerConfig","keywords":"scannerconfig class access scanner configuration settings **example usage** java = scannergetconfigscannerconfig scannerconfigscanparamsdecodehapticfeedback true scannerconfigdecoderparamscodabarlength1 scannersetconfigscannerconfig ##public methods ### isparamsupported **public boolean isparamsupportedjavalangstring param** method helps check config parameters supported returns parameter field complete path till string format object names match fields defined config1 config1isparamsupportedconfig1scanparamsdecodehapticfeedback { config1scanparamsdecodehapticfeedback } config1isparamsupportedconfig1decoderparamscodabarenabled config1decoderparamscodabarenabled scannersetconfigconfig1 **parameters** param **returns** resettodefault void resettodefaultscanner scanner** resets defaults values unsupported left **throws** comsymbolemdkbarcodescannerexception ###skiponunsupported flag tells skip parameter/values continue stop setting set unsupported_param default skips params continues **type** comsymbolemdkbarcodescannerconfigskiponunsupported ###scanparams scanparams property scanning decoders note calling enable disable latest configdecoderparams configscannerparams configreaderparamss automatically comsymbolemdkbarcodescannerconfigscanparams ###decoderparams decoderparams decoder multiple symbologies enabled issupported configreaderparams comsymbolemdkbarcodescannerconfigdecoderparams ###readerparams readerparams holds reader global reads open handles comsymbolemdkbarcodescannerconfigreaderparams enums ###scannerconfigpreamble controls preamble applied bar code characters part upc symbol consisting country system character select option host preamblenone **values** * **none** -no **sys_char** -system **country_and_sys_char** -both ###scannerconfigisbt128contactmode concatenating pairs isbt128 types isbt128contactmodenever **never** -will ignore barcode pair output decode data barcodes **always** present decoded isbt codes order perform concatenation **auto** -decodes concatenates immediately single device number times datawedge redundancy code128 transmitting confirm additional ###scannerconfighanxininverse user decoding inverse hanxin hanxininversedisabled **disabled** -disables **enabled** -enables -allows positive ###scannerconfigsecuritylevel offers levels security upc/ean higher lower quality relationship speed choose level application securitylevellevel_0 **level_0** -this operate fastest providing **level_1** -as diminish prone misdecodes misdecoding poorly printed limited **level_2** -if **level_3** advised selecting extreme measure severely spec significantly impair ability improve ###scannerconfiglinearsecuritylevel sets read accurate linearsecuritylevelshort_or_codabar **short_or_codabar** -two short codabar **all_twice** **long_and_short** long **all_thrice** -three ###scannerconfigcheckdigittype verify integrity checkdigittypeno **no** -a digit **uss** -select interleaved symbols complies uniform symbology specification uss algorithm **opcc** optical product council opcc ###scannerconfigcheckdigit digits verified msi mandatory optional checkdigitone **one** -verify **two** ###scannerconfigverifycheckdigit selects mechanism verifycheckdigitno -do -bar ###scannerconfigcheckdigitscheme algorithms verification encode checkdigitschememod_11_10 **mod_11_10** -first mod **mod_10_10** ###scannerconfigucclinkmode describes ucc link mode state ucclinkmodelink_flag_ignored **link_flag_ignored** -1d component transmitted 2d detected **always_linked** components 1d **auto_discriminate** -the digital determines portion transmits ###scannerconfigpicklist imager directly cross-hair/reticle + pattern feature applications view session tar geted picklistdisabled picklist cross-hair reticle conjunction static dynamic viewfinder modes scan module ###scannerconfigcodeidtype id identifies type scanned insert prefix codeidtypenone **aim** standards based **symbol** ###scannerconfigsupplementalmode supplemental supplementalmodeno presented decodes ignores supplementals **smart** smart main block belong starts prefixes searches image aggressively failed returned **s_378_379** auto-discriminate starting disables reading **s_978_979** **s_414_419_434_439** **s_977** ###scannerconfigcouponreport coupon couponreportold **old** -scanner **new** gs1 databar **both** ###scannerconfigbooklandformat lists bookland formats booklandformatisbn_10 **isbn_10** -978 reported **isbn_13** -978/979 ean13 isbn-13 protocol ###scannerconfigviewfindermode configures camera viewfindermodeenabled -viewfinder displays images captured screen **static_recticle** locate draws red center tracking ###scannerconfigilluminationmode enable/disable illumination depending ambient light conditions selected input selection illuminationmodeoff **off** -illumination turned **on** ###scannerconfiglcdmode lcd blockbuster devices enhances cellphones lcdmodedisabled ###scannerconfiginverse1dmode inverse1dmodedisabled ###scannerconfigaudiostreamtype volume slider audio feedback **ringer** -ringer notifications **media** -music media **alarams** -alarms ###scannerconfigpowermode laser power **low** -lowest slowest performance **optimized** -power adjusts usage **high** -high excellent **always_on** -highest ###scannerconfigskiponunsupported -throws exception **unsupported_param** -skips paramter **unsupported_value** **all** paramters ","summary":"\nThe ScannerConfig class provides access to scanner configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tScannerConfig scannerConfig = scanner.getConfig(scannerConfig);\n\tscannerConfig.scanParams.decodeHapticFeedback = true;\n\tscannerConfig.decoderParams.codabar.length1 = 6;\n\tscanner.setConfig(scannerConfig);\n\nPublic Methods\n\n isParamSupported\n\npublic boolean isParamSupported(java.lang.String param)\n\nThis method helps to check scanner config parameters supported\n Returns true if specified parameter is supported.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig"},{"title":"ScannerConfig.AudioStreamType","keywords":"volume slider type decode audio feedback **values** * **ringer** -ringer notifications **media** -music media **alarams** -alarms ","summary":"\nVolume slider type for decode audio feedback.\n\nValues:\n\nRINGER -Ringer and Notifications.\n\nMEDIA -Music and Media.\n\nALARAMS -Alarms.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-AudioStreamType"},{"title":"ScannerConfig.BooklandFormat","keywords":"lists bookland formats **example usage** java booklandformatisbn_10 **values** * **isbn_10** -978 reported digit mode **isbn_13** -978/979 transmitted ean13 isbn-13 protocol ","summary":"\nLists the Bookland formats\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tBooklandFormat.ISBN_10;\n\nValues:\n\nISBN_10 -978 reported in 10 digit mode\n\nISBN_13 -978/979 transmitted as EAN13 as per 2007 ISBN-13 protocol\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-BooklandFormat"},{"title":"ScannerConfig.CheckDigit","keywords":"number check digits verified msi symbols digit mandatory reader optional **example usage** java checkdigitone **values** * **one** -verify **two** ","summary":"\nThe number of check digits to be verified. With MSI symbols, one check\n digit is mandatory and always verified by the reader. The second check\n digit is optional.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-CheckDigit"},{"title":"ScannerConfig.CheckDigitScheme","keywords":"algorithms verification msi check digit select algorithm encode **example usage** java checkdigitschememod_11_10 **values** * **mod_11_10** -first mod **mod_10_10** -both digits ","summary":"\nTwo algorithms are possible for the verification of the second MSI check\n digit. Select the algorithm used to encode the check digit.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCheckDigitScheme.MOD1110;\n\nValues:\n\nMOD_11_10 -First check digit is MOD 11 and second check digit is MOD 10.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-CheckDigitScheme"},{"title":"ScannerConfig.CheckDigitType","keywords":"verify data integrity **example usage** java checkdigittypeno **values** * **no** -a check digit **uss** -select interleaved symbols complies uniform symbology specification uss algorithm **opcc** optical product code council opcc ","summary":"\nVerify data integrity.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCheckDigitType.NO;\n\nValues:\n\nNO -A check digit is not used.\n\nUSS -Select to check the integrity of all Interleaved 2 of 5 symbols to\n verify the data complies with either the Uniform Symbology\n Specification (USS) check digit algorithm.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-CheckDigitType"},{"title":"ScannerConfig.CodeIdType","keywords":"code id character identifies type scanned bar reader decoding select insert prefix decoded symbol **example usage** java codeidtypenone **values** * **none** -no **aim** -a standards based **symbol** defined single ","summary":"\nA Code ID character identifies the code type of a scanned bar code. This\n is useful when the reader is decoding more than one code type. Select a\n code ID character to insert between the prefix and the decoded symbol.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-CodeIdType"},{"title":"ScannerConfig.CouponReport","keywords":"supported coupon modes **example usage** java couponreportold **values** * **old** -scanner read format **new** gs1 databar **both** ","summary":"\nSupported Coupon modes\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCouponReport.OLD;\n\nValues:\n\nOLD -Scanner will read only the old coupon format\n\nNEW -Scanner will read only the new GS1 DataBar coupon format\n\nBOTH -Scanner will read both old coupon format as well as the new GS1\n DataBar coupon format\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-CouponReport"},{"title":"ScannerConfig.DecoderParams","keywords":"decoderparams class decoder parameters multiple symbologies property access enabled issupported note calling enable disable latest configuration parameter values configdecoderparams configscannerparams configreaderparams configinterfaceparams set automatically ##public fields ###australianpostal australianpostal **type** comsymbolemdkbarcodescannerconfigdecoderparamsaustralianpostal ###aztec aztec comsymbolemdkbarcodescannerconfigdecoderparamsaztec ###canadianpostal canadianpostal comsymbolemdkbarcodescannerconfigdecoderparamscanadianpostal ###chinese2of5 chinese_2of5 chinese2of5 comsymbolemdkbarcodescannerconfigdecoderparamschinese2of5 ###codabar codabar comsymbolemdkbarcodescannerconfigdecoderparamscodabar ###code11 code11 comsymbolemdkbarcodescannerconfigdecoderparamscode11 ###code128 code128 comsymbolemdkbarcodescannerconfigdecoderparamscode128 ###code39 code39 comsymbolemdkbarcodescannerconfigdecoderparamscode39 ###code93 code93 comsymbolemdkbarcodescannerconfigdecoderparamscode93 ###compositeab composite_ab compositeab comsymbolemdkbarcodescannerconfigdecoderparamscompositeab ###compositec composite_c compositec comsymbolemdkbarcodescannerconfigdecoderparamscompositec ###d2of5 d2of5 comsymbolemdkbarcodescannerconfigdecoderparamsd2of5 ###datamatrix datamatrix comsymbolemdkbarcodescannerconfigdecoderparamsdatamatrix ###dutchpostal dutchpostal comsymbolemdkbarcodescannerconfigdecoderparamsdutchpostal ###ean13 ean13 comsymbolemdkbarcodescannerconfigdecoderparamsean13 ###ean8 ean8 comsymbolemdkbarcodescannerconfigdecoderparamsean8 ###gs1databar gs1databar gs1 databar comsymbolemdkbarcodescannerconfigdecoderparamsgs1databar ###gs1databarlim gs1databarlim lim comsymbolemdkbarcodescannerconfigdecoderparamsgs1databarlim ###gs1databarexp gs1databarexp exp comsymbolemdkbarcodescannerconfigdecoderparamsgs1databarexp ###i2of5 i2of5 comsymbolemdkbarcodescannerconfigdecoderparamsi2of5 ###japanesepostal japanesepostal comsymbolemdkbarcodescannerconfigdecoderparamsjapanesepostal ###korean3of5 korean_3of5 korean3of5 comsymbolemdkbarcodescannerconfigdecoderparamskorean3of5 ###matrix2of5 matrix_2of5 matrix2of5 comsymbolemdkbarcodescannerconfigdecoderparamsmatrix2of5 ###maxicode maxicode comsymbolemdkbarcodescannerconfigdecoderparamsmaxicode ###micropdf micropdf comsymbolemdkbarcodescannerconfigdecoderparamsmicropdf ###microqr microqr comsymbolemdkbarcodescannerconfigdecoderparamsmicroqr ###msi msi comsymbolemdkbarcodescannerconfigdecoderparamsmsi ###pdf417 pdf417 comsymbolemdkbarcodescannerconfigdecoderparamspdf417 ###qrcode qrcode comsymbolemdkbarcodescannerconfigdecoderparamsqrcode ###signature signature comsymbolemdkbarcodescannerconfigdecoderparamssignature ###tlc39 tlc39 comsymbolemdkbarcodescannerconfigdecoderparamstlc39 ###trioptic39 trioptic39 comsymbolemdkbarcodescannerconfigdecoderparamstrioptic39 ###ukpostal ukpostal comsymbolemdkbarcodescannerconfigdecoderparamsukpostal ###upca upca comsymbolemdkbarcodescannerconfigdecoderparamsupca ###upce0 upce0 comsymbolemdkbarcodescannerconfigdecoderparamsupce0 ###upce1 upce1 comsymbolemdkbarcodescannerconfigdecoderparamsupce1 ###upceanparams upcean upc/ean family codes identify products upc ean params common comsymbolemdkbarcodescannerconfigdecoderparamsupceanparams ###us4statefics us4state_fics us4statefics comsymbolemdkbarcodescannerconfigdecoderparamsus4statefics ###us4state us4state comsymbolemdkbarcodescannerconfigdecoderparamsus4state ###usplanet usplanet comsymbolemdkbarcodescannerconfigdecoderparamsusplanet ###uspostnet uspostnet comsymbolemdkbarcodescannerconfigdecoderparamsuspostnet ###webcode webcode comsymbolemdkbarcodescannerconfigdecoderparamswebcode ###mailmark mailmark comsymbolemdkbarcodescannerconfigdecoderparamsmailmark ###hanxin hanxin comsymbolemdkbarcodescannerconfigdecoderparamshanxin ","summary":"\nThe DecoderParams class contains decoder parameters that\n are used by multiple decoder symbologies. The property provides access to\n such decoder parameters as Enabled and IsSupported, among others.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams"},{"title":"ScannerConfig.DecoderParams.AustralianPostal","keywords":"australianpostal class access parameters decoder ","summary":"\nThe AustralianPostal class provides access to parameters that are\n available for the AustralianPostal decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-AustralianPostal"},{"title":"ScannerConfig.DecoderParams.Aztec","keywords":"aztec class access parameters decoder ","summary":"\nThe Aztec class provides access to parameters that are available for\n the Aztec decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Aztec"},{"title":"ScannerConfig.DecoderParams.BaseDecoder","keywords":"basedecoder class parent decoder decoders inherited ##constructors ###basedecoder ##public fields ###enabled returns enabled **type** boolean ","summary":"\nThe BaseDecoder class is the parent decoder to all decoders and is\n inherited by all decoders.\n\nConstructors\n\nBaseDecoder\n\nPublic Fields\n\nenabled\n\nReturns whether or not the Decoder is currently enabled.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-BaseDecoder"},{"title":"ScannerConfig.DecoderParams.CanadianPostal","keywords":"canadianpostal class access parameters decoder ","summary":"\nThe CanadianPostal class provides access to parameters that are\n available for the CanadianPostal decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-CanadianPostal"},{"title":"ScannerConfig.DecoderParams.Chinese2of5","keywords":"chinese2of5 class access parameters decoder ","summary":"\nThe Chinese2of5 class provides access to parameters that are\n available for the Chinese2of5 decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Chinese2of5"},{"title":"ScannerConfig.DecoderParams.CodaBar","keywords":"codabar class access parameters decoder ##public fields ###length1 set decode lengths supported range **example usage** java codabarlength1 = **type** int ###length2 codabarlength2 ###redundancy sets reader read bar code accepting data codabarredundancy true boolean ###clsiediting enable parameter strip start stop characters insert space tenth 14-character symbol feature host system requires format codabarclsi_editing ###notisediting decoded codabarnotis_editing ","summary":"\nThe CodaBar class provides access to parameters that are available\n for the CodaBar decoder.\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths. The supported range is 0 to 55.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-CodaBar"},{"title":"ScannerConfig.DecoderParams.Code11","keywords":"code11 class access parameters decoder ##public fields ###length1 set decode length supported range **example usage** java code11length1 = **type** int ###length2 code11length2 ###redundancy sets reader read bar code accepting data code11redundancy true boolean ###verifycheckdigit check integrity symbols verify complies digit algorithm selects mechanism decoded enum scannerconfigverifycheckdigit code11verifycheckdigit verifycheckdigitno comsymbolemdkbarcodescannerconfigverifycheckdigit ###reportcheckdigit transmit code11reportcheckdigit false ","summary":"\nThe Code11 class provides access to parameters that are available for\n the Code11 decoder.\n\nPublic Fields\n\nlength1\n\nUse to set decode length. The supported range is 0 to 55.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Code11"},{"title":"ScannerConfig.DecoderParams.Code128","keywords":"code128 class access parameters decoder ##public fields ###length1 set decode lengths supported range **example usage** java int length1 = code128length1 **type** ###length2 length2 code128length2 ###redundancy sets reader read bar code accepting data code128redundancy true boolean ###enableplain flag enable types gs1-128 isbt-128 code128enableplain false ###enableean128 ean128 subtype code128enableean128 ###enableisbt128 isbt128 code128enableisbt128 ###isbt128concatmode select option concatenating pairs isbt enum scannerconfigisbt128contactmode code128isbt128concatmode isbt128contactmodenone comsymbolemdkbarcodescannerconfigisbt128contactmode ###checkisbttable specification includes table lists codes commonly concat mode check concatenate found concatenated code128checkisbttable ###securitylevel scanner fers levels security increasing decreasing quality inverse relationship aggressiveness choose level application scannerconfigsecuritylevel code128securitylevel securitylevellevel_0 comsymbolemdkbarcodescannerconfigsecuritylevel ","summary":"\nThe Code128 class provides access to parameters that are available\n for the Code128 decoder.\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths. The supported range is 0 to 55.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Code128"},{"title":"ScannerConfig.DecoderParams.Code39","keywords":"code39 class access parameters decoder ##public fields ###length1 set decode lengths valid range **example usage** java code39length1 = **type** int ###length2 code39length2 ###verifycheckdigit enable feature check integrity code symbols verify data complies digit algorithm digital scanner decodes include modulo code39verifycheckdigit false boolean ###reportcheckdigit transmit code39reportcheckdigit true ###fullascii full ascii variant pairs characters encode character code39fullascii ###redundancy sets reader read bar accepting code39redundancy ###converttocode32 italian pharmaceutical industry code39converttocode32 ###reportcode32prefix scan disable adding prefix codes code39reportcode32prefix ###securitylevel options security level enum scannerconfigsecuritylevel code39securitylevel securitylevellevel_1 comsymbolemdkbarcodescannerconfigsecuritylevel ","summary":"\nThe Code39 class provides access to parameters that are available for\n the Code39 decoder.\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths. The valid range is 0 to 55.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Code39"},{"title":"ScannerConfig.DecoderParams.Code93","keywords":"code93 class access parameters decoder ##public fields ###length1 set decode lengths valid range **example usage** java int length1 = **type** ###length2 code93length2 ###redundancy sets reader read bar code accepting data code93redundancy true boolean ","summary":"\nThe Code93 class provides access to parameters that are available for\n the Code93 decoder.\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths. The valid range is 0 to 55.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Code93"},{"title":"ScannerConfig.DecoderParams.CompositeAB","keywords":"compositeab class access parameters decoder ##public fields ###ucclinkmode sets ucc link mode scannerconfigucclinkmode enum **example usage** java compositeabucclinkmode = ucclinkmodealways_linked **type** comsymbolemdkbarcodescannerconfigucclinkmode ","summary":"\nThe CompositeAB class provides access to parameters that are\n available for the CompositeAB decoder.\n\nPublic Fields\n\nuccLinkMode\n\nGets and Sets UCC Link Mode using\n  ScannerConfig.UccLinkMode enum;\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tcompositeAB.uccLinkMode = UccLinkMode.ALWAYS_LINKED;\n\nType:\n\ncom.symbol.emdk.barcode.ScannerConfig.UccLinkMode\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-CompositeAB"},{"title":"ScannerConfig.DecoderParams.CompositeC","keywords":"compositec class access parameters decoder ","summary":"\nThe CompositeC class provides access to parameters that are\n available for the CompositeC decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-CompositeC"},{"title":"ScannerConfig.DecoderParams.D2of5","keywords":"d2of5 class access parameters decoder ##public fields ###length1 set decode lengths valid range **example usage** java d2of5length1 = **type** int ###length2 d2of5length2 ###redundancy sets reader read bar code accepting data d2of5redundancy true boolean ","summary":"\nThe D2OF5 class provides access to parameters that are available for\n the D2OF5 decoder.\n\nPublic Fields\n\nlength1\n\nUsed to set decode lengths. The valid range is 0 to 55.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-D2of5"},{"title":"ScannerConfig.DecoderParams.DataMatrix","keywords":"datamatrix class access parameters decoder ","summary":"\nThe DataMatrix class provides access to parameters that are available\n for the DataMatrix decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-DataMatrix"},{"title":"ScannerConfig.DecoderParams.DutchPostal","keywords":"dutchpostal class access parameters decoder ","summary":"\nThe DutchPostal class provides access to parameters that are\n available for the DutchPostal decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-DutchPostal"},{"title":"ScannerConfig.DecoderParams.Ean13","keywords":"ean13 class access parameters decoder ","summary":"\nThe Ean13 class provides access to parameters that are available for\n the Ean13 decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Ean13"},{"title":"ScannerConfig.DecoderParams.Ean8","keywords":"ean8 class access parameters decoder ##public fields ###converttoean13 flag convert ean13 **type** boolean ","summary":"\nThe Ean8 class provides access to parameters that are available for\n the Ean8 decoder.\n\nPublic Fields\n\nconvertToEan13\n\nFlag to convert EAN8 to EAN13.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Ean8"},{"title":"ScannerConfig.DecoderParams.Gs1Databar","keywords":"gs1databar class access parameters gs1 databar decoder ","summary":"\nThe Gs1Databar class provides access to parameters that are available\n for the GS1 Databar decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Gs1Databar"},{"title":"ScannerConfig.DecoderParams.Gs1DatabarExp","keywords":"gs1databarexp class access parameters gs1 databar exp decoder ","summary":"\nThe Gs1DatabarExp class provides access to parameters that are\n available for the GS1 Databar Exp decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Gs1DatabarExp"},{"title":"ScannerConfig.DecoderParams.Gs1DatabarLim","keywords":"gs1databarlim class access parameters gs1 databar lim decoder ","summary":"\nThe Gs1DatabarLim class provides access to parameters that are\n available for the GS1 Databar Lim decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Gs1DatabarLim"},{"title":"ScannerConfig.DecoderParams.HanXin","keywords":"hanxin class access parameters decoder ##public fields ###hanxininverse check inverse code enum scannerconfighanxininverse **example usage** java hanxinhanxininverse = hanxininversedisabled **type** comsymbolemdkbarcodescannerconfighanxininverse ","summary":"\nThe HanXin class provides access to parameters that are available for\n the HanXin decoder.\n\nPublic Fields\n\nhanXinInverse\n\nCheck the inverse of the HanXin decoder\n\n code.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-HanXin"},{"title":"ScannerConfig.DecoderParams.I2of5","keywords":"i2of5 class access parameters decoder ##public fields ###length1 set decode lengths valid range **example usage** java i2of5length1 = **type** int ###length2 i2of5length2 ###redundancy sets reader read bar code accepting data i2of5redundancy true boolean ###verifycheckdigit check digit type verify enum scannerconfigcheckdigittype i2of5verifycheckdigit check_digit_typeno comsymbolemdkbarcodescannerconfigcheckdigittype ###reportcheckdigit transmit interleaved i2of5reportcheckdigit ###converttoean13 convert 14-character codes ean-13 enabled leading i2of5converttoean13 ###securitylevel specifies security level scannerconfigsecuritylevel i2of5securitylevel securitylevellevel_1 comsymbolemdkbarcodescannerconfigsecuritylevel ","summary":"\nThe I2of5 class provides access to parameters that are available for\n the I2of5 decoder.\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths. The valid range is 0 to 55.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-I2of5"},{"title":"ScannerConfig.DecoderParams.JapanesePostal","keywords":"japanesepostal class access parameters decoder ","summary":"\nThe JapanesePostal class provides access to parameters that are\n available for the JapanesePostal decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-JapanesePostal"},{"title":"ScannerConfig.DecoderParams.Korean3of5","keywords":"korean3of5 class access parameters decoder ","summary":"\nThe Korean3of5 class provides access to parameters that are\n available for the Korean3of5 decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Korean3of5"},{"title":"ScannerConfig.DecoderParams.MailMark","keywords":"mailmark class access parameters decoder ","summary":"\nThe MailMark class provides access to parameters that are available for\n the MailMark decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-MailMark"},{"title":"ScannerConfig.DecoderParams.Matrix2of5","keywords":"matrix2of5 class access parameters decoder ##public fields ###length1 set decode lengths valid range **example usage** java matrix2of5length1 = **type** int ###length2 matrix2of5length2 ###redundancy sets reader read bar code accepting data matrix2of5redundancy false boolean ###reportcheckdigit transmit matrix check digit matrix2of5reportcheckdigit true ###verifycheckdigit enable feature integrity symbols verify complies algorithm matrix2of5verifycheckdigit ","summary":"\nThe Matrix2of5 class provides access to parameters that are\n available for the Matrix2of5 decoder.\n\nPublic Fields\n\nlength1\n\nUsed to set decode lengths.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Matrix2of5"},{"title":"ScannerConfig.DecoderParams.MaxiCode","keywords":"maxicode class access parameters decoder ","summary":"\nThe MaxiCode class provides access to parameters that are available\n for the MaxiCode decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-MaxiCode"},{"title":"ScannerConfig.DecoderParams.MicroPdf","keywords":"micropdf class access parameters decoder ","summary":"\nThe MicroPdf class provides access to parameters that are available\n for the MicroPdf decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-MicroPdf"},{"title":"ScannerConfig.DecoderParams.MicroQr","keywords":"microqr class access parameters decoder ","summary":"\nThe MicroQr class provides access to parameters that are available\n for the MicroQr decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-MicroQr"},{"title":"ScannerConfig.DecoderParams.Msi","keywords":"msi class access parameters decoder ##public fields ###length1 set decode lengths range **example usage** java msilength1 = **type** int ###length2 msilength2 ###redundancy sets reader read bar code accepting data msiredundancy true boolean ###checkdigits symbols check digit mandatory verified optional enum scannerconfigcheckdigit msicheckdigits checkdigitone comsymbolemdkbarcodescannerconfigcheckdigit ###checkdigitscheme algorithms verification select algorithm encode scannerconfigcheckdigitscheme msicheck_digit_scheme checkdigitschememod_10_10 comsymbolemdkbarcodescannerconfigcheckdigitscheme ###reportcheckdigit transmit msireportcheckdigit false ","summary":"\nThe Msi class provides access to parameters that are available for\n the Msi decoder.\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths. The range is 0 to 55.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Msi"},{"title":"ScannerConfig.DecoderParams.Pdf417","keywords":"pdf417 class access parameters decoder ","summary":"\nThe Pdf417 class provides access to parameters that are available for\n the Pdf417 decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Pdf417"},{"title":"ScannerConfig.DecoderParams.QrCode","keywords":"qrcode class access parameters decoder ","summary":"\nThe QRCode class provides access to parameters that are available for\n the QRCode decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-QrCode"},{"title":"ScannerConfig.DecoderParams.Signature","keywords":"signature class access parameters decoder ","summary":"\nThe Signature class provides access to parameters that are available\n for the Signature decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Signature"},{"title":"ScannerConfig.DecoderParams.Tlc39","keywords":"tlc39 class access parameters decoder ","summary":"\nThe Tlc39 class provides access to parameters that are available for\n the Tlc39 decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Tlc39"},{"title":"ScannerConfig.DecoderParams.TriOptic39","keywords":"trioptic39 class access parameters decoder ##public fields ###redundancy sets reader read bar code accepting data **example usage** java trioptic39redundancy = true **type** boolean ","summary":"\nThe TriOptic39 class provides access to parameters that are available\n for the TriOptic39 decoder.\n\nPublic Fields\n\nredundancy\n\nSets the reader to read the bar code twice before accepting data.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-TriOptic39"},{"title":"ScannerConfig.DecoderParams.UkPostal","keywords":"ukpostal class access parameters decoder ##public fields ###reportcheckdigit transmit uk postal data check digit **example usage** java ukpostalreportcheckdigit = true **type** boolean ","summary":"\nThe UkPostal class provides access to parameters that are available\n for the UkPostal decoder.\n\nPublic Fields\n\nreportCheckDigit\n\nTransmit UK Postal data with or without the check digit.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-UkPostal"},{"title":"ScannerConfig.DecoderParams.UpcEanParams","keywords":"upcean class access parameters upc/ean decoder family codes identify products upc ean params common **example usage** java configupceanparamsbooklandcode = true ##public fields ###booklandcode flag enable bookland code decoding begins prefix called barcode books book related internationally upceanbooklandcode **type** boolean ###booklandformat specifies format enum scannerconfigbooklandformat upceanbooklandformat booklandformatisbn_10 comsymbolemdkbarcodescannerconfigbooklandformat ###convertdatabartoupcean set converts databar bar setting work symbologies enabled check checkbox option upceanconvertdatabartoupcean ###couponcode enables coupon note order successfully decode correct decoders upceancouponcode ###lineardecode ###randomweightcheckdigit random weight digit verification upceanrandomweightcheckdigit ###securitylevel scanner fers levels security select higher lower quality inverse relationship speed choose level application scannerconfigsecuritylevel upceansecuritylevel securitylevellevel_0 comsymbolemdkbarcodescannerconfigsecuritylevel ###supplemental2 length supplementals upceansupplemental2 false ###supplemental5 upceansupplemental5 ###supplementalmode supplemental mode scannerconfigsupplementalmode upceansupplementalmode supplementalmodes_378_379 comsymbolemdkbarcodescannerconfigsupplementalmode ###supplementalretries retry count auto-discriminating values inclusive considered auto smart 378-379 978-979 414-419-434-439 default upceansupplementalretries int ###couponreport differentiate code128 gs1 coupons interim meant smooth transition adaption presented read portion depending report scannerconfigcouponreport upceancouponreport couponreportold comsymbolemdkbarcodescannerconfigcouponreport ###eanzeroextend parameter add leading zeros decoded ean-8 symbols make compatible ean-13 disable transmit ","summary":"\nThe UPCEAN class provides access to parameters that are available for the UPC/EAN decoder.\n UPC/EAN is the family of codes which are used to identify products\n and UPC EAN Params are the params common to these codes\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tconfig.upcEanParams.booklandCode = true;\n\nPublic Fields\n\nbooklandCode\n\nFlag to enable Bookland code decoding.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-UpcEanParams"},{"title":"ScannerConfig.DecoderParams.Upca","keywords":"upca class access parameters decoder ##public fields ###reportcheckdigit flag enable reporting bar code check digit **type** boolean ###preamble controls preamble applied comsymbolemdkbarcodescannerconfigpreamble ","summary":"\nThe Upca class provides access to parameters that are available for\n the Upca decoder.\n\nPublic Fields\n\nreportCheckDigit\n\nFlag to enable reporting the bar code check digit.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Upca"},{"title":"ScannerConfig.DecoderParams.Upce0","keywords":"upce0 class access parameters decoder ##public fields ###reportcheckdigit flag enable reporting bar code check digit **type** boolean ###preamble controls preamble applied comsymbolemdkbarcodescannerconfigpreamble ###converttoupca conversion upca set converted ","summary":"\nThe Upce0 class provides access to parameters that are available for\n the Upce0 decoder.\n\nPublic Fields\n\nreportCheckDigit\n\nFlag to enable reporting the bar code check digit.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Upce0"},{"title":"ScannerConfig.DecoderParams.Upce1","keywords":"upce1 class access parameters decoder ##public fields ###reportcheckdigit flag enable reporting bar code check digit **type** boolean ###preamble controls preamble applied comsymbolemdkbarcodescannerconfigpreamble ###converttoupca conversion upca set converted ","summary":"\nThe Upce1 class provides access to parameters that are available for\n the Upce1 decoder.\n\nPublic Fields\n\nreportCheckDigit\n\nFlag to enable reporting the bar code check digit.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Upce1"},{"title":"ScannerConfig.DecoderParams.Us4State","keywords":"us4state class access parameters decoder ","summary":"\nThe US4State class provides access to parameters that are available\n for the US4State decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Us4State"},{"title":"ScannerConfig.DecoderParams.Us4StateFics","keywords":"us4statefics class access parameters decoder ","summary":"\nThe Us4StateFics class provides access to parameters that are\n available for the Us4StateFics decoder.\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-Us4StateFics"},{"title":"ScannerConfig.DecoderParams.UsPlanet","keywords":"usplanet class access parameters decoder ##public fields ###reportcheckdigit flag enable reporting bar code check digit **type** boolean ","summary":"\nThe UsPlanet class provides access to parameters that are available\n for the UsPlanet decoder.\n\nPublic Fields\n\nreportCheckDigit\n\nFlag to enable reporting the bar code check digit.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-UsPlanet"},{"title":"ScannerConfig.DecoderParams.UsPostNet","keywords":"uspostnet class access parameters decoder ##public fields ###reportcheckdigit flag enable reporting bar code check digit **type** boolean ","summary":"\nThe UsPostNet class provides access to parameters that are available\n for the UsPostNet decoder.\n\nPublic Fields\n\nreportCheckDigit\n\nFlag to enable reporting the bar code check digit.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-UsPostNet"},{"title":"ScannerConfig.DecoderParams.WebCode","keywords":"webcode class access parameters decoder ##public fields ###subtype type enabled **type** boolean ","summary":"\nThe WebCode class provides access to parameters that are available\n for the WebCode decoder.\n\nPublic Fields\n\nsubType\n\nWebcode sub type enabled\n\nType:\n\nboolean\n\n","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-DecoderParams-WebCode"},{"title":"ScannerConfig.HanXinInverse","keywords":"parameter user select decoding inverse hanxin bar codes **example usage** java hanxininversedisabled **values** * **disabled** -disables symbologies **enabled** -enables **auto** -allows positive ","summary":"\nThis parameter allows the user to select decoding on inverse HanXin bar codes.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tHanXinInverse.DISABLED;\n\nValues:\n\nDISABLED -Disables decoding of inverse HanXin symbologies\n\nENABLED -Enables decoding of only inverse HanXin symbologies.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-HanXinInverse"},{"title":"ScannerConfig.IlluminationMode","keywords":"enable/disable illumination depending ambient light conditions option camera selected barcode input scanner selection **example usage** java illuminationmodeoff **values** * **off** -illumination turned scanning **on** ","summary":"\nEnable/disable illumination depending on ambient light conditions.\n This option is only available when camera is selected in the Barcode input Scanner selection option.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-IlluminationMode"},{"title":"ScannerConfig.Inverse1DMode","keywords":"parameter user select decoding inverse 1d bar codes **example usage** java inverse1dmodedisabled **values** * **disabled** -disables symbologies **enabled** -enables **auto** -allows positive ","summary":"\nThis parameter allows the user to select decoding on inverse 1D bar codes.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tInverse1DMode.DISABLED;\n\nValues:\n\nDISABLED -Disables decoding of inverse 1D symbologies\n\nENABLED -Enables decoding of only inverse 1D symbologies.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-Inverse1DMode"},{"title":"ScannerConfig.Isbt128ContactMode","keywords":"option concatenating pairs isbt128 code types **example usage** java isbt128contactmodenever **values** * **never** -will ignore barcode pair output decode data barcodes **always** present decoded isbt codes order perform concatenation **auto** -decodes concatenates immediately single symbol device number times set datawedge configuration redundancy code128 transmitting confirm additional ","summary":"\nOption for concatenating pairs of ISBT128 code types.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tIsbt128ContactMode.NEVER;\n\nValues:\n\nNEVER -Will ignore the barcode pair and only output decode data for only one\n of the barcodes\n\nALWAYS -Will not decode if both the barcodes are not present or if one of\n them cannot be decoded.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-Isbt128ContactMode"},{"title":"ScannerConfig.LcdMode","keywords":"enable disable lcd mode blockbuster imager devices enhances ability read bar codes displays cellphones **example usage** java lcdmodedisabled **values** * **disabled** -disables **enabled** -enables ","summary":"\nEnable or disable LCD mode (for Blockbuster imager devices only).\n LCD mode enhances the ability of the imager to read bar codes from LCD displays such as cellphones.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-LcdMode"},{"title":"ScannerConfig.LinearSecurityLevel","keywords":"sets number times bar code read confirm accurate decode **example usage** java linearsecuritylevelshort_or_codabar **values** * **short_or_codabar** -two redundancy short codabar **all_twice** codes default **long_and_short** long **all_thrice** -three ","summary":"\nSets the number of times a bar code is read to confirm an accurate\n decode.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tLinearSecurityLevel.SHORTORCODABAR;\n\nValues:\n\nSHORT_OR_CODABAR -Two times read redundancy if short bar code or Codabar.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-LinearSecurityLevel"},{"title":"ScannerConfig.PickList","keywords":"imager decode bar code directly cross-hair/reticle + part pattern feature applications multiple codes field view session tar geted **example usage** java picklistdisabled **values** * **disabled** -disables picklist mode decoded **enabled** -enables cross-hair reticle conjunction static dynamic viewfinder modes scan module ","summary":"\nAllows the imager to decode only the bar code that is directly under the\n cross-hair/reticle (+) part of the pattern. This feature is useful in\n applications where multiple bar codes may appear in the field of view\n during a decode session and only one of them is tar geted for decode.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-PickList"},{"title":"ScannerConfig.PowerMode","keywords":"set laser scanner power mode **values** * **low** -lowest slowest performance **optimized** -power level adjusts scanning usage **high** -high excellent **always_on** -highest fastest ","summary":"\nSet laser scanner power mode\n\nValues:\n\nLOW -Lowest power, but slowest performance.\n\nOPTIMIZED -Power level adjusts with scanning usage.\n\nHIGH -High power, and excellent performance.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-PowerMode"},{"title":"ScannerConfig.Preamble","keywords":"controls preamble applied bar code characters part upc symbol consisting country system character select option match host **example usage** java preamblenone **values** * **none** -no **sys_char** -system **country_and_sys_char** -both ","summary":"\nControls the preamble applied to the bar code Preamble characters are\n part of the UPC symbol consisting of Country Code and System Character.\n Select the appropriate option to match the host system.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-Preamble"},{"title":"ScannerConfig.ReaderParams","keywords":"readerparams class holds parameters scanner reader global reads open handles note calling enable disable latest configuration parameter values configdecoderparams configscannerparams configreaderparams set automatically ##public fields ###readerspecific readerspecificparams access specific **type** comsymbolemdkbarcodescannerconfigreaderparamsreaderspecific ","summary":"\nThe ReaderParams class holds the parameters for a\n scanner. Reader parameters are global to all reads on all open handles on\n the same scanner. NOTE: When calling enable() after disable(), all the\n latest configuration parameter values.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-ReaderParams"},{"title":"ScannerConfig.ReaderParams.ReaderSpecific","keywords":"readerspecific class access reader specific parameters ##constructors ###readerspecific ##public fields ###imagerspecific provide set imager settings scanner device **example usage** java scannergetscannerinfogetdevicetype == devicetypeimager { readerparamsreaderspecificimagerspecificpicklist = picklistdisabled } **type** comsymbolemdkbarcodescannerconfigreaderparamsreaderspecificimagerspecific ###cameraspecific camera readerparamsreaderspecificcameraspecificilluminationmode illuminationmodeon comsymbolemdkbarcodescannerconfigreaderparamsreaderspecificcameraspecific ###laserspecific laser comsymbolemdkbarcodescannerconfigreaderparamsreaderspecificlaserspecific ","summary":"\nReaderSpecific class provides access to the reader specific parameters.\n\nConstructors\n\nReaderSpecific\n\nPublic Fields\n\nimagerSpecific\n\nProvide access to set the imager specific settings if the scanner device is imager.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-ReaderParams-ReaderSpecific"},{"title":"ScannerConfig.ReaderParams.ReaderSpecific.CameraSpecific","keywords":"cameraspecific class access camera scanner specific parameters ##public fields ###continuousread continuousread continuous scanning related **type** comsymbolemdkbarcodescannerconfigreaderparamsreaderspecificcontinuousread ###beamtimer sets maximum amount time reader remains ms increments stay indefinitely **example usage** java readerparamsbeamtimer = int ###linearsecuritylevel number times bar code read confirm accurate decode enum scannerconfiglinearsecuritylevel readerparamslinearsecuritylevel linearsecuritylevelall_thrice comsymbolemdkbarcodescannerconfiglinearsecuritylevel ###illuminationmode turns illumination option selected barcode input selection scannerconfigilluminationmode readerparamscameraspecificilluminationmode illuminationmodeon comsymbolemdkbarcodescannerconfigilluminationmode ###inverse1dmode parameter user select decoding inverse 1d codes scannerconfiginverse1dmode readerparamscameraspecificinverse_1d_mode inverse1dmodeauto comsymbolemdkbarcodescannerconfiginverse1dmode ###viewfindermode configures viewfinder modes supported scannerconfigviewfindermode readerparamscameraspecificviewfinder_mode viewfindermodedisabled comsymbolemdkbarcodescannerconfigviewfindermode ","summary":"\nCameraSpecific class provides access to the camera scanner specific parameters.\n\nPublic Fields\n\ncontinuousRead\n\nContinuousRead class provides access to continuous scanning related parameters.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-ReaderParams-ReaderSpecific-CameraSpecific"},{"title":"ScannerConfig.ReaderParams.ReaderSpecific.ContinuousRead","keywords":"continuousread class access continuous scanning related parameters ##constructors ###continuousread ##public fields ###iscontinuousscan scan continuously mode trigger pulled user continue barcodes releasing long reads submitted earlier read satisfied perform rapid provide control feature added reader samesymboltimeout differentsymboltimeout imagerspecific laserspecific classes note considered aim_type_continuous_read successful application submit triggering recommended picklist enabled imager-class scanners imager_specificvffeedback parameter viewfinder feedback provided similar setting viewfinder_feedbackviewfinder_mode_disabled imager_specificvfmode set viewfinder_modeviewfinder_mode_dynamic_reticle **type** boolean ###samesymboltimeout prevent scanner driver decoding symbol time interval applicable iscontinuousscan = true basically barcode milliseconds means required successive boundary values increments int ###differentsymboltimeout quickly aim ","summary":"\nContinuousRead class provides access to continuous scanning related parameters.\n\nConstructors\n\nContinuousRead\n\nPublic Fields\n\nisContinuousScan\n\nScan continuously; In this mode once the trigger is pulled the user can continue scanning barcodes without releasing the trigger\n as long as new reads are submitted as soon as the earlier read is satisfied.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-ReaderParams-ReaderSpecific-ContinuousRead"},{"title":"ScannerConfig.ReaderParams.ReaderSpecific.ImagerSpecific","keywords":"imagerspecific access imager specific parameters ##public fields ###continuousread continuousread class continuous scanning related **type** comsymbolemdkbarcodescannerconfigreaderparamsreaderspecificcontinuousread ###beamtimer sets maximum amount time reader remains ms increments stay indefinitely **example usage** java readerparamsbeamtimer = int ###linearsecuritylevel number times bar code read confirm accurate decode enum scannerconfiglinearsecuritylevel readerparamslinearsecuritylevel linearsecuritylevelall_thrice comsymbolemdkbarcodescannerconfiglinearsecuritylevel ###picklist directly cross-hair/reticle + part pattern feature applications multiple codes field view session targeted scannerconfigpicklist imagerspecificpicklist picklistdisabled comsymbolemdkbarcodescannerconfigpicklist ###lcdmode enables disables lcd mode enhances ability displays cellphones scannerconfiglcdmode imagerspecificlcdmode lcdmodedisabled comsymbolemdkbarcodescannerconfiglcdmode ###inverse1dmode parameter user select decoding inverse 1d scannerconfiginverse1dmode imagerspecificinverse1dmode inverse1dmodeauto comsymbolemdkbarcodescannerconfiginverse1dmode ###illuminationbrightness illumination brightness valid range imagerspecificilluminationbrightness ###disconnectonexit scan driver disconnect existing connection external bluetooth scanner terminal bt establishes automatically disabled calling scannerdisable set force note true fire disconnected state boolean ###connectionidletime seconds idle scannerstatesidle scannerstateswaiting severed conserve power applicable scanners ","summary":"\nImagerSpecific provides access to the imager specific parameters.\n\nPublic Fields\n\ncontinuousRead\n\nContinuousRead class provides access to continuous scanning related parameters.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-ReaderParams-ReaderSpecific-ImagerSpecific"},{"title":"ScannerConfig.ReaderParams.ReaderSpecific.LaserSpecific","keywords":"laserspecific class access laser scanner specific parameters ##public fields ###continuousread continuousread continuous scanning related **type** comsymbolemdkbarcodescannerconfigreaderparamsreaderspecificcontinuousread ###beamtimer sets maximum amount time reader remains ms increments stay indefinitely **example usage** java readerparamsbeamtimer = int ###linearsecuritylevel number times bar code read confirm accurate decode enum scannerconfiglinearsecuritylevel readerparamslinearsecuritylevel linearsecuritylevelall_thrice comsymbolemdkbarcodescannerconfiglinearsecuritylevel ###inverse1dmode parameter user select decoding inverse 1d codes scannerconfiginverse1dmode readerparamscameraspecificinverse_1d_mode inverse1dmodeauto comsymbolemdkbarcodescannerconfiginverse1dmode ###powermode set power mode scannerconfigpowermode comsymbolemdkbarcodescannerconfigpowermode ","summary":"\nLaserSpecific class provides access to the laser scanner specific parameters.\n\nPublic Fields\n\ncontinuousRead\n\nContinuousRead class provides access to continuous scanning related parameters.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-ReaderParams-ReaderSpecific-LaserSpecific"},{"title":"ScannerConfig.ScanParams","keywords":"scanparams class access scanning parameters decoders note calling enable disable latest configuration parameter values configdecoderparams configscannerparams configreaderparams configinterfaceparams set automatically ##public fields ###codeidtype code id character identifies type scanned bar reader decoding select insert prefix decoded symbol enum scannerconfigcodeidtype **example usage** java scanparamscodeidtype = code_id_typenone **type** comsymbolemdkbarcodescannerconfigcodeidtype ###decodeaudiofeedbackuri audio tone sound good decode valid files ringtone manager feedback tones stored application's private data cache asset field decodeaudiofeedbackuri avoid violation meant purpose shared public directories music/ ringtones/ external storage' scanparamsdecodeaudiofeedbackuri system/media/audio/notifications/decode-shortwav sdcard/sample-audiowav sdcard/sample-audioogg /sdcard/sample-audiowav //to achieve silent empty string //scanparamsdecodeaudiofeedbackuri javalangstring ###decodehapticfeedback device vibrate scanparamsdecodehapticfeedback true boolean ###decodeledtime led duration successful milliseconds 0ms 1000ms step 25ms scanparamsdecodeledtime int ###audiostreamtype stream refers streaming scan beep played scanparamsaudiostreamtype audiostreamtyperinger comsymbolemdkbarcodescannerconfigaudiostreamtype ###decodeledfeedback notification scanparamsdecodeledfeedback ","summary":"\nThe ScanParams class provides access to scanning\n parameters that are available for all decoders. NOTE: When calling\n enable() after disable(), all the latest configuration parameter values\n (Config.DecoderParams, Config.ScannerParams, Config.ReaderParams and\n Config.InterfaceParams) will be set automatically.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-ScanParams"},{"title":"ScannerConfig.SecurityLevel","keywords":"scanner offers levels decode security upc/ean bar codes select higher lower quality inverse relationship speed choose level application **example usage** java securitylevellevel_0 **values** * **level_0** -this setting operate fastest providing **level_1** -as code diminish characters prone misdecodes misdecoding poorly printed limited **level_2** -if **level_3** advised selecting option extreme measure severely spec significantly impair decoding ability improve ","summary":"\nThe scanner offers four levels of decode security for UPC/EAN bar codes.\n Select higher security levels for lower quality bar codes. There is an\n inverse relationship between security and decode speed, so be sure to\n choose only that level of security necessary for the application.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-SecurityLevel"},{"title":"ScannerConfig.SkipOnUnSupported","keywords":"**values** * **none** -throws exception unsupported parameters values **unsupported_param** -skips paramter continues **unsupported_value** **all** paramters ","summary":"\n\nValues:\n\nNONE -Throws exception on any unsupported parameters or values.\n\nUNSUPPORTED_PARAM -Skips the only unsupported paramter and continues with next.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-SkipOnUnSupported"},{"title":"ScannerConfig.SupplementalMode","keywords":"supplemental modes **example usage** java supplementalmodeno **values** * **no** -the scanner presented upc/ean symbol decodes ignores characters **always** symbols supplementals **auto** immediately decode bar code number times set redundancy transmitting data confirm **smart** -enables smart mode decoder returns decoded main block belong types starts prefixes searches image aggressively scan present scanning failed returned **s_378_379** auto-discriminate codes starting disables reading **s_978_979** **s_414_419_434_439** **s_977** barcode ","summary":"\nSupplemental modes\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tSupplementalMode.NO;\n\nValues:\n\nNO -The scanner is presented with a UPC/EAN plus supplemental symbol, the\n scanner decodes UPC/EAN and ignores the supplemental characters.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-SupplementalMode"},{"title":"ScannerConfig.UccLinkMode","keywords":"describes ucc link mode state **example usage** java ucclinkmodelink_flag_ignored **values** * **link_flag_ignored** -1d component transmitted 2d detected **always_linked** components present 1d **auto_discriminate** -the digital scanner determines portion transmits default ","summary":"\nDescribes the UCC link mode state.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tUCCLinkMode.LINKFLAGIGNORED;\n\nValues:\n\nLINK_FLAG_IGNORED -1D component is transmitted regardless of whether a 2D component is\n detected.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-UccLinkMode"},{"title":"ScannerConfig.VerifyCheckDigit","keywords":"check integrity code symbols verify data complies digit algorithm selects mechanism decoded bar **example usage** java verifycheckdigitno **values** * **no** -do **one** -bar **two** digits ","summary":"\nCheck the integrity of all Code 11 symbols to verify that the data\n complies with the specified check digit algorithm. This selects the check\n digit mechanism for the decoded Code 11 bar code.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-VerifyCheckDigit"},{"title":"ScannerConfig.ViewFinderMode","keywords":"configures viewfinder modes supported camera scanning **example usage** java viewfindermodeenabled **values** * **enabled** -viewfinder enabled displays images captured screen **static_recticle** locate reticle draws red center helps tracking barcode ","summary":"\nConfigures the Viewfinder modes supported for camera scanning.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tViewFinderMode.ENABLED;\n\nValues:\n\nENABLED -Viewfinder enabled.","url":"/emdk-for-android/3-1/api/barcode/ScannerConfig-ViewFinderMode"},{"title":"ScannerException","keywords":"methods barcode scanning object throws scannerexception error occurs due client api incorrectly unexpected occurred ##public ### getresult **public scannerresults getresult** returns enum **returns** comsymbolemdkbarcodescannerresults ","summary":"\nThe methods of barcode scanning object throws ScannerException when an error\n occurs.\nThe error could be due to:\n\nClient using the API incorrectly\nOr because an unexpected error occurred\n\nPublic Methods\n\n getResult\n\npublic ScannerResults getResult()\n\nReturns the ScannerResults enum value.","url":"/emdk-for-android/3-1/api/barcode/ScannerException"},{"title":"ScannerInfo","keywords":"scannerinfo information scanner device **example usage** java scanneinfogetfriendlyname ##public methods ### isdefaultscanner **public boolean isdefaultscanner** returns true default false **returns** getfriendlyname string getfriendlyname** friendly = javalangstring getmodelnumber getmodelnumber** model number enabled note supported framework version scanneinfogetmodel getdevicetype devicetype getdevicetype** type scanneinfogetdevicetype comsymbolemdkbarcodescannerinfodevicetype getconnectiontype connectiontype getconnectiontype** connection mobile computer 118p03 tc55 rev scanneinfogetconnectiontype comsymbolemdkbarcodescannerinfoconnectiontype getdecodertype decodertype getdecodertype** barcode scanning decoder scannerinfogetscannerinfogetdecodertype comsymbolemdkbarcodescannerinfodecodertype isconnected isconnected** enums ###scannerinfodevicetype list types devicetypelaser **values** * **camera** -the class camera **imager** imager **laser** laser **undefined** defined ###scannerinfoconnectiontype connectiontypeinternal **internal** connected internally **bluetooth_ssi** bluetooth **serial_ssi** serial ssi **usb** usb -connection ###scannerinfodecodertype lists scanners decodertypeone_dimensional **one_dimensional** -barcode 1-d **two_dimensional** 2-d supports -decoder ","summary":"\nScannerInfo provides information of the scanner device.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tscanneInfo.getFriendlyName();\n\nPublic Methods\n\n isDefaultScanner\n\npublic boolean isDefaultScanner()\n\nReturns true if it is a default scanner else false.","url":"/emdk-for-android/3-1/api/barcode/ScannerInfo"},{"title":"ScannerInfo.ConnectionType","keywords":"list supported scanner connection types **example usage** java connectiontypeinternal **values** * **internal** -the device connected internally mobile **bluetooth_ssi** bluetooth **serial_ssi** serial ssi **usb** usb **undefined** -connection type defined ","summary":"\nList of supported scanner connection types.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tConnectionType.INTERNAL;\n\nValues:\n\nINTERNAL -The scanner device connected internally within the mobile device.","url":"/emdk-for-android/3-1/api/barcode/ScannerInfo-ConnectionType"},{"title":"ScannerInfo.DecoderType","keywords":"lists barcode types supported scanners **example usage** java decodertypeone_dimensional **values** * **one_dimensional** -barcode scanning 1-d **two_dimensional** 2-d supports **undefined** -decoder type defined ","summary":"\nThis lists all the barcode types supported by scanners\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tDecoderType.ONE_DIMENSIONAL\n\nValues:\n\nONE_DIMENSIONAL -Barcode scanning is 1-D only.","url":"/emdk-for-android/3-1/api/barcode/ScannerInfo-DecoderType"},{"title":"ScannerInfo.DeviceType","keywords":"list supported scanner device types **example usage** java devicetypelaser **values** * **camera** -the class camera **imager** imager **laser** laser **undefined** defined ","summary":"\nList of supported scanner device types.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tDeviceType.LASER;\n\nValues:\n\nCAMERA -The Scanner device class is camera.\n\nIMAGER -The scanner device class is imager.","url":"/emdk-for-android/3-1/api/barcode/ScannerInfo-DeviceType"},{"title":"ScannerResults","keywords":"defines error codes barcode scanning api returns **values** * **success** -success **already_scanning** -scanning progress **scanner_in_use** -cannot enable scanner **vf_error** -view finder **invalid_value** -the invalid **scan_param_not_supported** -particular parameter supported **scan_data_failure** -unexpected scan data **scan_param_read_only** -read parameters **length_mismatch** -decoded meet length requirements **scanner_operation_failure** -scanner operation failed **feature_not_supported** feature **scanner_not_supported** **failure** -failure **scanner_not_enabled** device enabled **scanner_timed_out** timer occurred **invalid_object** object valid **no_data_listener** -scan read issued adding listener **trigger_key_reg_failed** -failed register hard trigger key notification **trigger_key_in_use** -trigger user **trigger_key_unreg_failed** unregister **scanner_init_failure** initialization **scanner_deinit_failure** de-initialization **undefined** -error code defined ","summary":"\nDefines all the error codes the barcode scanning API returns.\n brbr\n\nValues:\n\nSUCCESS -Success.\n\nALREADY_SCANNING -Scanning in progress.\n\nSCANNER_IN_USE -Cannot enable scanner and is already in use.","url":"/emdk-for-android/3-1/api/barcode/ScannerResults"},{"title":"StatusData","keywords":"statusdata class access scanner status **example usage** java statusdatagetstate ##public methods ### getstate **public scannerstates getstate** returns scan event state **returns** comsymbolemdkbarcodestatusdatascannerstates getfriendlyname string getfriendlyname** friendly data returned javalangstring index supported devices list enums ###statusdatascannerstates defines states barcode **values** * **idle** -scanner enabled reads pending **waiting** issued request waiting trigger **scanning** beam acquiring **disabled** **error** -an error occurred ","summary":"\nStatusData class provides access to scanner status.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tstatusData.getState();\n\nPublic Methods\n\n getState\n\npublic ScannerStates getState()\n\nReturns the scan event state.","url":"/emdk-for-android/3-1/api/barcode/StatusData"},{"title":"StatusData.ScannerStates","keywords":"defines states barcode scanner **values** * **idle** -scanner enabled reads pending **waiting** issued request waiting trigger event **scanning** beam acquiring data **disabled** **error** -an error occurred ","summary":"\nDefines the different states of the barcode scanner.\n\nValues:\n\nIDLE -Scanner is enabled but no reads are pending.\n\nWAITING -Scanner has issued reads request and is waiting for trigger event.","url":"/emdk-for-android/3-1/api/barcode/StatusData-ScannerStates"},{"title":"Core APIs","keywords":">supported devices * mc18kk mc32n0jb mc40jb mc40kk mc67jb mc92kk tc55jb tc55kk tc70kk tc75kk ","summary":"Supported Devices:\nMC18KK\nMC32N0JB\nMC40JB\nMC40KK\nMC67JB\nMC92KK\nTC55JB\nTC55KK\nTC70KK\nTC75KK\n\n","url":"/emdk-for-android/3-1/api/core"},{"title":"EMDKBase","keywords":"base class emdk manager classes derived ##constructors ###emdkbase ","summary":"\nThis is the base class for all the EMDK manager classes derived from.brbr\n\nConstructors\n\nEMDKBase\n\n","url":"/emdk-for-android/3-1/api/core/EMDKBase"},{"title":"EMDKManager","keywords":"emdkmanager class key android emdk access classes supported features clients call emdkmanagergetemdkmanagercontext emdkmanageremdklistener object application implements emdklistener interface returned successful opening callback **example usage** java emdkresults results = emdkmanagergetemdkmanagergetapplicationcontext ##public methods ### getemdkmanager **public getemdkmanagercontext context emdklistener** static method function implement notified manager status **parameters** provided user listener callbacks **returns** comsymbolemdkemdkresults getinstance emdkbase getinstanceemdkmanagerfeature_type featuretype** returns instance derived based type type-casted calling emdkmanagergetinstanceemdkmanagerfeature_type opened return null profilemanager mprofilemanager emdkmanagergetinstanceemdkmanagerfeature_typeprofile versionmanager mversionmanager emdkmanagergetinstanceemdkmanagerfeature_typeversion featuretype emdkmanagerfeature_type created comsymbolemdkemdkbase release void release** releases resources constructed exiting emdkmanagerrelease releaseemdkmanagerfeature_type variable required multiple instances allowed design emdkmanagerreleaseemdkmanagerfeature_typeprofile released feature related cleared enums ###emdkmanagerfeature_type lists exposed feature_typeprofile **values** * **profile** -emdk profile **version** version **barcode** barcode scanning **payment** payment device **scanandpair** scanandpair **simulscan** simulscan document capture **personalshopper** personal shopper **securenfc** secure nfc ","summary":"\nThe EMDKManager class is the key class in Android EMDK. This class provides access to different classes for the supported features. \n Clients should call EMDKManager.getEMDKManager(Context, EMDKManager.EMDKListener), to get the EMDKManager object.","url":"/emdk-for-android/3-1/api/core/EMDKManager"},{"title":"EMDKManager.EMDKListener","keywords":"interface callback notify opening closing status emdk successful emdkmanager object returned notifying clients ready closed abruptly **example usage** java public class mainactivity extends activity implements emdklistener ##public methods ### onopened **public void onopenedemdkmanager emdkmanager** called client opened override { } **parameters** **returns** onclosed onclosed** call emdkmanager#release free resources notifies user abrupt ","summary":"\nThis is the interface for the callback to notify the opening and closing status of the EMDK.\n On a successful opening, the EMDKManager object will be returned.","url":"/emdk-for-android/3-1/api/core/EMDKManager-EMDKListener"},{"title":"EMDKManager.FEATURE_TYPE","keywords":"lists features exposed emdk **example usage** java feature_typeprofile **values** * **profile** -emdk feature type profile **version** version **barcode** barcode scanning **payment** payment device **scanandpair** scanandpair **simulscan** simulscan document capture **personalshopper** personal shopper **securenfc** access secure nfc ","summary":"\nThis lists all the features exposed by the EMDK.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tFEATURE_TYPE.PROFILE\n\nValues:\n\nPROFILE -EMDK feature type profile\n\nVERSION -EMDK feature type version\n\nBARCODE -EMDK feature type for Barcode Scanning\n\nPAYMENT -EMDK feature type for Payment Device\n\nSCANANDPAIR -EMDK feature type for ScanAndPair\n\nSIMULSCAN -EMDK feature type for SimulScan & Document Capture\n\nPERSONALSHOPPER -EMDK feature type for Personal Self Shopper Device\n\nSECURENFC -EMDK feature type to access the Secure Nfc\n\n","url":"/emdk-for-android/3-1/api/core/EMDKManager-FEATURE_TYPE"},{"title":"EMDKResults","keywords":"class holding emdk result data **example usage** java @override public void onopenedemdkmanager emdkmanager { profileconfig profileconfigobj = profilemanager profilemanageremdkmanagergetinstancefeature_typeprofile emdkresults results profilemanagerprocessprofileprofile profilemanagerprofile_flagget } **version** ##public methods ###getextendedstatusmessage return extended status information string returns empty **returns** ###gettotalfeaturescount total number features profile values process called check compatibility -1 used/set int ###getsuccessfeaturescount request success ###getstatusdocument xml document resultsgetstatusdocument orgw3cdomdocument ###getstatusstring resultsgetstatusstring javalangstring text fields ###statuscode code enum type [emdkresultsstatus_code]emdkresultsstatus_code status_code statuscode resultsstatuscode **type** comsymbolemdk[emdkresultsstatus_code]emdkresults#emdkresultsstatus_code ###extendedstatuscode [emdkresultsextended_status_code]emdkresults#emdkresultsextended_status_code resultsextendederrorinfostatuscodeex comsymbolemdk[emdkresultsextended_status_code]emdkresults#emdkresultsextended_status_code enums ###emdkresultsstatus_code defines codes library resultsstatuscodesuccess **values** * **success** **failure** failure **unknown** mixed **null_pointer** null **empty_profilename** passed **emdk_not_opened** opened **check_xml** returned multiple present case verify api call successful analyze **previous_request_in_progress** previous progress wait complete **processing** processing started listener callback registered **no_data_listener** asynchronous method processprofileasync issued adding ###emdkresultsextended_status_code resultsextendedstatusinfoextendedstatuscode **none** **profile_not_found_in_config** found current emdkconfigxml comsymbolemdkemdkserviceprofileservicesetprofilestring changing pair switching activating **feature_type_not_found_in_config** -feature **feature_name_not_found_in_config** feature **feature_name_not_found_extradata** extradata emdk_name criteria **feature_type_not_found_in_extradata** **profile_not_found_in_extradata** merging profiles **feature_not_unique_in_config** combination unique order perform merge operation required **feature_not_unique_in_extradata** provided **dependacy_component_faliure** failed access dependency component connect mx service **general_exception_occured** exception occurred performing requested **namevalue_missmatch_in_config** names parameters due pairs equivalent canceled name-value functionality **namevalue_mismatch_in_extradata** **invalid_profile_configuration** -the invalid **profile_name_error** give profilename format profilename/feature type/feature error **activity_selection_merging_not_supported** activityselection supported **invalid_value** comsymbolemdkprofilemanagerprocessprofilestring profile_flag string[] **app_not_allowed_to_submit_xml** permission application allowed submit ","summary":"Class for holding EMDK result data.\n\nExample Usage:\n\n\t:::java\n\t@Override\n\tpublic void onOpened(EMDKManager emdkmanager)\n\t{\n\tProfileConfig profileConfigObj = new ProfileConfig();\n\tProfileManager profileManager = (ProfileManager)emdkmanager.getInstance(FEATURE_TYPE.PROFILE);\n\tEMDKResults results = profileManager.processProfile(\"Profile Name\", ProfileManager.PROFILE_FLAG.GET, profileConfigObj);\n\t}\n\nVersion:\n\n1.0\n\nPublic Methods\ngetExtendedStatusMessage()\nReturn the extended status information string.","url":"/emdk-for-android/3-1/api/core/EMDKResults"},{"title":"EMDKResults.EXTENDED_STATUS_CODE","keywords":"defines extended status codes library returns **example usage** java resultsextendedstatusinfoextendedstatuscode **values** * **none** -there code **profile_not_found_in_config** -profile found current emdkconfigxml **feature_type_not_found_in_config** -feature type profile **feature_name_not_found_in_config** feature **feature_name_not_found_in_extradata** -the extradata **feature_type_not_found_in_extradata** **profile_not_found_in_extradata** **feature_not_unique_in_config** combination unique order perform merge operation required **feature_not_unique_in_extradata** provided **dependacy_component_failure** -failed access dependency component **general_exception_occured** -exception occurred performing requested **namevalue_missmatch_in_config** -one names parameters due pairs equivalent cancelled **namevalue_mismatch_in_extradata** **invalid_profile_configuration** invalid **profile_name_format_error** give profilename format criteria profilename/feature type/feature error **activity_selection_merging_not_supported** activityselection merging supported **invalid_value** **app_not_allowed_to_submit_xml** -permission application allowed submit xml ","summary":"\nDefines all the extended status codes the library returns.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tresults.extendedStatusInfo.extendedStatusCode;\n\nValues:\n\nNONE -There is no extended status code\n\nPROFILE_NOT_FOUND_IN_CONFIG -Profile name not found in current EMDKConfig.xml.","url":"/emdk-for-android/3-1/api/core/EMDKResults-EXTENDED_STATUS_CODE"},{"title":"EMDKResults.STATUS_CODE","keywords":"defines status codes library returns **example usage** java resultsstatuscodesuccess **values** * **success** -process profile success **failure** failure **unknown** mixed results **null_pointer** null **empty_profilename** -profile passed process empty **emdk_not_opened** -emdk opened **check_xml** -this returned multiple features present case verify api call successful analyze xml **previous_request_in_progress** -the previous request progress wait complete **processing** processing started result data listener callback registered **no_data_listener** asynchronous method processprofileasync issued adding ","summary":"\nDefines all the status codes the library returns.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tresults.statusCode.SUCCESS;\n\nValues:\n\nSUCCESS -Process profile was a success.","url":"/emdk-for-android/3-1/api/core/EMDKResults-STATUS_CODE"},{"title":"EMDKServiceConnection","keywords":"helper class emdk internal ##public methods ### isserviceconnected **public boolean isserviceconnected** **returns** getservice iemdkservice getservice** onserviceconnected void onserviceconnectedcomponentname ibinder service** **parameters** service onservicedisconnected onservicedisconnectedcomponentname name** ","summary":"\nHelper class. EMDK internal use only\n\nPublic Methods\n\n isServiceConnected\n\npublic boolean isServiceConnected()\n\nReturns:\n\nboolean\n\ngetService\n\npublic IEMDKService getService()\n\nReturns:\n\nIEMDKService\n\n onServiceConnected\n\npublic void onServiceConnected(ComponentName name, IBinder service)\n\nParameters:\n\nname\n\nservice\n\nReturns:\n\nvoid\n\nonServiceDisconnected\n\npublic void onServiceDisconnected(ComponentName name)\n\nParameters:\n\nname\n\nReturns:\n\nvoid\n\n","url":"/emdk-for-android/3-1/api/core/EMDKServiceConnection"},{"title":"ProfileConfig","keywords":"class dealing profile data **example usage** java profileconfig = ##constructors ###profileconfig creates instance ##public fields ###profilename sets string profilename profileconfigprofilename **type** javalangstring ###modifieddate profiles modified date profiledate profileconfigmodifieddate ###datacapture datacapture object profileconfig#datacapture profileconfigdatacapture comsymbolemdkprofileconfigdatacapture ###activityselection activity selection profileconfig#activityselection activities application session activityselection profileconfigactivityselection comsymbolemdkprofileconfigactivityselection enums ###profileconfigdevicetypes list supported scanner device types devicetypesinternal_laser1 **values** * **auto** -default configured **internal_laser1** -internal laser **internal_camera1** camera **internal_imager1** imager ###profileconfigenabled_state enable states enabled_statefalse **default** state **false** -disabled **true** -enabled ###profileconfigillumination_mode turns illumination option selected barcode input illumination_modedefault **off** -external **on** ###profileconfiglcd_mode disable lcd mode blockbuster devices enhances ability read bar codes displays cellphones lcd_modedefault **disabled** -disables **enabled** -enables ###profileconfiginverse_1d_mode parameter user select decoding inverse 1d inverse_1d_modedefault symbologies -allows positive ###profileconfigpreamble controls preamble applied code characters part upc symbol consisting country system character match host preambledefault **none** -no **sys_char** -system **country_and_sys_char** -both ###profileconfigisbt128_contact_mode concatenating pairs isbt128 isbt128_contact_modedefault concatenation **never** -will ignore pair output decode barcodes **always** present decoded isbt order perform -decodes concatenates immediately single number times set datawedge configuration redundancy code128 transmitting confirm additional ###profileconfigsecurity_level offers levels security upc/ean higher lower quality relationship speed choose level check_digit_typedefault **level_0** -this setting operate fastest providing sufficient in-spec default **level_1** -as diminish prone misdecodes misdecoding poorly printed limited **level_2** -if **level_3** advised selecting extreme measure severely spec significantly impair improve ###profileconfigpower_mode power power_modedefault linear **low** -lowest slowest performance **optimized** -power adjusts scanning usage defalt **high** -high excellent **always_on** -highest ###profileconfiglinear_security_level accurate linear_security_leveldefault **short_or_codabar** -two short codabar **all_twice** **long_and_short** long **all_thrice** -three ###profileconfigcheck_digit_type verify integrity check digit type **no** -a **uss** -select interleaved symbols complies uniform symbology specification uss algorithm **opcc** optical product council opcc ###profileconfigcheck_digit digits verified msi mandatory reader optional check_digitdefault **one** -verify **two** ###profileconfigverify_check_digit selects mechanism verify_check_digitdefault scheme -do -bar ###profileconfigcheck_digit_scheme algorithms verification encode check_digit_schemedefault **mod_11_10** -first mod **mod_10_10** ###profileconfigucc_link_mode describes ucc link ucc_link_modedefault **link_flag_ignored** -1d component transmitted 2d detected **always_linked** components **auto_discriminate** -the digital determines portion transmits ###profileconfigpick_list directly cross-hair/reticle + pattern feature applications multiple field view tar geted pick_listdefault pick picklist cross-hair reticle conjunction static dynamic viewfinder modes scan module **centered** center image note valid decoder modules supports unsupported issue error ###profileconfigcode_id_type id identifies scanned insert prefix code_id_typedefault **aim** standards based **symbol** defined ###profileconfigvolume_slider_type defines notification good volume_slider_typedefault **ringer_and_notifications** -ringer notifications **music_and_media** -music media **alarm** -alarms ###profileconfigsupplemental_mode supplemental supplemental_modedefault presented decodes ignores supplementals **smart** smart returns main block belong starts prefixes searches aggressively failed returned **s_378_379** auto-discriminate starting disables reading **s_978_979** **s_414_419_434_439** **s_977** ###profileconfigcoupon_report coupon coupon_reportdefault reports **old** -scanner format **new** gs1 databar **both** ###profileconfigbookland_format lists bookland formats bookland_formatdefault **isbn_10** -978 reported **isbn_13** -978/979 ean13 isbn-13 protocol ###profileconfigviewfinder_mode configures viewfinder_modeenabled finder -viewfinder disabled displayed aiming enabled images captured screen **static_recticle** locate draws red helps tracking ###profileconfigintent_delivery intent plug-in form implicit intent_deliverysend_via_startactivity delivery **send_via_startactivity** -send startactivity **send_via_startservice** startservice **broadcast_intent** broadcast ###profileconfigaction_key_char keystroke action key enables special embedded msr native android helpful populating executing action_key_charnone -action **tab** -tab processed detects move focus **linefeed** -line feed **carriagereturn** -carriage return ###profileconfigaim_type aim_typecontinuous_read aim_type **trigger** -standard trigger **continuous_read** -in pulled continue releasing rapid ","summary":"\nClass for dealing with profile data\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tProfileConfig profileConfig = new ProfileConfig();\n\nConstructors\n\nProfileConfig\n\nCreates a new instance of ProfileConfig.","url":"/emdk-for-android/3-1/api/core/ProfileConfig"},{"title":"ProfileConfig.ACTION_KEY_CHAR","keywords":"keystroke output action key character enables decoding special embedded bar code msr data native android applications feature helpful populating executing form **example usage** java action_key_charnone **values** * **default** -default configured device **none** -action disabled **tab** -tab processed datawedge detects move focus field **linefeed** -line feed **carriagereturn** -carriage return ","summary":"\nKeystroke Output Action key character enables decoding of a special character embedded within a bar code or MSR data for use in native Android applications.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-ACTION_KEY_CHAR"},{"title":"ProfileConfig.AIM_TYPE","keywords":"describes type aiming **example usage** java aim_typecontinuous_read **values** * **default** -default aim_type configured device **trigger** -standard trigger mode **continuous_read** -in pulled user continue scanning barcodes releasing perform rapid ","summary":"\nDescribes the type of aiming to use.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tAIMTYPE.CONTINUOUSREAD;\n\nValues:\n\nDEFAULT -Default AIM_TYPE configured on the device\n\nTRIGGER -Standard Trigger Mode\n\nCONTINUOUS_READ -In this mode once the trigger is pulled the user can continue scanning barcodes without releasing the trigger.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-AIM_TYPE"},{"title":"ProfileConfig.ActivitySelection","keywords":"class dealing activityselection profile data profileconfig#activityselection **example usage** java = profileconfigactivityselection ##constructors ###activityselection ##public fields ###activities sets activities profileconfigactivityselection#activities **type** javautilarraylist ","summary":"\nClass for dealing with ActivitySelection of profile data  ProfileConfig#activitySelection\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tActivitySelection activitySelection = profileConfig.activitySelection;\n\nConstructors\n\nActivitySelection\n\nPublic Fields\n\nactivities\n\nGets and Sets activities to the profile  ProfileConfig.ActivitySelection#activities.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-ActivitySelection"},{"title":"ProfileConfig.ActivitySelection.ActivityElement","keywords":"sets application's package activities profile profileconfigactivityselectionactivityelement **example usage** java arraylist = profileconfigactivityselectionactivities ##constructors ###activityelement **parameters** packagename **type** javalangstring ##public fields ###packagename ","summary":"\nGets and Sets application's package name and its activities to the profile  ProfileConfig.ActivitySelection.ActivityElement.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tArrayListActivityElement activities = profileConfig.activitySelection.activities;\n\nConstructors\n\nActivityElement\n\nParameters:\n\npackageName\n\nType: java.lang.String\n\nactivities\n\nType: java.lang.String\n\nPublic Fields\n\npackageName\n\nType:\n\njava.lang.String\n\n","url":"/emdk-for-android/3-1/api/core/ProfileConfig-ActivitySelection-ActivityElement"},{"title":"ProfileConfig.BOOKLAND_FORMAT","keywords":"lists bookland formats **example usage** java bookland_formatdefault **values** * **default** -default format configured device **isbn_10** -978 reported digit mode **isbn_13** -978/979 transmitted ean13 isbn-13 protocol ","summary":"\nLists the Bookland formats\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tBOOKLAND_FORMAT.DEFAULT;\n\nValues:\n\nDEFAULT -Default bookland format configured on device\n\nISBN_10 -978 reported in 10 digit mode\n\nISBN_13 -978/979 transmitted as EAN13 as per 2007 ISBN-13 protocol\n\n","url":"/emdk-for-android/3-1/api/core/ProfileConfig-BOOKLAND_FORMAT"},{"title":"ProfileConfig.CHECK_DIGIT","keywords":"number check digits verified msi symbols digit mandatory reader optional **example usage** java check_digitdefault **values** * **default** -default configured device **one** -verify **two** ","summary":"\nThe number of check digits to be verified.\n With MSI symbols, one check digit is mandatory and always verified by the reader.\n The second check digit is optional.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-CHECK_DIGIT"},{"title":"ProfileConfig.CHECK_DIGIT_SCHEME","keywords":"algorithms verification msi check digit select algorithm encode **example usage** java check_digit_schemedefault **values** * **default** -default scheme configured device **mod_11_10** -first mod **mod_10_10** -both digits ","summary":"\nTwo algorithms are possible for the verification of the second MSI check digit.\n Select the algorithm used to encode the check digit.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCHECKDIGITSCHEME.DEFAULT;\n\nValues:\n\nDEFAULT -Default check digit scheme configured on device.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-CHECK_DIGIT_SCHEME"},{"title":"ProfileConfig.CHECK_DIGIT_TYPE","keywords":"verify data integrity **example usage** java check_digit_typedefault **values** * **default** -default check digit type configured device **no** -a **uss** -select interleaved symbols complies uniform symbology specification uss algorithm **opcc** optical product code council opcc ","summary":"\nVerify data integrity.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCHECKDIGITTYPE.DEFAULT;\n\nValues:\n\nDEFAULT -Default check digit type configured on device.\n\nNO -A check digit is not used.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-CHECK_DIGIT_TYPE"},{"title":"ProfileConfig.CODE_ID_TYPE","keywords":"code id character identifies type scanned bar reader decoding select insert prefix decoded symbol **example usage** java code_id_typedefault **values** * **default** -default configured device **none** -no **aim** -a standards based **symbol** defined single ","summary":"\nA Code ID character identifies the code type of a scanned bar code.\n This is useful when the reader is decoding more than one code type.\n Select a code ID character to insert between the prefix and the decoded symbol.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-CODE_ID_TYPE"},{"title":"ProfileConfig.COUPON_REPORT","keywords":"supported coupon modes **example usage** java coupon_reportdefault **values** * **default** -default reports mode configured device **old** -scanner read format **new** gs1 databar **both** ","summary":"\nSupported Coupon modes\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCOUPON_REPORT.DEFAULT;\n\nValues:\n\nDEFAULT -Default coupon reports mode configured on device\n\nOLD -Scanner will read only the old coupon format\n\nNEW -Scanner will read only the new GS1 DataBar coupon format\n\nBOTH -Scanner will read both old coupon format as well as the new GS1 DataBar coupon format\n\n","url":"/emdk-for-android/3-1/api/core/ProfileConfig-COUPON_REPORT"},{"title":"ProfileConfig.DEVICETYPES","keywords":"list supported scanner device types **example usage** java devicetypesinternal_laser1 **values** * **auto** -default configured **internal_laser1** -internal laser **internal_camera1** camera **internal_imager1** imager ","summary":"\nList of supported scanner device types\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tDEVICETYPES.INTERNAL_LASER1;\n\nValues:\n\nAUTO -Default scanner device configured on device\n\nINTERNAL_LASER1 -Internal laser\n\nINTERNAL_CAMERA1 -Internal camera\n\nINTERNAL_IMAGER1 -Internal imager\n\n","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DEVICETYPES"},{"title":"ProfileConfig.DataCapture","keywords":"class dealing data capture profile profileconfigdatacapture **example usage** java datacapture = ##public fields ###msr sets msr configuration object profileconfigmsrmsr_input_enabled enabled_statedefault **type** comsymbolemdkprofileconfigdatacapturemsr ###barcode barcode profileconfigdatacapturebarcodedecoderscode11 comsymbolemdkprofileconfigdatacapturebarcode ###datadelivery datadelivery profileconfigdatacapturedatadeliverykeystrokeime_output_enabled comsymbolemdkprofileconfigdatacapturedatadelivery ","summary":"\nClass for dealing with data capture profile data  ProfileConfig.DataCapture\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tDataCapture dataCapture = profileConfig.dataCapture;\n\nPublic Fields\n\nmsr\n\nGets and Sets MSR configuration object.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture"},{"title":"ProfileConfig.DataCapture.Barcode","keywords":"holds barcode configuration settings **example usage** java = profileconfigdatacapturebarcode ##public fields ###scanner_input_enabled sets scanner enabled state profileconfigenabled_state barcodescanner_input_enabled enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ###scannerselection selection profileconfigdevicetypes barcodescannerselection devicetypesdefault comsymbolemdkprofileconfigdevicetypes ###decoders decoders object profileconfigdatacapturebarcode#decoders barcodedecoderscodabar comsymbolemdkprofileconfigdatacapturebarcodedecoders ###decoderparams decoderparams profileconfigdatacapturebarcode#decoderparams barcodedecoderparamsupcapreamble preamblesys_char comsymbolemdkprofileconfigdatacapturebarcodedecoderparams ###readerparams readerparams profileconfigdatacapturebarcode#readerparams barcodereaderparamsillumination_mode illumination_modedefault comsymbolemdkprofileconfigdatacapturebarcodereaderparams ###scanparams scanparams profileconfigdatacapturebarcode#scanparams barcodescanparamsdecode_haptic_feedback comsymbolemdkprofileconfigdatacapturebarcodescanparams ###upceanparams upceanparams profileconfigdatacapturebarcode#upceanparams barcodeupceanparamslinear_decode comsymbolemdkprofileconfigdatacapturebarcodeupceanparams ","summary":"\nHolds Barcode configuration settings\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tBarcode barcode = profileConfig.dataCapture.barcode;\n\nPublic Fields\n\nscannerinputenabled\n\nGets and Sets scanner enabled state   ProfileConfig.ENABLED_STATE.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams","keywords":"holds decoder configuration settings **example usage** java decoderparams = profileconfigdatacapturebarcodedecoderparams ##public fields ###upca configures upca symbology object profileconfigdatacapturebarcodedecoderparamsupca decoderparamsupcareport_check_digit enabled_statedefault **type** comsymbolemdkprofileconfigdatacapturebarcodedecoderparamsupca ###upce0 upce0 profileconfigdatacapturebarcodedecoderparamsupce0 decoderparamsupce0report_check_digit comsymbolemdkprofileconfigdatacapturebarcodedecoderparamsupce0 ###ean8 ean8 profileconfigdatacapturebarcodedecoderparamsean8 decoderparamsean8convert_to_ean13 comsymbolemdkprofileconfigdatacapturebarcodedecoderparamsean8 ###code128 code128 profileconfigdatacapturebarcodedecoderparamscode128 decoderparamscode128enable_ean128 comsymbolemdkprofileconfigdatacapturebarcodedecoderparamscode128 ###code39 code39 profileconfigdatacapturebarcodedecoderparamscode39 decoderparamscode39full_ascii comsymbolemdkprofileconfigdatacapturebarcodedecoderparamscode39 ###interleaved_2of5 interleaved 2of5 profileconfigdatacapturebarcodedecoderparamsinterleaved_2of5 decoderparamsinterleaved_2of5check_digit check_digit_typedefault comsymbolemdkprofileconfigdatacapturebarcodedecoderparamsinterleaved_2of5 ###composite_ab composite ab profileconfigdatacapturebarcodedecoderparamscomposite_ab decoderparamscomposite_abucc_link_mode ucc_link_modealways_linked comsymbolemdkprofileconfigdatacapturebarcodedecoderparamscomposite_ab ###uspostnet postnet profileconfigdatacapturebarcodedecoderparamsuspostnet decoderparamsuspostnetreport_check_digit comsymbolemdkprofileconfigdatacapturebarcodedecoderparamsuspostnet ###usplanet planet profileconfigdatacapturebarcodedecoderparamsusplanet decoderparamsusplanetreport_check_digit comsymbolemdkprofileconfigdatacapturebarcodedecoderparamsusplanet ###uk_postal uk postal profileconfigdatacapturebarcodedecoderparamsuk_postal decoderparamsuk_postalreport_check_digit comsymbolemdkprofileconfigdatacapturebarcodedecoderparamsuk_postal ###codabar codabar profileconfigdatacapturebarcodedecoderparamscodabar decoderparamscodabarclsi_editing comsymbolemdkprofileconfigdatacapturebarcodedecoderparamscodabar ###msi msi profileconfigdatacapturebarcodedecoderparamsmsi decoderparamsmsicheck_digit check_digitdefault comsymbolemdkprofileconfigdatacapturebarcodedecoderparamsmsi ###code93 code93 profileconfigdatacapturebarcodedecoderparamscode93 decoderparamscode93redundancy comsymbolemdkprofileconfigdatacapturebarcodedecoderparamscode93 ###trioptic39 trioptic39 profileconfigdatacapturebarcodedecoderparamstrioptic39 decoderparamstrioptic39redundancy comsymbolemdkprofileconfigdatacapturebarcodedecoderparamstrioptic39 ###discrete_2of5 discrete_2of5 profileconfigdatacapturebarcodedecoderparamsdiscrete_2of5 decoderparamsdiscrete_2of5redundancy comsymbolemdkprofileconfigdatacapturebarcodedecoderparamsdiscrete_2of5 ###code11 code11 profileconfigdatacapturebarcodedecoderparamscode11 decoderparamscode11redundancy comsymbolemdkprofileconfigdatacapturebarcodedecoderparamscode11 ###matrix_2of5 matrix profileconfigdatacapturebarcodedecoderparamsmatrix_2of5 decoderparamsmatrix_2of5redundancy comsymbolemdkprofileconfigdatacapturebarcodedecoderparamsmatrix_2of5 ###upce1 upce1 profileconfigdatacapturebarcodedecoderparamsupce1 decoderparamsupce1convert_to_upca comsymbolemdkprofileconfigdatacapturebarcodedecoderparamsupce1 ","summary":"\nHolds Decoder configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tDecoderParams decoderParams = profileConfigdataCapture.barcode.decoderParams;\n\nPublic Fields\n\nupca\n\nConfigures the UPCA Symbology object  ProfileConfig.DataCapture.Barcode.DecoderParams.UPCA.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.Codabar","keywords":"holds codabar configuration settings **example usage** java = profileconfigbarcodedecoderparamscodabar ##public fields ###length1 set decode lengths default int length1 codabarlength1 **type** ###length2 length2 codabarlength2 ###redundancy sets reader read bar code accepting data enabled enum profileconfigenabled_state codabarredundancy enabled_statedefault comsymbolemdkprofileconfigenabled_state ###clsi_editing enable parameter strip start stop characters insert space tenth 14-character symbol feature host system requires format disabled codabarclsi_editing ###notis_editing decoded codabarnotis_editing ","summary":"\nHolds Codabar configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCodabar codabar = profileConfig.Barcode.DecoderParams.Codabar;\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths (default - 6).","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-Codabar"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.Code11","keywords":"holds code configuration settings **example usage** java code11 = profileconfigdatacapturebarcodedecoderparamscode11 ##public fields ###length1 set decode lengths default int length1 code11length1 **type** ###length2 length2 code11length2 ###redundancy sets reader read bar accepting data enabled enum profileconfigenabled_state code11redundancy enabled_statedefault comsymbolemdkprofileconfigenabled_state ###verify_check_digit check integrity symbols verify complies digit algorithm selects mechanism decoded profileconfigverify_check_digit code11verify_check_digit verify_check_digitdefault comsymbolemdkprofileconfigverify_check_digit ###report_check_digit transmit disabled code11report_check_digit ","summary":"\nHolds Code 11 configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCode11 code11 = profileConfig.dataCapture.barcode.decoderParams.code11;\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths (default - 4).","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-Code11"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.Code128","keywords":"holds code128 configuration settings **example usage** java = profileconfigdatacapturebarcodedecoderparamscode128 ##public fields ###length1 set decode lengths default int length1 code128length1 **type** ###length2 length2 code128length2 ###redundancy sets reader read bar code accepting data disabled enum profileconfigenabled_state code128redundancy enabled_statedefault comsymbolemdkprofileconfigenabled_state ###enable_plain flag enable types gs1-128 isbt -128 code128enable_plain ###enable_ean128 ean128 subtype enabled code128enable_ean128 ###enable_isbt128 isbt128 code128enable_isbt128 ###isbt128_concat_mode select option concatenating pairs profileconfigisbt128_contact_mode code128isbt128_concat_mode isbt128_contact_modedefault comsymbolemdkprofileconfigisbt128_contact_mode ###check_isbt_table specification includes table lists codes commonly concat mode check concatenate found concatenated code128check_isbt_table ###security_level scanner fers levels security increasing decreasing quality inverse relationship aggressiveness choose level application profileconfigsecurity_level code128security_level security_leveldefault comsymbolemdkprofileconfigsecurity_level ","summary":"\nHolds Code128 configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCode128 code128 = profileConfig.dataCapture.barcode.decoderParams.code128;\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths (default - 0).","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-Code128"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.Code39","keywords":"holds code39 configuration settings **example usage** java = profileconfigdatacapturebarcodedecoderparamscode39 ##public fields ###length1 set decode lengths default int length1 code39length1 **type** ###length2 length2 code39length2 ###verify_check_digit enable feature check integrity code symbols verify data complies digit algorithm digital scanner decodes include modulo disabled enum profileconfigenabled_state code39verify_check_digit enabled_statedefault comsymbolemdkprofileconfigenabled_state ###report_check_digit transmit code39report_check_digit ###full_ascii full ascii variant pairs characters encode character code39full_ascii ###redundancy sets reader read bar accepting code39redundancy ###convert_to_code32 italian pharmaceutical industry code39convert_to_code32 ###report_code32_prefix scan disable adding prefix codes code39report_code32_prefix ###security_level options security level profileconfigsecurity_level code39security_level security_leveldefault comsymbolemdkprofileconfigsecurity_level ","summary":"\nHolds Code39 configuration settings.\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCode39 code39 = profileConfig.dataCapture.barcode.decoderParams.code39;\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths (default - 0).","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-Code39"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.Code93","keywords":"holds code93 configuration settings **example usage** java = profileconfigdatacapturebarcodedecoderparamscode93 ##public fields ###length1 set decode lengths default int length1 code93length1 **type** ###length2 length2 code93length2 ###redundancy sets reader read bar code accepting data disabled enum profileconfigenabled_state code93redundancy enabled_statedefault comsymbolemdkprofileconfigenabled_state ","summary":"\nHolds Code93 configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCode93 code93 = profileConfig.dataCapture.barcode.decoderParams.code93;\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths (default - 0).","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-Code93"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.Composite_AB","keywords":"holds composite ab configuration settings **example usage** java composite_ab compositeab = profileconfigdatacapturebarcodedecoderparamscomposite_ab ##public fields ###ucc_link_mode sets ucc link mode profileconfigucc_link_mode enum compositeabucc_link_mode ucc_link_modedefault **type** comsymbolemdkprofileconfigucc_link_mode ","summary":"\nHolds Composite AB configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tCompositeAB compositeAB = profileConfig.dataCapture.barcode.decoderParams.compositeAB;\n\nPublic Fields\n\nucclinkmode\n\nGets and Sets UCC Link Mode using  ProfileConfig.UCCLINKMODE enum;\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tcompositeAB.ucclinkmode = UCCLINKMODE.DEFAULT;\n\nType:\n\ncom.symbol.emdk.ProfileConfig.UCCLINKMODE\n\n","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-Composite_AB"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.Discrete_2of5","keywords":"holds discrete configuration settings **example usage** java discrete_2of5 = profileconfigdatacapturebarcodedecoderparamsdiscrete_2of5 ##public fields ###length1 set decode lengths default int length1 discrete_2of5length1 **type** ###length2 length2 discrete_2of5length2 ###redundancy sets reader read bar code accepting data enabled enum profileconfigenabled_state discrete_2of5redundancy enabled_statedefault comsymbolemdkprofileconfigenabled_state ","summary":"\nHolds Discrete 2 of 5 configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tDiscrete2of5 discrete2of5 = profileConfig.dataCapture.barcode.decoderParams.discrete_2of5;\n\nPublic Fields\n\nlength1\n\nUsed to set decode lengths (default - 0).","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-Discrete_2of5"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.EAN8","keywords":"holds ean8 configuration settings **example usage** java = profileconfigdatacapturebarcodedecoderparamsean8 ##public fields ###convert_to_ean13 convert data ean default disabled enum profileconfigenabled_state ean8convert_to_ean13 enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ","summary":"\nHolds EAN8 configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tEAN8 ean8 = profileConfig.dataCapture.barcode.decoderParams.ean8;\n\nPublic Fields\n\nconverttoean13\n\nConvert EAN8 data to EAN 13.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-EAN8"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.Interleaved_2of5","keywords":"holds interleaved configuration settings **example usage** java interleaved_2of5 interleaved2of5 = profileconfigdatacapturebarcodedecoderparamsinterleaved_2of5 ##public fields ###length1 set decode lengths default int length1 interleaved2of5length1 **type** ###length2 length2 interleaved2of5length2 ###redundancy sets reader read bar code accepting data enabled enum profileconfigenabled_state interleaved2of5redundancy enabled_statedefault comsymbolemdkprofileconfigenabled_state ###check_digit check digit type verify profileconfigcheck_digit_type interleaved2of5check_digit check_digit_typedefault comsymbolemdkprofileconfigcheck_digit_type ###report_check_digit transmit disabled interleaved2of5report_check_digit ###convert_itf14_to_ean13 convert 14-character codes ean-13 leading valid interleaved2of5convert_itf14_to_ean13 ###security_level specifies security level profileconfigsecurity_level interleaved2of5security_level security_leveldefault comsymbolemdkprofileconfigsecurity_level ","summary":"\nHolds Interleaved 2 of 5 configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tInterleaved2of5 interleaved2of5 = profileConfig.dataCapture.barcode.decoderParams.interleaved2of5;\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths (default - 14).","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-Interleaved_2of5"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.MSI","keywords":"holds codabar configuration settings **example usage** java msi = profileconfigdatacapturebarcodedecoderparamsmsi ##public fields ###length1 set decode lengths default int length1 msilength1 **type** ###length2 length2 msilength2 ###redundancy sets reader read bar code accepting data enabled enum profileconfigenabled_state msiredundancy enabled_statedefault comsymbolemdkprofileconfigenabled_state ###check_digit symbols check digit mandatory verified optional profileconfigcheck_digit msicheck_digit check_digitdefault comsymbolemdkprofileconfigcheck_digit ###check_digit_scheme algorithms verification select algorithm encode profileconfigcheck_digit_scheme msicheck_digit_scheme check_digit_schemedefault comsymbolemdkprofileconfigcheck_digit_scheme ###report_check_digit transmit disabled msireport_check_digit ","summary":"\nHolds Codabar configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tMSI msi = profileConfig.dataCapture.barcode.decoderParams.msi;\n\nPublic Fields\n\nlength1\n\nUse to set decode lengths (default - 4).","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-MSI"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.Matrix_2of5","keywords":"holds matrix configuration settings **example usage** java matrix_2of5 matrix2of5 = profileconfigdatacapturebarcodedecoderparamsmatrix_2of5 ##public fields ###length1 set decode lengths default int length1 matrix2of5length1 **type** ###length2 length2 matrix2of5length2 ###redundancy sets reader read bar code accepting data disabled enum profileconfigenabled_state matrix2of5redundancy enabled_statedefault comsymbolemdkprofileconfigenabled_state ###report_check_digit transmit check digitdefault enabled matrix2of5report_check_digit ###verify_check_digit enable feature integrity symbols verify complies digit algorithm matrix2of5verify_check_digit ","summary":"\nHolds Matrix 2 of 5 configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tMatrix2of5 matrix2of5 = profileConfig.dataCapture.barcode.decoderParams.matrix2of5;\n\nPublic Fields\n\nlength1\n\nUsed to set decode lengths (default - 10).","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-Matrix_2of5"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.Trioptic39","keywords":"holds trioptic39 configuration settings **example usage** java = profileconfigdatacapturebarcodedecoderparamstrioptic39 ##public fields ###redundancy sets reader read bar code accepting data default enabled enum profileconfigenabled_state trioptic39redundancy enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ","summary":"\nHolds Trioptic39 configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tTrioptic39 trioptic39 = profileConfig.dataCapture.barcode.decoderParams.trioptic39;\n\nPublic Fields\n\nredundancy\n\nSets the reader to read the bar code twice before accepting data.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-Trioptic39"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.UK_Postal","keywords":"holds uk postal configuration settings **example usage** java uk_postal ukpostal = profileconfigdatacapturebarcodedecoderparamsuk_postal ##public fields ###report_check_digit transmit data check digit default disabled enum profileconfigenabled_state ukpostalreport_check_digit enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ","summary":"\nHolds UK Postal configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tUKPostal ukPostal = profileConfig.dataCapture.barcode.decoderParams.ukPostal;\n\nPublic Fields\n\nreportcheckdigit\n\nTransmit UK Postal data with or without the check digit (default - disabled).","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-UK_Postal"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.UPCA","keywords":"holds upca configuration settings **example usage** java = profileconfigdatacapturebarcodedecoderparamsupca ##public fields ###preamble preamble characters part upc symbol consisting country code system character select option match host enum profileconfigpreamble upcapreamble preambledefault **type** comsymbolemdkprofileconfigpreamble ###report_check_digit check digit verify integrity data enables disables default enabled profileconfigenabled_state upcareport_check_digit enabled_statedefault comsymbolemdkprofileconfigenabled_state ","summary":"\nHolds UPCA configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tUPCA upca = profileConfig.dataCapture.barcode.decoderParams.upca;\n\nPublic Fields\n\npreamble\n\nPreamble characters are part of the UPC symbol consisting of Country Code and System Character.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-UPCA"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.UPCE0","keywords":"holds upce0 configuration settings **example usage** java = profileconfigdatacapturebarcodedecoderparamsupce0 ##public fields ###report_check_digit check digit character symbol verify integrity data enables disables option default disabled enum profileconfigenabled_state upce0report_check_digit enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ###preamble preamble characters part upc consisting country code system select match host profileconfigpreamble upce0preamble preambledefault comsymbolemdkprofileconfigpreamble ###convert_to_upca enable convert suppressed decoded upc-a format transmission conversion af fected programming selections disable transmit upce0convert_to_upca ","summary":"\nHolds UPCE0 configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tUPCE0 upce0 = profileConfig.dataCapture.barcode.decoderParams.upce0;\n\nPublic Fields\n\nreportcheckdigit\n\nThe check digit is the last character of the symbol used to verify the integrity of the data.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-UPCE0"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.UPCE1","keywords":"holds upce1 configuration settings **example usage** java = profileconfigdatacapturebarcodedecoderparamsupce1 ##public fields ###report_check_digit check digit character symbol verify integrity data enables disables option default disabled enum profileconfigenabled_state upce1report_check_digit enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ###preamble preamble characters part upc consisting country code system select match host profileconfigpreamble upce1preamble preambledefault comsymbolemdkprofileconfigpreamble ###convert_to_upca enable convert decoded upc-a format transmission conversion af fected programming selections disable transmit upce1convert_to_upca ","summary":"\nHolds UPCE1 configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tUPCE1 upce1 = profileConfig.dataCapture.barcode.decoderParams.upce1;\n\nPublic Fields\n\nreportcheckdigit\n\nThe check digit is the last character of the symbol used to verify the integrity of the data.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-UPCE1"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.USPlanet","keywords":"holds planet configuration settings **example usage** java usplanet = profileconfigdatacapturebarcodedecoderparamsusplanet ##public fields ###report_check_digit transmit data check digit default disabled enum profileconfigenabled_state usplanetreport_check_digit enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ","summary":"\nHolds US Planet configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tUSPlanet usPlanet = profileConfig.dataCapture.barcode.decoderParams.usPlanet;\n\nPublic Fields\n\nreportcheckdigit\n\nTransmit USPlanet data with or without the check digit.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-USPlanet"},{"title":"ProfileConfig.DataCapture.Barcode.DecoderParams.USPostnet","keywords":"holds postnet configuration settings **example usage** java uspostnet = profileconfigdatacapturebarcodedecoderparamsuspostnet ##public fields ###report_check_digit transmit data check digit default disabled enum profileconfigenabled_state uspostnetreport_check_digit enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ","summary":"\nHolds US Postnet configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tUSPostnet usPostnet = profileConfig.dataCapture.barcode.decoderParams.usPostnet;\n\nPublic Fields\n\nreportcheckdigit\n\nTransmit USPostnet data with or without the check digit.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-DecoderParams-USPostnet"},{"title":"ProfileConfig.DataCapture.Barcode.Decoders","keywords":"decoders class access enable disable decoder barcode symbologies **example usage** java = barcodedecoders decodersupca enabled_statetrue ##public fields ###upca sets enabled state upca enum profileconfigenabled_state enabled_statedefault } **type** comsymbolemdkprofileconfigenabled_state ###upce0 upce0 decodersupce0 ###ean13 ean-13 decodersean13 ###ean8 ean-8 decodersean8 ###code128 code decoderscode128 ###code39 decoderscode39 ###i2of5 decodersi2of5 ###gs1_databar interleaved decodersgs1_databar ###gs1_databar_lim gs1 databar limited decodersgs1_databar_lim ###gs1_databar_exp expanded decodersgs1_databar_exp ###datamatrix data matrix decodersdatamatrix ###qrcode qr decodersqrcode ###pdf417 pdf417 decoderspdf417 ###composite_ab composite ab decoderscomposite_ab ###composite_c decoderscomposite_c ###microqr micro decodersmicroqr ###aztec aztec decodersaztec ###maxicode maxicode decodersmaxicode ###micropdf pdf decodersmicropdf ###uspostnet postnet decodersuspostnet ###usplanet planet decodersusplanet ###uk_postal uk postal decodersuk_postal ###japanese_postal japan decodersjapanese_postal ###australian_postal australian decodersaustralian_postal ###canadian_postal canadian decoderscanadian_postal ###dutch_postal dutch decodersdutch_postal ###us4state us4state decodersus4state ###us4state_fics fics decodersus4state_fics ###codabar codabar decoderscodabar ###msi msi decodersmsi ###code93 decoderscode93 ###trioptic39 trioptic decoderstrioptic39 ###d2of5 discrete decodersd2of5 ###chinese_2of5 chinese decoderschinese_2of5 ###korean_3of5 korean decoderskorean_3of5 ###code11 code11 decoderscode11 ###tlc39 tlc decoderstlc39 ###signature signature decoderssignature ###webcode web decoderswebcode ###matrix_2of5 decodersmatrix_2of5 ###upce1 upce1 decodersupce1 ","summary":"\nThe Decoders class provides access to enable or disable decoder barcode symbologies.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tDecoders decoders = barcode.decoders;\n\tdecoders.upca = ENABLED_STATE.TRUE;\n\nPublic Fields\n\nupca\n\nSets the Enabled State of Decoder UPCA.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-Decoders"},{"title":"ProfileConfig.DataCapture.Barcode.ReaderParams","keywords":"holds reader configuration settings **example usage** java readerparams = profileconfigdatacapturebarcodereaderparams ##public fields ###aim_type setting change behavior aimer **type** comsymbolemdkprofileconfigaim_type ###same_barcode_timeout prevent scanner driver decoding symbol time interval applicable aim_type aim_typecontinuous_read basically continuous mode user perform rapid scan barcode set milliseconds means required successive reads boundary values increments int ###different_barcode_timeout quickly aim ###beam_timer sets maximum amount remains ms stay indefinitely default -15000 timer readerparamsbeam_timer ###power_mode power enum profileconfigpower_mode readerparamspower_mode power_modedefault comsymbolemdkprofileconfigpower_mode ###linear_security_level number times bar code read confirm accurate decode profileconfiglinear_security_level readerparamslinear_security_level linear_security_leveldefault comsymbolemdkprofileconfiglinear_security_level ###picklist imager directly cross-hair/reticle + part pattern feature applications multiple codes field view session targeted profileconfigpick_list readerparamspicklist pick_listdefault comsymbolemdkprofileconfigpick_list ###illumination_mode turns camera illumination option selected input selection profileconfigillumination_mode readerparamsillumination_mode illumination_modedefault comsymbolemdkprofileconfigillumination_mode ###lcd_mode enables disables lcd enhances ability displays cellphones profileconfiglcd_mode readerparamslcd_mode lcd_modedefault comsymbolemdkprofileconfiglcd_mode ###low_power_timeout non-use dropping low-power timeout readerparamslow_power_timeout ###illumination_brightness brightness lowest highest illumination_brightness readerparamsillumination_brightness ###inverse_1d_mode parameter select inverse 1d profileconfiginverse_1d_mode readerparamsinverse_1d_mode inverse_1d_modeauto comsymbolemdkprofileconfiginverse_1d_mode ###viewfinder_mode configures viewfinder modes supported scanning profileconfigviewfinder_mode readerparamsviewfinder_mode viewfinder_modedefault comsymbolemdkprofileconfigviewfinder_mode ","summary":"\nHolds reader configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tReaderParams readerParams = profileConfig.dataCapture.barcode.readerParams;\n\nPublic Fields\n\naim_type\n\nThis setting is used to change the behavior of the aimer.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-ReaderParams"},{"title":"ProfileConfig.DataCapture.Barcode.ScanParams","keywords":"holds scanning configuration settings **example usage** java scanparams = profileconfigdatacapturebarcodescanparams ##public fields ###code_id_type code id character identifies type scanned bar reader decoding select insert prefix decoded symbol enum profileconfigcode_id_type scanparamscode_id_type code_id_typedefault **type** comsymbolemdkprofileconfigcode_id_type ###volume_slider_type defines notification good decode profileconfigvolume_slider_type scanparamsvolume_slider_type volume_slider_typedefault comsymbolemdkprofileconfigvolume_slider_type ###decode_audio_feedback_uri audio tone sound tones stored application's private data cache asset field decode_audio_feedback_uri avoid access violation meant purpose shared public directories music/ ringtones/ external storage' string audiofeedback scanparamsdecode_audio_feedback_uri javalangstring ###decode_haptic_feedback enable device vibrate default enabled profileconfigenabled_state scanparamsdecode_haptic_feedback enabled_statedefault comsymbolemdkprofileconfigenabled_state ###good_decode_led_timer time led runs milliseconds int ledtimer scanparamsgood_decode_led_timer ###decoding_led_feedback blink disabled scanparamsdecoding_led_feedback ###bt_disconnect_on_exit bluetooth disconnect exit scanparamsbt_disconnect_on_exit ###connection_idle_time scanner application opened automatically disconnected connection idle duration inactivity scanparamsconnection_idle_time ###display_bt_address_barcode set true pairing utility method called scanparamsdisplay_bt_address_barcode ###establish_connection_time timout seconds block returning established scanparamsestablish_connection_time ###datacapture_led_id capture scanparamsdatacapture_led_id ","summary":"\nHolds scanning configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tScanParams scanParams = profileConfig.dataCapture.barcode.scanParams;\n\nPublic Fields\n\ncodeidtype\n\nA Code ID character identifies the code type of a scanned bar code.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-ScanParams"},{"title":"ProfileConfig.DataCapture.Barcode.UpcEanParams","keywords":"holds upc ean params configuration settings **example usage** java upceanparams = profileconfigdatacapturebarcodeupceanparams ##public fields ###security_level scanner fers levels decode security upc/ean bar codes select higher lower quality inverse relationship speed choose level application enum profileconfigsecurity_level upceanparamssecurity_level security_leveldefault **type** comsymbolemdkprofileconfigsecurity_level ###supplemental2 flag enable length supplementals profileconfigenabled_state upceanparamssupplemental2 enabled_statedefault comsymbolemdkprofileconfigenabled_state ###supplemental5 upceanparamssupplemental5 ###supplemental_mode supplemental mode profileconfigsupplemental_mode upceanparamssupplemental_mode supplemental_modedefault comsymbolemdkprofileconfigsupplemental_mode ###retry_count retry count auto-discriminating values inclusive note considered set auto smart 378-379 978-979 414-419-434-439 default int upceanparamsretry_count ###random_weight_check_digit random weight check digit verification upceanparamsrandom_weight_check_digit ###linear_decode linear upceanparamslinear_decode ###bookland bookland code decoding upceanparamsbookland ###coupon enables coupon order successfully correct decoders enabled upceanparamscoupon ###coupon_report differentiate code128 gs1 databar coupons interim meant smooth transition adaption format presented read portion depending report setting profileconfigcoupon_report upceanparamscoupon_report coupon_reportdefault comsymbolemdkprofileconfigcoupon_report ###ean_zero_extend parameter adds leading zeros decoded ean-8 symbols make compatible ean-13 upceanparamsean_zero_extend ###bookland_format specifies profileconfigbookland_format upceanparamsbookland_format bookland_formatdefault comsymbolemdkprofileconfigbookland_format ###databar_to_upc_ean converts work symbologies checkbox option upceanparamsdatabar_to_upc_ean ","summary":"\nHolds Upc Ean Params configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tUpcEanParams upcEanParams = profileConfig.dataCapture.barcode.upcEanParams;\n\nPublic Fields\n\nsecurity_level\n\nThe scanner of fers four levels of decode security for UPC/EAN bar codes.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-Barcode-UpcEanParams"},{"title":"ProfileConfig.DataCapture.DataDelivery","keywords":"class dealing datadelivery profile data profileconfigdatacapturedatadelivery **example usage** java = ##public fields ###intent sets intent configuration object profileconfigdatacapturedatadeliveryintent profileconfigdatacapturedatadeliveryintentoutput_enabled enabled_statedefault **type** comsymbolemdkprofileconfigdatacapturedatadeliveryintent ###keystroke keystroke profileconfigdatacapturedatadeliverykeystroke profileconfigkeystrokeime_output_enabled comsymbolemdkprofileconfigdatacapturedatadeliverykeystroke ","summary":"\nClass for dealing with DataDelivery profile data  ProfileConfig.DataCapture.DataDelivery\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tDataDelivery dataDelivery = profileConfig.dataCapture.dataDelivery;\n\nPublic Fields\n\nintent\n\nGets and Sets Intent configuration object  ProfileConfig.DataCapture.DataDelivery.Intent.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-DataDelivery"},{"title":"ProfileConfig.DataCapture.DataDelivery.BasicDataFormatting","keywords":"holds basic data formatting configuration settings **example usage** java basicdataformatting = profileconfigdatacapturedatadeliveryintentbasicdataformatting ##public fields ###bdf_enabled enables disables default enabled profileconfigenabled_state enum basicdataformattingbdf_enabled enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ###bdf_prefix add characters beginning string prefix basicdataformattingbdf_prefix javalangstring ###bdf_suffix end suffix basicdataformattingbdf_suffix ###bdf_send_data set transfer captured foreground application disabling option prevents actual transmitted suf fix strings present disabled basicdataformattingbdf_send_data ###bdf_send_hex send hexadecimal formatdefault basicdataformattingbdf_send_hex ###bdf_send_tab append tab character processed datadefault basicdataformattingbdf_send_tab ###bdf_send_enter enter basicdataformattingbdf_send_enter ","summary":"\nHolds Basic Data Formatting configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tBasicDataFormatting basicDataFormatting = profileConfig.dataCapture.dataDelivery.intent.basicDataFormatting;\n\nPublic Fields\n\nbdf_enabled\n\nEnables or disables Basic Data Formatting (default - enabled).","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-DataDelivery-BasicDataFormatting"},{"title":"ProfileConfig.DataCapture.DataDelivery.Intent","keywords":"holds intent configuration settings **example usage** java = profileconfigintent ##public fields ###output_enabled sets enabled_state enum profileconfigenabled_state intentoutput_enabled enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ###action action string intentaction javalangstring ###category category intentcategory ###delivery intent_delivery profileconfigintent_delivery intentdelivery intent_deliverydefault comsymbolemdkprofileconfigintent_delivery ###basicdataformatting object profileconfigdatacapturedatadeliverybasicdataformatting intentbasicdataformattingbdf_enabled comsymbolemdkprofileconfigdatacapturedatadeliverybasicdataformatting ","summary":"\nHolds Intent configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tIntent intent = profileConfig.Intent;\n\nPublic Fields\n\noutput_enabled\n\nGets and Sets intent ENABLEDSTATE configuration enum  ProfileConfig.ENABLEDSTATE.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-DataDelivery-Intent"},{"title":"ProfileConfig.DataCapture.DataDelivery.Keystroke","keywords":"holds keystroke configuration settings **example usage** java = profileconfigdatacapturedatadeliverykeystroke ##public fields ###ime_output_enabled sets enabled_state enum profileconfigenabled_state keystrokeime_output_enabled enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ###keystroke_action_char action_key_char profileconfigaction_key_char keystrokekeystroke_action_char action_key_chardefault comsymbolemdkprofileconfigaction_key_char ###basicdataformatting basic data formatting object profileconfigdatacapturedatadeliverybasicdataformatting keystrokebasicdataformattingbdf_enabled comsymbolemdkprofileconfigdatacapturedatadeliverybasicdataformatting ","summary":"\nHolds Keystroke configuration settings.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tKeystroke keystroke = profileConfig.dataCapture.dataDelivery.keystroke;\n\nPublic Fields\n\nimeoutputenabled\n\nGets and Sets keystroke ENABLEDSTATE configuration enum  ProfileConfig.ENABLEDSTATE.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-DataDelivery-Keystroke"},{"title":"ProfileConfig.DataCapture.MSR","keywords":"holds msr configuration settings **example usage** java = profileconfigdatacapturemsr ##constructors ###msr ##public fields ###msr_input_enabled sets enabled enum profileconfigenabled_state msrmsr_input_enabled enabled_statedefault **type** comsymbolemdkprofileconfigenabled_state ","summary":"\nHolds MSR configuration settings\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tMSR msr = profileConfig.dataCapture.msr;\n\nConstructors\n\nMSR\n\nPublic Fields\n\nmsrinputenabled\n\nGets and Sets MSR enabled configuration enum  ProfileConfig.ENABLED_STATE.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-DataCapture-MSR"},{"title":"ProfileConfig.ENABLED_STATE","keywords":"enable states **example usage** java enabled_statefalse **values** * **default** -default state configured device **false** -disabled **true** -enabled ","summary":"\nEnable states\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tENABLED_STATE.FALSE;\n\nValues:\n\nDEFAULT -Default enable state configured on device\n\nFALSE -Disabled\n\nTRUE -Enabled\n\n","url":"/emdk-for-android/3-1/api/core/ProfileConfig-ENABLED_STATE"},{"title":"ProfileConfig.ILLUMINATION_MODE","keywords":"turns camera illumination option selected barcode input scanner selection **example usage** java illumination_modedefault **values** * **default** -default configured device **off** -external **on** ","summary":"\nTurns camera illumination on and off.\n This option is only available when camera is selected in the Barcode input Scanner selection option.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tILLUMINATION_MODE.DEFAULT;\n\nValues:\n\nDEFAULT -Default illumination configured on device\n\nOFF -External illumination is always is off\n\nON -External illumination is always on\n\n","url":"/emdk-for-android/3-1/api/core/ProfileConfig-ILLUMINATION_MODE"},{"title":"ProfileConfig.INTENT_DELIVERY","keywords":"configuration intent output plug-in profile captured data application form implicit **example usage** java intent_deliverysend_via_startactivity **values** * **default** -default delivery type configured device **send_via_startactivity** -send startactivity **send_via_startservice** startservice **broadcast_intent** broadcast ","summary":"\nAllows configuration of the Intent Output Plug-in for the profile.\n The Intent Output Plug-in allows the captured data to be sent to an application in the form of an implicit Intent.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-INTENT_DELIVERY"},{"title":"ProfileConfig.INVERSE_1D_MODE","keywords":"parameter user select decoding inverse 1d bar codes **example usage** java inverse_1d_modedefault **values** * **default** -default mode configured device **disabled** -disables symbologies **enabled** -enables **auto** -allows positive ","summary":"\nThis parameter allows the user to select decoding on inverse 1D bar codes.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tINVERSE1DMODE.DEFAULT;\n\nValues:\n\nDEFAULT -Default inverse 1D mode configured on device\n\nDISABLED -Disables decoding of inverse 1D symbologies\n\nENABLED -Enables decoding of only inverse 1D symbologies.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-INVERSE_1D_MODE"},{"title":"ProfileConfig.ISBT128_CONTACT_MODE","keywords":"option concatenating pairs isbt128 code types **example usage** java isbt128_contact_modedefault **values** * **default** -default concatenation configured device **never** -will ignore barcode pair output decode data barcodes **always** present decoded isbt codes order perform **auto** -decodes concatenates immediately single symbol number times set datawedge configuration redundancy code128 transmitting confirm additional ","summary":"\nOption for concatenating pairs of ISBT128 code types.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tISBT128CONTACTMODE.DEFAULT;\n\nValues:\n\nDEFAULT -Default ISBT128 concatenation configured on device\n\nNEVER -Will ignore the barcode pair and only output decode data for only one of the barcodes\n\nALWAYS -Will not decode if both the barcodes are not present or if one of them cannot be decoded.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-ISBT128_CONTACT_MODE"},{"title":"ProfileConfig.LCD_MODE","keywords":"enable disable lcd mode blockbuster imager devices enhances ability read bar codes displays cellphones **example usage** java lcd_modedefault **values** * **default** -default configured device **disabled** -disables **enabled** -enables ","summary":"\nEnable or disable LCD mode (for Blockbuster imager devices only).\n LCD mode enhances the ability of the imager to read bar codes from LCD displays such as cellphones.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-LCD_MODE"},{"title":"ProfileConfig.LINEAR_SECURITY_LEVEL","keywords":"sets number times bar code read confirm accurate decode **example usage** java linear_security_leveldefault **values** * **default** -default linear security level configured device **short_or_codabar** -two redundancy short codabar **all_twice** codes default **long_and_short** long **all_thrice** -three ","summary":"\nSets the number of times a bar code is read to confirm an accurate decode.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tLINEARSECURITYLEVEL.DEFAULT;\n\nValues:\n\nDEFAULT -Default linear security level configured on device.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-LINEAR_SECURITY_LEVEL"},{"title":"ProfileConfig.PICK_LIST","keywords":"imager decode bar code directly cross-hair/reticle + part pattern feature applications multiple codes field view session tar geted **example usage** java pick_listdefault **values** * **default** -default pick list configured device **disabled** -disables picklist mode decoded **enabled** -enables cross-hair reticle conjunction static dynamic viewfinder modes scan module **centered** center image note valid decoder modules supports set unsupported issue error camera scanner ","summary":"\nAllows the imager to decode only the bar code that is directly under the cross-hair/reticle (+) part of the pattern.\n This feature is useful in applications where multiple bar codes may appear in the field of view during a decode session and only one of them is tar geted for decode.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-PICK_LIST"},{"title":"ProfileConfig.POWER_MODE","keywords":"sets scanner power mode **example usage** java power_modedefault **values** * **default** -default linear security level configured device **low** -lowest slowest performance **optimized** -power adjusts scanning usage defalt **high** -high excellent **always_on** -highest fastest ","summary":"\nSets the scanner power mode.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tPOWER_MODE.DEFAULT;\n\nValues:\n\nDEFAULT -Default linear security level configured on device.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-POWER_MODE"},{"title":"ProfileConfig.PREAMBLE","keywords":"controls preamble applied bar code characters part upc symbol consisting country system character select option match host **example usage** java preambledefault **values** * **default** -default configured device **none** -no **sys_char** -system **country_and_sys_char** -both ","summary":"\nControls the preamble applied to the bar code\n Preamble characters are part of the UPC symbol consisting of Country Code and System Character.\n Select the appropriate option to match the host system.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-PREAMBLE"},{"title":"ProfileConfig.SECURITY_LEVEL","keywords":"scanner offers levels decode security upc/ean bar codes select higher lower quality inverse relationship speed choose level application **example usage** java check_digit_typedefault **values** * **default** -default configured device **level_0** -this setting operate fastest providing sufficient decoding in-spec default **level_1** -as code diminish characters prone misdecodes misdecoding poorly printed limited **level_2** -if **level_3** advised selecting option extreme measure severely spec significantly impair ability improve ","summary":"\nThe scanner offers four levels of decode security for UPC/EAN bar codes.\n Select higher security levels for lower quality bar codes.\n There is an inverse relationship between security and decode speed, so be sure to choose only that level of security necessary for the application.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-SECURITY_LEVEL"},{"title":"ProfileConfig.SUPPLEMENTAL_MODE","keywords":"supplemental modes **example usage** java supplemental_modedefault **values** * **default** -default mode configured device **no** -the scanner presented upc/ean symbol decodes ignores characters **always** symbols supplementals **auto** immediately decode bar code number times set redundancy transmitting data confirm **smart** -enables smart decoder returns decoded main block belong types starts prefixes searches image aggressively scan present scanning failed returned **s_378_379** auto-discriminate codes starting disables reading **s_978_979** **s_414_419_434_439** **s_977** barcode ","summary":"\nSupplemental modes\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tSUPPLEMENTAL_MODE.DEFAULT;\n\nValues:\n\nDEFAULT -Default supplemental mode configured on device\n\nNO -The scanner is presented with a UPC/EAN plus supplemental symbol, the scanner decodes UPC/EAN and ignores the supplemental characters.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-SUPPLEMENTAL_MODE"},{"title":"ProfileConfig.UCC_LINK_MODE","keywords":"describes ucc link mode state **example usage** java ucc_link_modedefault **values** * **default** -default configured device **link_flag_ignored** -1d component transmitted 2d detected **always_linked** components present 1d **auto_discriminate** -the digital scanner determines portion transmits default ","summary":"\nDescribes the UCC link mode state.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tUCCLINKMODE.DEFAULT;\n\nValues:\n\nDEFAULT -Default UCC link mode configured on device.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-UCC_LINK_MODE"},{"title":"ProfileConfig.VERIFY_CHECK_DIGIT","keywords":"check integrity code symbols verify data complies digit algorithm selects mechanism decoded bar **example usage** java verify_check_digitdefault **values** * **default** -default scheme configured device **no** -do **one** -bar **two** digits ","summary":"\nCheck the integrity of all Code 11 symbols to verify that the data complies with the specified check digit algorithm.\n This selects the check digit mechanism for the decoded Code 11 bar code.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-VERIFY_CHECK_DIGIT"},{"title":"ProfileConfig.VIEWFINDER_MODE","keywords":"configures viewfinder modes supported camera scanning **example usage** java viewfinder_modeenabled **values** * **default** -default view finder mode configured device **disabled** -viewfinder disabled displayed aiming **enabled** enabled displays images captured screen **static_recticle** locate reticle draws red center helps tracking barcode ","summary":"\nConfigures the Viewfinder modes supported for camera scanning.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tVIEWFINDER_MODE.ENABLED;\n\nValues:\n\nDEFAULT -Default view finder mode configured on the device\n\nDISABLED -Viewfinder disabled.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-VIEWFINDER_MODE"},{"title":"ProfileConfig.VOLUME_SLIDER_TYPE","keywords":"defines notification type good decode **example usage** java volume_slider_typedefault **values** * **default** -default prefix configured device **ringer_and_notifications** -ringer notifications **music_and_media** -music media **alarm** -alarms ","summary":"\nDefines the notification type for a good decode.\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tVOLUMESLIDERTYPE.DEFAULT;\n\nValues:\n\nDEFAULT -Default prefix configured on device\n\nRINGER_AND_NOTIFICATIONS -Ringer and Notifications.","url":"/emdk-for-android/3-1/api/core/ProfileConfig-VOLUME_SLIDER_TYPE"},{"title":"ProfileManager","keywords":"class handles profile related functions **example usage** java @override public void onopenedemdkmanager emdkmanager { profilemanager = profilemanageremdkmanagergetinstancefeature_typeprofile } **version** ##public methods ###ispreviousrequestpending method tells previous process request pending submit till current completes calling return error **returns** boolean returns ###processprofilestring profilename profilemanagerprofile_flag profileflag document extradata processes based data provided flag status action documentbuilderfactory dbf documentbuilderfactorynewinstance documentbuilder db dbfnewdocumentbuilder dbnewdocument profilemanagerprocessprofileprofile1 profile_flagget **parameters** * **profilename** profile1' part fully qualified format `[profilename][featuretype][name parameter]` edit called profile1 parameter myname' passing profile1/activityselection/myname valid `[featuretype]` activityselection barcode msr intent keystroke ip **profileflag** [profilemanagerprofile_flag]profilemanagerprofile_flag set emdkconfigxml argument present added internal xml volatile repository applied device returned **extradata** provide processing comsymbolemdkemdkresults [emdkresults]emdkresults object string[] string[]{} ‘emdksampleprofile-1’ gave clock feature clock1' emdksampleprofile-1/clock/clock1’ powermgr persistmgr certmgr appmgr accessmgr wi-fi gprsmgr profileconfig //create profileconfigobj //get emdkresults results mprofilemanagerprocessprofileprofilename profilemanagerprofile_flagget //set code128 profileconfigobjdatacapturebarcodedecoderscode128 enabled_statetrue //call processprfoile config update profilemanagerprofile_flagset [profileconfig]profileconfig supported datacapture features ###createnamevaluepairstring emdkname string paramname paramvalue function creates pair name-value compatible comsymbolemdkprofilemanager processprofilestring profile_flag function’s array element failed throws invalidparameterexception exception **emdk_name** emdk **param_name** **param_value** ###processprofileasyncstring asynchronous result registered callback mainactivity extends activity implements emdklistener datalistener profilemanageradddatalistenerthis profilemanagerprocessprofileasyncprofile1 null application listener profile_flagset ###adddatalistener[profilemanagerdatalistener]profilemanagerdatalistener client register notification callbacks ###removedatalistener[profilemanagerdatalistener]profilemanagerdatalistener un-register enums ###profilemanagerprofile_flag actions [profilemanagerprocessprofilestring document]profilemanager#profilemanagerprocessprofilestring string[]]profilemanager#profilemanagerprocessprofilestring string[]is enumerated **values** **set** created activates bound **get** retrieves **reset** resets modified cache default development set/modify component resetting reseted **check_compatibility** validates characteristic version existing extra profiles node individual fields internally dsds time required depends numbers ","summary":"This class handles all the profile related functions.\n\nExample Usage:\n\n\t:::java\n\t@Override\n\tpublic void onOpened(EMDKManager emdkmanager)\n\t{\n\tProfileManager profileManager = (ProfileManager)emdkmanager.getInstance(FEATURE_TYPE.PROFILE);\n\t}\n\nVersion:\n\n1.0\n\nPublic Methods\nisPreviousRequestPending()\nThis method tells whether the previous process profile request is pending or not.","url":"/emdk-for-android/3-1/api/core/ProfileManager"},{"title":"ProfileManager.DataListener","keywords":"interface notifying client applications notify processprofileasync result ##public methods ### ondata **public void ondataprofilemanagerresultdata resultdata** callback method called task completion **parameters** resultdata object **returns** ","summary":"\nAn interface for notifying client applications to notify processProfileAsync result.\n\n \n\nPublic Methods\n\n onData\n\npublic void onData(ProfileManager.ResultData resultData)\n\nThis is the callback method to be called upon the processProfileAsync task completion.","url":"/emdk-for-android/3-1/api/core/ProfileManager-DataListener"},{"title":"ProfileManager.PROFILE_FLAG","keywords":"actions profilemanager#processprofilestring profile_flag document string[]is enumerated **example usage** java profile_flagset **values** * **set** -creates profile xml data created activates bound activity **get** -retrieves internal repository **reset** -resets modified application cache default development flag set/modify component device calling process set resetting returns reseted **check_compatibility** -validates characteristic feature version existing extradata null extra profiles validates node individual fields internally dsds time required depends numbers features ","summary":"\nAll the possible actions for  ProfileManager#processProfile(String, PROFILE_FLAG, Document)\n and  ProfileManager#processProfile(String, PROFILE_FLAG, String[])is enumerated here.","url":"/emdk-for-android/3-1/api/core/ProfileManager-PROFILE_FLAG"},{"title":"ProfileManager.ResultData","keywords":"class status detail processprofileasync method ##public methods ### getresult **public emdkresults getresult** holding **returns** comsymbolemdkemdkresults getprofilename string getprofilename** returns profile javalangstring getprofileflag profile_flag getprofileflag** flag comsymbolemdkprofilemanagerprofile_flag getprofilestring getprofilestring** data requested getprofiledocument document getprofiledocument** dom orgw3cdomdocument getprofileconfig profileconfig getprofileconfig** object comsymbolemdkprofileconfig ","summary":"\nThis class provides the Status detail of processProfileAsync method.\n\nPublic Methods\n\n getResult\n\npublic EMDKResults getResult()\n\nClass for holding status of processProfileAsync method.","url":"/emdk-for-android/3-1/api/core/ProfileManager-ResultData"},{"title":"VersionManager","keywords":"version information captured class **example usage** java versionmanager = emdkmanagergetinstanceemdkmanagerfeature_typeversion ##public methods ### getversion **public string getversionversionmanagerversion_type versionkey** versionmanagerversion_type versionmanagergetversionversion_typeemdk **parameters** versionkey **returns** javalangstring enums ###versionmanagerversion_type keys versionmanager#getversionversion_type enumerated version_typeemdk **values** * **emdk** -emdk **mx** -mx framework **barcode** -barcode scanner ","summary":"\nVersion information can be captured from this class.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tversionManager = (VersionManager) EMDKManager.getInstance(EMDKManager.FEATURE_TYPE.VERSION);\n\nPublic Methods\n\n getVersion\n\npublic String getVersion(VersionManager.VERSION_TYPE versionKey)\n\nGets the version of the specified  VersionManager.VERSION_TYPE\n \n  \n\nExample Usage:\n\t\n\t:::java\t\n\tversionManager.getVersion(VERSION_TYPE.EMDK)\n\nParameters:\n\nversionKey -  VersionManager.VERSION_TYPE\n\nReturns:\n\njava.lang.String\n\nPublic Enums\n\nVersionManager.VERSION_TYPE\n\nAll the version keys for  VersionManager#getVersion(VERSION_TYPE) are enumerated here.","url":"/emdk-for-android/3-1/api/core/VersionManager"},{"title":"VersionManager.VERSION_TYPE","keywords":"version keys versionmanager#getversionversion_type enumerated **example usage** java version_typeemdk **values** * **emdk** -emdk **mx** -mx framework **barcode** -barcode scanner ","summary":"\nAll the version keys for  VersionManager#getVersion(VERSION_TYPE) are enumerated here.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tVERSION_TYPE.EMDK\n\nValues:\n\nEMDK -EMDK version\n\nMX -MX framework version\n\nBARCODE -Barcode Scanner Framework version.","url":"/emdk-for-android/3-1/api/core/VersionManager-VERSION_TYPE"},{"title":"ScanAndPairConfig","keywords":"scanandpairconfig class configure settings scanandpair scananunpair methods calling modify method processing job ##public ### resettodefaults **public void resettodefaults** resets config default values **returns** fields ###alwaysscan specifies scan performed bluetooth address remote device set true provided mbluetoothinfomdevicename mbluetoothinfomdeviceaddress properties scanning false skipped mbluetoothinfoaddress mbluetoothinfoname directly pairing **type** javalangboolean ###bluetoothinfo related information object pairing/unpairing comsymbolemdkscanandpairscanandpairconfigbluetoothinfo ###notificationtype notification scanandunpair notifications user progress operation access notificationtype beeper refer comsymbolemdkscanandpairscanandpairconfignotificationtype ###scaninfo barcode exposes scanned data note maximum allowed length characters comsymbolemdkscanandpairscanandpairconfigscaninfo enums ###scanandpairconfignotificationtype enum scanandpairtool powertools powertool process **values** * **beeper** -beeper raises pre-defined beep sequences give audible alert specific operations **none** -disable raise type ###scanandpairconfigscandatatype types **mac_address** -scan mac **device_name** **unspecified** unknown library automatically attempt determine valid considered ###scanandpairconfigdeviceidentifier list deviceidentifier **internal_camera1** -use camera **internal_imager1** imager **internal_laser1** laser scanner **bluetooth_imager1** requires **default** depending mobile ###scanandpairconfigtriggertype supported trigger **soft** -scanner turned press triggers **hard** -hardware manually pressed turn ","summary":"\nThe ScanAndPairConfig class provides a way to configure the settings to use it in scanAndPair() or scanAnUnpair() methods.\n These settings must be done before calling the scanAndPair() or scanAnUnpair() methods and do not modify the this while the \n method is processing its job.","url":"/emdk-for-android/3-1/api/scanandpair/ScanAndPairConfig"},{"title":"ScanAndPairConfig.BluetoothInfo","keywords":"class scanandpairtool specifies bluetooth related information settings provided pairing/unpairing ##constructors ###bluetoothinfo default constructor ##public fields ###devicename remote device scanandpairtoolalwaysscan set false scanning skipped directly pairing property true maximum allowed length barcode scanned explicitly characters note providing address result discovery find additional time **type** javalangstring ###macaddress mac scanandpairalwaysscan lengths ###pairingpin user supplied pin passed argument scanandpair stored member variable ","summary":"\nThis class is used by the ScanAndPairTool class. Specifies the Bluetooth related \n information. The settings provided through this class are used for pairing/unpairing.","url":"/emdk-for-android/3-1/api/scanandpair/ScanAndPairConfig-BluetoothInfo"},{"title":"ScanAndPairConfig.DeviceIdentifier","keywords":"list deviceidentifier types **values** * **internal_camera1** -use camera **internal_imager1** imager **internal_laser1** laser scanner **bluetooth_imager1** bluetooth note requires pairing calling scanandpair scanandunpair methods **default** default depending mobile device ","summary":"\nProvides the list of DeviceIdentifier types.\n\nValues:\n\nINTERNAL_CAMERA1 -Use first available camera\n\nINTERNAL_IMAGER1 -Use first available imager\n\nINTERNAL_LASER1 -Use first available laser scanner\n\nBLUETOOTH_IMAGER1 -Use first available Bluetooth imager.","url":"/emdk-for-android/3-1/api/scanandpair/ScanAndPairConfig-DeviceIdentifier"},{"title":"ScanAndPairConfig.NotificationType","keywords":"enum scanandpairtool class powertools notifications provided user progress powertool methods notification related information scanning process **values** * **beeper** -beeper raises pre-defined beep sequences give audible alert specific operations performed **none** -disable raise type ","summary":"\nThis enum is used by the ScanAndPairTool class. When using PowerTools, notifications \n can be provided to the user to indicate the progress of the different PowerTool methods.","url":"/emdk-for-android/3-1/api/scanandpair/ScanAndPairConfig-NotificationType"},{"title":"ScanAndPairConfig.ScanDataType","keywords":"types barcode data scanned **values** * **mac_address** -scan bluetooth mac address **device_name** device **unspecified** type unknown scanandpair library automatically attempt determine valid considered ","summary":"\nProvides the different types of barcode data to be scanned.\n\nValues:\n\nMAC_ADDRESS -Scan data is a Bluetooth MAC address\n\nDEVICE_NAME -Scan data is a Bluetooth device name.","url":"/emdk-for-android/3-1/api/scanandpair/ScanAndPairConfig-ScanDataType"},{"title":"ScanAndPairConfig.ScanInfo","keywords":"class scanandpairtool specifies scanning related information settings provided barcode exposes scanned data note maximum allowed length characters ##constructors ###scaninfo default constructor scaninfo assign values members ##public methods ### getscanneddata **public string getscanneddata** **returns** javalangstring fields ###scandatatype type bluetooth address remote device unspecified meaning library automatically attempt determine valid considered **type** comsymbolemdkscanandpairscanandpairconfigscandatatype ###deviceidentifier scanner firstavailable comsymbolemdkscanandpairscanandpairconfigdeviceidentifier ###scantimeout scan timeout milliseconds time duration driver varies depending set means infinite int ###triggertype trigger auto manual hardware manually pressed turn turned press triggers comsymbolemdkscanandpairscanandpairconfigtriggertype ","summary":"\nThis class is used by the ScanAndPairTool class. Specifies the scanning related information. \n The settings provided through this class are used for scanning the barcode.","url":"/emdk-for-android/3-1/api/scanandpair/ScanAndPairConfig-ScanInfo"},{"title":"ScanAndPairConfig.TriggerType","keywords":"list supported trigger types **values** * **soft** -scanner turned automatically press triggers **hard** -hardware manually pressed turn scanner ","summary":"\nProvides the list of supported trigger types.\n\nValues:\n\nSOFT -Scanner is turned ON automatically and no need to press any triggers\n\nHARD -Hardware trigger needs to be manually pressed to turn ON the scanner\n\n","url":"/emdk-for-android/3-1/api/scanandpair/ScanAndPairConfig-TriggerType"},{"title":"ScanAndPairException","keywords":"methods scanandpair object throws scanandpairexception error occurs due client api incorrectly unexpected occurred ##public ###getresult returns scanandpairresults enum **returns** comsymbolemdkscanandpairmanager[scanandpairmanagerscanandpairresults]scanandpairmanager#scanandpairresults ","summary":"\nThe methods of ScanAndPair object throws ScanAndPairException when an error occurs.\n\nThe error could be due to:\n\nClient using the API incorrectly OR\nBecause an unexpected error occurred\n\nPublic Methods\ngetResult()\nReturns the ScanAndPairResults enum value.","url":"/emdk-for-android/3-1/api/scanandpair/ScanAndPairException"},{"title":"ScanAndPairManager","keywords":"scanandpair simple methods scan bluetooth barcode address remote device pair/unpair ##public ### ispreviouscommandpending **public boolean ispreviouscommandpending** method information previous request pending returns true client application wait current complete calling issuing **returns** scanandpairresults scanandpairjavalangstring pin** asynchronous status returned callback registered enabled configuration scans pairs scanned paired performing discovery find pairing provided authentication pin maximum allowed length characters **parameters** required pair comsymbolemdkscanandpairscanandpairresults scanandunpair scanandunpair** calls unpairing call getstatus statusdata getstatus** option recent comsymbolemdkscanandpairstatusdata addstatuslistener void addstatuslistenerscanandpairmanagerstatuslistener listener** register notification callbacks listener **throws** comsymbolemdkscanandpairscanandpairexception removestatuslistener removestatuslistenerscanandpairmanagerstatuslistener un-register fields ###config scanandpairmanagerconfig configure settings scananunpair modify processing job **type** comsymbolemdkscanandpairscanandpairconfig ","summary":"\nThe ScanAndPair provides simple methods to scan a Bluetooth barcode (name or address) of a remote Bluetooth device \n and pair/unpair with the remote Bluetooth device.","url":"/emdk-for-android/3-1/api/scanandpair/ScanAndPairManager"},{"title":"ScanAndPairManager.StatusListener","keywords":"interface notifying client applications notify scan pair unpair events **example usage** java public class mainactivity extends activity implements statuslistener ##public methods ### onstatus **public void onstatusstatusdata statusdata** callback method status event occurs **parameters** statusdata object **returns** ","summary":"\nAn interface for notifying client applications to notify scan and pair or unpair events.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tpublic class MainActivity extends Activity implements StatusListener\n\t..","url":"/emdk-for-android/3-1/api/scanandpair/ScanAndPairManager-StatusListener"},{"title":"ScanAndPairResults","keywords":"list result codes scanandpair class **values** * **success** -success **failure** -operation failed **invalid_object** -the object valid **invalid_config** -invalid configuration **invalid_bluetooth_device_info** bluetooth address provided **invalid_pairing_pin** pin entered pairing **bluetooth_not_enabled** -failure initialization **bluetooth_device_discovery_failed** -unable discover device **bluetooth_service_discovery_failed** perform service discovery **device_not_paired** -trying unpair paired **device_already_paired** pair **device_pairing_failed** **device_unpairing_failed** unpairing **pairing_timedout** -bluetooth timed **scanner_init_failure** -error opening scanner **scanner_unint_failed** closing **scanner_not_supported** -scanner supported **scanner_in_use** busy performing operation **invalid_scanned_data** scanned data **scanner_read_failed** scanning barcode **previous_command_pending** -previously requested command progress wait complete **inprogress** ","summary":"\nProvides list of result codes for ScanAndPair class.\n\nValues:\n\nSUCCESS -Success\n\nFAILURE -Operation is failed.\n\nINVALID_OBJECT -The object is not valid.","url":"/emdk-for-android/3-1/api/scanandpair/ScanAndPairResults"},{"title":"StatusData","keywords":"class status detail scanandpair ##constructors ###statusdata ##public methods ### getstate **public scanandpairstates getstate** state scanandunpair method **returns** comsymbolemdkscanandpairstatusdatascanandpairstates getresult scanandpairresults getresult** error find exact information comsymbolemdkscanandpairscanandpairresults enums ###statusdatascanandpairstates defines states scan pir/unpair **values** * **waiting** -scanner waiting hard trigger press **scanning** beam acquiring data **discovering** -discovering bluetooth device paired **paired** -the **unpaired** unpaired **error** -error occurred pair unpair call statusdata **undefined** -undefined initial ","summary":"\nThis class provides the Status detail of ScanAndPair.\n\nConstructors\n\nStatusData\n\nPublic Methods\n\n getState\n\npublic ScanAndPairStates getState()\n\nState of the scanAndPair or scanAndUnpair method.","url":"/emdk-for-android/3-1/api/scanandpair/StatusData"},{"title":"StatusData.ScanAndPairStates","keywords":"defines states scan pir/unpair **values** * **waiting** -scanner waiting hard trigger press **scanning** beam acquiring data **discovering** -discovering bluetooth device paired **paired** -the **unpaired** unpaired **error** -error occurred pair unpair call statusdata getresult error information **undefined** -undefined initial state ","summary":"\nDefines the different states of the scan and pir/unpair.\n\nValues:\n\nWAITING -Scanner is waiting for hard trigger press\n\nSCANNING -Scanner beam is on and it is acquiring data.","url":"/emdk-for-android/3-1/api/scanandpair/StatusData-ScanAndPairStates"},{"title":"SecureNFC APIs","keywords":">supported devices * tc75kk ","summary":"Supported Devices:\nTC75KK\n\n","url":"/emdk-for-android/3-1/api/securenfc"},{"title":"MifareDesfire","keywords":"access mifare desfire properties i/o operations isodep tag object class encapsulates methods required communicating technology protocol **example usage** java public mainactivity extends activity implements emdklistener { securenfcmanager emdkmanager samtype mifaredesfire mifaresam protected void oncreatebundle savedinstancestate emdkresults results = emdkmanagergetemdkmanagergetapplicationcontext } onopenedemdkmanager thisemdkmanager thissecurenfcmanager thisemdkmanagergetinstancefeature_typesecurenfc ifthissecurenfcmanager null{ try{ securenfcmanagergetavailablesam catch securenfcexception eprintstacktrace samtypeequalssamtypemifare securenfcmgrgetsaminstancesamtype ifmifaresam sammode mifaresamconnect samkey samkeykeynum 0x00 samkeykeyver mifaresamauthenticatesamauthkey samkeynull mifaresamclose mifaresamexception ##public ### enable **public enabletag tag** tfhe sam communication rf block called main application thread blocked call canceled mifaredesfireexpection calling close tagtechnology connected time applications completeon lost connection re-established api **parameters** contactless detected device extra_tag information intent **returns** **throws** comsymbolemdksecurenfcmifaredesfireexpection exception thrown fails disable disable** disables return mifaredesfireexpectionon applicationthis synchronous authenticate authenticatemifaredesfireauthenticatetype authtype int cardkeynum samdiverseparams samdiverseparams** authenticates card master key operation complete ioexception threadon note consuming type authentication number valid range 0x0d diversification parameters current parameter null supported getkeyversion byte getkeyversionbyte keynum** retrieves version keyon keynum retrieve mifaredesfireselectapplicationapp_id mifaredesfiregetkeyversionkeynum getapplicationids getapplicationids** aids active applicationson int[] getappids mifaredesfiregetapplicationids getfreememory getfreememory** total free user memory bytes cardon getdfnames dfnames getdfnames** iso 7816-4 df names comsymbolemdksecurenfcmifaredesfiredfnames dfnames[] mifaredesfiregetdfnames getkeysettings keysettings getkeysettings** settings selected comsymbolemdksecurenfcmifaredesfirekeysettings mifaredesfiregetkeysettings selectapplication selectapplicationint appid** selects applicationon appid aid getcardversion cardversioninfo getcardversion** manufacturing software production related informationon comsymbolemdksecurenfcmifaredesfirecardversioninfo getfileids getfileidsmifaredesfirefileidtype fileidtype** native file ids files fileidtype retrieved getfileids= mifaredesfiregetfileidsfileidtypenative fileidtypeiso7816 getfilesettings filesettings getfilesettingsbyte fileid** fileon fileid id 0x00-0x1f comsymbolemdksecurenfcmifaredesfirefilesettings getfilesettingsfileid readdata readdatabyte mifaredesfirefilecommmode filecommmode readoffset bytestoberead** reads data standard backup depending read plain enciphered preceding keys read&write requiredon mode offset size bytestoberead 0x00000000-0x00ffffff lsamkeyforread lsamkeyforreadkeynum 0x03// 0x51//0x03 lsamkeyforreadkeyver mifaredesfireauthenticateauthenticatetypenative card_key_for_readlsamkeyforread //communication enchipered depends assigned creating byte[] rawdata mifaredesfirereaddatastd_idcommunication_type writedata writedatabyte writeoffset writedatabuffer** writes write succeeded committransaction validates previous invalidatedon written writedatabuffer buffer getvalue getvaluebyte stored retieve credit creditmifaredesfirecredittype credittype value** increases valuedepending normal limited credited increased positive values allowed debit debitbyte decreases debited decreased readrecord readrecordbyte recordoffset recordstoberead** records cyclic linear record filedepending start 0x00000000 existing recordstoberead writerecord writerecordbyte recordsize writerecordbuffer** requiredthe equal writerecordbuffer resetrecord resetrecordbyte resets empty state callon cleared reset committransaction** executing apis commit transaction aborttransaction aborttransaction** invalidates abort isenabled boolean isenabled** checks enabled emdk opened enums ###mifaredesfirefilecommmode maced **values** * **plain** -plain **maced** secured macing **enciphered** -fully tdea-desfire aes ###mifaredesfirecredittype **standard** -standard **limited** -limited increase full permissions ###mifaredesfirefileidtype **native** -native long **iso7816** -iso complaint ###mifaredesfirefiletype **backup** -back **value** -value **linear_record** -linear **cyclic_record** -cyclic ###mifaredesfireauthenticatetype -authentication **iso** **aes** ","summary":"\nProvides access to MIFARE DESFire properties and I/O operations on an IsoDep\n Tag object. This class encapsulates all the methods required for\n communicating with the IsoDep tag using the tag technology protocol.","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire"},{"title":"MifareDesfire.AppKeySettings","keywords":"##public fields ###numofkey number keys stored application cryptography 0-14 **type** byte ###isocompliantfileids iso/iec 7816-4 file ids long falsenot allowed true boolean ###cryptomethod method crypto_des_2k3des 0x00 crypto_3k3des 0x01 crypto_aes 0x02 ","summary":"\n\nPublic Fields\n\nnumOfKey\n\nNumber of keys stored in application for cryptography 0-14 keys can\n be stored\n\nType:\n\nbyte\n\nisoCompliantFileIDs\n\nAllow ISO/IEC 7816-4 file IDs (2 byte long) within application\n False:Not allowed True: Allowed\n\nType:\n\nboolean\n\ncryptoMethod\n\nCryptography method of whole application CRYPTODES2K3DES (0x00)\n CRYPTO3K3DES (0x01) CRYPTOAES (0x02)\n\nType:\n\nbyte\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-AppKeySettings"},{"title":"MifareDesfire.AuthenticateType","keywords":"authentication mode **values** * **native** -authentication type native **iso** iso supported **aes** aes ","summary":"\nAuthentication mode.\n\nValues:\n\nNATIVE -Authentication Type is Native.\n\nISO -Authentication Type is ISO. Not supported.\n\nAES -Authentication Type is AES.","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-AuthenticateType"},{"title":"MifareDesfire.CardVersionInfo","keywords":"##public fields ###hardwareinfo hardware information **type** comsymbolemdksecurenfcmifaredesfirecardversioninfohardwareinfo ###softwareinfo software comsymbolemdksecurenfcmifaredesfirecardversioninfosoftwareinfo ###manufacturerinfo manufacturer comsymbolemdksecurenfcmifaredesfirecardversioninfomanufacturerinfo ","summary":"\n\nPublic Fields\n\nhardwareInfo\n\nHardware information\n\nType:\n\ncom.symbol.emdk.securenfc.MifareDesfire.CardVersionInfo.HardwareInfo\n\nsoftwareInfo\n\nSoftware information\n\nType:\n\ncom.symbol.emdk.securenfc.MifareDesfire.CardVersionInfo.SoftwareInfo\n\nmanufacturerInfo\n\nManufacturer information\n\nType:\n\ncom.symbol.emdk.securenfc.MifareDesfire.CardVersionInfo.ManufacturerInfo\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-CardVersionInfo"},{"title":"MifareDesfire.CardVersionInfo.HardwareInfo","keywords":"##public fields ###vendorid ic manufacturer id **type** javalangstring ###type type ###version version ###storagesize memory information int ###protocol compliant protocol ","summary":"\n\nPublic Fields\n\nvendorId\n\nIC manufacturer ID\n\nType:\n\njava.lang.String\n\ntype\n\nIC type\n\nType:\n\njava.lang.String\n\nversion\n\nIC Version\n\nType:\n\njava.lang.String\n\nstorageSize\n\nIC Memory information\n\nType:\n\nint\n\nprotocol\n\nIC Compliant protocol\n\nType:\n\njava.lang.String\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-CardVersionInfo-HardwareInfo"},{"title":"MifareDesfire.CardVersionInfo.ManufacturerInfo","keywords":"manufacturer information ##public fields ###uid unique byte serial number **type** javalangstring ###batchno batch ###productionweek production week ###productionyear month ","summary":"\nManufacturer information\n\nPublic Fields\n\nuid\n\nUnique 7 byte serial number\n\nType:\n\njava.lang.String\n\nbatchNo\n\nUnique 5 byte batch number\n\nType:\n\njava.lang.String\n\nproductionWeek\n\nProduction week\n\nType:\n\njava.lang.String\n\nproductionYear\n\nProduction Month\n\nType:\n\njava.lang.String\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-CardVersionInfo-ManufacturerInfo"},{"title":"MifareDesfire.CardVersionInfo.SoftwareInfo","keywords":"software information ##public fields ###vendorid ic manufacturer id **type** javalangstring ###type type ###version version ###storagesize memory int ###protocol compliant protocol ","summary":"\nSoftware information\n\nPublic Fields\n\nvendorId\n\nIC manufacturer ID\n\nType:\n\njava.lang.String\n\ntype\n\nIC type\n\nType:\n\njava.lang.String\n\nversion\n\nIC Version\n\nType:\n\njava.lang.String\n\nstorageSize\n\nIC Memory information\n\nType:\n\nint\n\nprotocol\n\nIC Compliant protocol\n\nType:\n\njava.lang.String\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-CardVersionInfo-SoftwareInfo"},{"title":"MifareDesfire.CreditType","keywords":"**values** * **standard** -standard credit **limited** -limited increase full read&write permissions file ","summary":"\n\nValues:\n\nSTANDARD -Standard credit\n\nLIMITED -Limited increase of a value without having full Read&Write\n permissions to the file\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-CreditType"},{"title":"MifareDesfire.DFNames","keywords":"##public fields ###appid application id bytes long **type** int ###isofileid iso/iec 7816-4 file ids byte short ###isodfname df ","summary":"\n\nPublic Fields\n\nappID\n\nApplication id 3 bytes long\n\nType:\n\nint\n\nisoFileID\n\nISO/IEC 7816-4 file IDs (2 byte long) within application\n\nType:\n\nshort\n\nisoDFName\n\nISO/IEC 7816-4 DF name\n\nType:\n\nbyte\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-DFNames"},{"title":"MifareDesfire.FileAccessRights","keywords":"##public fields ###read key read access **type** byte ###write write ###readwrite read&write ###changeaccessrights changing rights ","summary":"\n\nPublic Fields\n\nread\n\nKey no. to be used for read access\n\nType:\n\nbyte\n\nwrite\n\nKey no. to be used for write access\n\nType:\n\nbyte\n\nreadWrite\n\nKey no. to be used for read&write access\n\nType:\n\nbyte\n\nchangeAccessRights\n\nKey no.","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-FileAccessRights"},{"title":"MifareDesfire.FileCommMode","keywords":"file communication mode plain enchipered supported maced **values** * **plain** -plain **maced** secured macing **enciphered** -fully enciphered authentication type native tdea-desfire iso aes ","summary":"\nFile Communication Mode. Value PLAIN and Enchipered is supported. Value\n MACED is not supported.\n\nValues:\n\nPLAIN -Plain communication\n\nMACED -Plain communication secured by MACing.","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-FileCommMode"},{"title":"MifareDesfire.FileIDType","keywords":"**values** * **native** -native file id byte long **iso7816** -iso 7816-4 complaint ","summary":"\n\nValues:\n\nNATIVE -Native file ID: 1 byte long\n\nISO7816 -ISO 7816-4 complaint file ID: 2 byte long\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-FileIDType"},{"title":"MifareDesfire.FileSettings","keywords":"##public fields ###filetype file type **type** comsymbolemdksecurenfcmifaredesfirefiletype ###commmode communication mode comsymbolemdksecurenfcmifaredesfirefilecommmode ###accessrights access rights comsymbolemdksecurenfcmifaredesfirefileaccessrights ###typespecificsettings specific settings comsymbolemdksecurenfcmifaredesfirefiletypespecificsettings ","summary":"\n\nPublic Fields\n\nfileType\n\nFile type\n\nType:\n\ncom.symbol.emdk.securenfc.MifareDesfire.FileType\n\ncommMode\n\nFile communication mode\n\nType:\n\ncom.symbol.emdk.securenfc.MifareDesfire.FileCommMode\n\naccessRights\n\nFile access rights\n\nType:\n\ncom.symbol.emdk.securenfc.MifareDesfire.FileAccessRights\n\ntypeSpecificSettings\n\nFile type specific settings\n\nType:\n\ncom.symbol.emdk.securenfc.MifareDesfire.FileTypeSpecificSettings\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-FileSettings"},{"title":"MifareDesfire.FileType","keywords":"**values** * **standard** -standard data file **backup** -back **value** -value **linear_record** -linear record **cyclic_record** -cyclic ","summary":"\n\nValues:\n\nSTANDARD -Standard data file\n\nBACKUP -Back up data file\n\nVALUE -Value file\n\nLINEAR_RECORD -Linear record file\n\nCYCLIC_RECORD -Cyclic record file\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-FileType"},{"title":"MifareDesfire.FileTypeSpecificSettings","keywords":"##public fields ###datafilesettings standard data backup file specific settings **type** int ###valuefilesettings comsymbolemdksecurenfcmifaredesfirevaluefilesettings ###recordfilesettings linear cyclic record comsymbolemdksecurenfcmifaredesfirerecordfilesettings ","summary":"\n\nPublic Fields\n\ndataFileSettings\n\nStandard data or Backup data file specific settings\n\nType:\n\nint\n\nvalueFileSettings\n\nValue file specific settings\n\nType:\n\ncom.symbol.emdk.securenfc.MifareDesfire.ValueFileSettings\n\nrecordFileSettings\n\nLinear or Cyclic record file specific settings\n\nType:\n\ncom.symbol.emdk.securenfc.MifareDesfire.RecordFileSettings\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-FileTypeSpecificSettings"},{"title":"MifareDesfire.KeySettings","keywords":"##public fields ###masterkeysettings master key settings **type** comsymbolemdksecurenfcmifaredesfiremasterkeysettingstype ###appkeysettings application comsymbolemdksecurenfcmifaredesfireappkeysettings ","summary":"\n\nPublic Fields\n\nmasterkeySettings\n\nMaster key settings\n\nType:\n\ncom.symbol.emdk.securenfc.MifareDesfire.MasterKeySettingsType\n\nappkeySettings\n\nApplication key settings\n\nType:\n\ncom.symbol.emdk.securenfc.MifareDesfire.AppKeySettings\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-KeySettings"},{"title":"MifareDesfire.MasterKeySettingsType","keywords":"master key setting type ##public fields ###masterkeychangeable changing false changeable frozen truechangeable **type** boolean ###freedirlist free directory list access require card application authentication true ###freecreatedelete required create/delete ###configchangeable configuration ###changekeyaccessrights rights keys changekey command 0x01-0x0d 0x0e 0x0f byte ","summary":"\nMaster key setting type\n\nPublic Fields\n\nmasterKeyChangeable\n\nAllow changing master key false: Not Changeable (frozen)\n true:Changeable\n\nType:\n\nboolean\n\nfreeDirList\n\nFree directory list without master key access false: Require card or\n application master key authentication true: Do not require card or\n application master key authentication\n\nType:\n\nboolean\n\nfreeCreateDelete\n\nMaster key not required for create/delete false: Require card master\n key authentication true: Do not require card master key\n authentication\n\nType:\n\nboolean\n\nconfigChangeable\n\nConfiguration changeable.","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-MasterKeySettingsType"},{"title":"MifareDesfire.RecordFileSettings","keywords":"##public fields ###recordsize size record 0x00000001 0x00ffffff **type** int ###maxnumofrecords maximum number records stored linear file � cyclic 0x00000002 total = recordsize maxnumofrecords + byte ###currentnumofrecords current present ","summary":"\n\nPublic Fields\n\nrecordSize\n\nSize of each record. Value: 0x00000001  0x00FFFFFF\n\nType:\n\nint\n\nmaxNumOfRecords\n\nMaximum number of records that can be stored Value for linear record\n file: 0x00000001 � 0x00FFFFFF Value for cyclic record file:\n 0x00000002 � 0x00FFFFFF For linear file: total file size = recordSize\n x maxNumOfRecords For cyclic file: total file size = (recordSize x\n maxNumOfRecords) + 1 byte\n\nType:\n\nint\n\ncurrentNumOfRecords\n\nCurrent number of records present in the file\n\nType:\n\nint\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-RecordFileSettings"},{"title":"MifareDesfire.ValueFileSettings","keywords":"##public fields ###lowerlimit lower limit **type** int ###upperlimit upper ###value current ###limitedcreditenabled limited credit functionality false disabled true enabled boolean ###freegetvalue free read access file ","summary":"\n\nPublic Fields\n\nlowerLimit\n\nLower limit of value\n\nType:\n\nint\n\nupperLimit\n\nUpper limit of value\n\nType:\n\nint\n\nvalue\n\nCurrent value\n\nType:\n\nint\n\nlimitedCreditEnabled\n\nLimited credit functionality false: Disabled true: Enabled\n\nType:\n\nboolean\n\nfreeGetValue\n\nFree read access to the value file false: Disabled true: Enabled\n\nType:\n\nboolean\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfire-ValueFileSettings"},{"title":"MifareDesfireExpection","keywords":"methods mifaredesfire object throws mifaredesfireexception error occurs due client api incorrectly unexpected occurred ##public ### getresult **public mifaredesfireresults getresult** returns **returns** comsymbolemdksecurenfcmifaredesfireresults ","summary":"\nThe methods of MifareDesfire object throws MifareDesfireException when an error\n occurs.\n\nThe error could be due to:\n\nClient using the API incorrectly\nOr because an unexpected error occurred\n\nPublic Methods\n\n getResult\n\npublic MifareDesfireResults getResult()\n\nReturns the MifareDesfireResults.","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfireExpection"},{"title":"MifareDesfireResults","keywords":"**values** * **success** -success **failure** -failure **emdk_not_opened** -the emdk opened **not_enabled** connection tag enabled enabling **invalid_sam_key** sam key invalid satisfy conditions **tag_lost** -tag lost **sam_authentication_error** application present **invalid_value** -invalid input parameter **already_enabled** **app_not_selected** identifieraid selected error returned pos calls method getfilesettings getfileds selecting aid **no_transaction_changes** -there chnages file record complete requested operation abort commit transaction **tag_out_of_memory** volatile memory eeprom full perfrom **invalid_command_code** -this protocol mifaredesfire library passes command code **integrity_error** incorrect padding bytes **tag_key_not_found** **invalid_command_length** string length **app_not_found** found **app_integrity_error** integrity doesnot occur normal refer desfire specification information **authentication_error** authenticated allowed peform operations **additional_frame_required** occurs apdu mode byes **file_size_limit_exceeded** size limit exceeded **picc_integrity_error** picc **command_aborted** previous completed additional frame exception execute **picc_disabled_error** disabled **app_limit_exceeded** -noof applications iemaximum **already_exists** identifier exists **tag_memory_error** occurred **file_not_found** **file_integrity_error** **param_not_supported** supported **undefined** -error defined ","summary":"\n\nValues:\n\nSUCCESS -Success\n\nFAILURE -Failure\n\nEMDK_NOT_OPENED -The EMDK is not opened.\n\nNOT_ENABLED -The connection to the Tag is not enabled. Try after enabling the TAG.","url":"/emdk-for-android/3-1/api/securenfc/MifareDesfireResults"},{"title":"MifarePlusSL3","keywords":"access mifare tag security level i/o operations isodep object class encapsulates methods required communicating technology protocol ##public ### enable **public void enabletag tag** sam communication rf activity block called main application thread blocked call canceled mifareplussl3exception calling close tagtechnology connected time applications complete **parameters** contactless detected device extra_tag information intent **returns** **throws** comsymbolemdksecurenfcmifareplussl3exception exception thrown fails disable disable** disables closes connection releases resources return mifareplussl3exceptionthis synchronous firstauthentication byte firstauthenticationshort keyblockno samkey samdiverseparams pcdcap2** performs authentication number key authenticatedrange 0x4000 0x404f depending card size represent aes diversification parameters current present pcdcap2 capabilities pcd perform **example usage** java lsamkey = lsamkeykeynum 0x10 lsamkeykeyver 0x00 mifareplussl3firstauthenticationblockno_of_the_keylsamkey null followingauthentication followingauthenticationshort samdiverseparams** performed successful byte[] rawdata mifareplussl3firstauthentication blockno_of_the_key mifareplussl3followingauthentication resetauthentication resetauthentication** resets status execution method authenticated state host authenticate * readblock readblockboolean isencrypted boolean maconcmd maconresponse short blocknumber numofblocks** reads blocks starting false plain true encrypted command maced response received multiple read range 0xff numofblocks maximum data note fail located sectors supports values datasheet parameter allowed user pass mifareplussl3readblocktrue block_no numberofblockstoberead writeblock writeblockboolean blockno blockdata** writes writtenrange blockdata written upto write maconrsp mifareplussl3writeblocktrue datatobewritten isvalueblock isvalueblockboolean blocknumber** validates notthis preceded validated check value= mifareplussl3isvalueblockfalseblock_no readvalue int readvalueboolean blockthis sector mifareplussl3readvaluefalse value_block_no writevalue writevalueboolean value** api operation incrementincrementtransfer decrementtransferdecrementtransferrestore mifareplussl3writevaluefalsetrue value_to_be_written increment incrementboolean increments contents stores result transfer buffer content affected calledthis incrementedrange incremented mifareplussl3incrementtruevalue_block_no mifareplussl3transfertruevalue_block_no decrement decrementboolean decrements decrementedrange decremented restore restoreboolean restores copies transferboolean transfers stored replaced bufferrange transferbuffer incrementtransfer incrementtransferboolean srcblocknumber destblocknumber combined source adding destination added mifareplussl3incrementtransfertrue decrementtransfer decrementtransferboolean subtracting subtracted isenabled isenabled** checks enabled emdk opened ","summary":"\nProvides access to Mifare Plus tag in security level 3 and I/O operations on\n an IsoDep Tag object. This class encapsulates all the methods required for\n communicating with the IsoDep tag using the tag technology protocol.","url":"/emdk-for-android/3-1/api/securenfc/MifarePlusSL3"},{"title":"MifarePlusSL3Exception","keywords":"methods mifareplussl3 object throws mifareplussl3exception error occurs due client api incorrectly unexpected occurred ##public ### getresult **public mifareplussl3results getresult** returns **returns** comsymbolemdksecurenfcmifareplussl3results ","summary":"\nThe methods of MifarePlusSL3 object throws MifarePlusSL3Exception when an error\n occurs.\n\nThe error could be due to:\n\nClient using the API incorrectly\nOr because an unexpected error occurred\n\nPublic Methods\n\n getResult\n\npublic MifarePlusSL3Results getResult()\n\nReturns the MifarePlusSL3Results.","url":"/emdk-for-android/3-1/api/securenfc/MifarePlusSL3Exception"},{"title":"MifarePlusSL3Results","keywords":"**values** * **success** -success **failure** -failure **emdk_not_opened** -the emdk opened **not_enabled** connection tag enabled enabling **authentication_error** authenticated allowed peform operations requested **rw_operations_limit_exceeded** number read write operation exceeded current session **invalid_mac** -invalid mac command response **invalid_block_number** block valid **block_not_exists** exist **not_supported_command** supported card state application perform mifareplus security level **accessing_empty_block** access empty null **already_enabled** **tag_lost** -tag lost **tag_memory_error** performed due overflow underflow memory **invalid_value** parameter passed invalid **invalid_value_block** increment /decrement/transfer **sam_authentication_error** key present sam **param_not_supported** **undefined** -undefined ","summary":"\n\nValues:\n\nSUCCESS -Success\n\nFAILURE -Failure\n\nEMDK_NOT_OPENED -The EMDK is not opened.\n\nNOT_ENABLED -The connection to the Tag is not enabled. Try after enabling the TAG.","url":"/emdk-for-android/3-1/api/securenfc/MifarePlusSL3Results"},{"title":"MifareSam","keywords":"access mifare sam properties i/o operations object class encapsulates methods required authenticating host **example usage** java public mainactivity extends activity implements emdklistener { securenfcmanager emdkmanager samtype mifaresam protected void oncreatebundle savedinstancestate emdkresults results = emdkmanagergetemdkmanager getapplicationcontext } onopenedemdkmanager thisemdkmanager thissecurenfcmanager getinstancefeature_typesecurenfc null securenfcmanagergetavailablesam samtypeequalssamtypemifare securenfcmgr getsaminstancesamtype sammode mifaresamconnect mifaresamauthenticatesamauthkey samkey mifaresamclose catch mifaresamexception eprintstacktrace ondestroy thisemdkmanagerrelease onclosed ##public ### connect **public connect** connects perform application call close complete **returns** comsymbolemdksecurenfcmifaresamsammode **throws** comsymbolemdksecurenfcmifaresamexception exception thrown fails establish connection getsaminfo saminfo getsaminfo** returns manufacturing related information comsymbolemdksecurenfcmifaresamsaminfo return authenticatesam authenticatesambyte authkey mifaresamadditionalauthdata additionalauthdata** performs authentication av1 mode mutual 3-pass system av2 set compatibility **parameters** key additionalauthdata additional data authenticate close** fields ###tag **type** javalangstring enums ###mifaresamprotectionmode protection **values** * **plain** -no **mac** -mac supported **full** -full macing encryption ###mifaresamsammode modes **av1** -mifare **av2** **undefined** invalid ","summary":"\nProvides access to MIFARE SAM properties and I/O operations on an SAM object.\n This class encapsulates all the methods required for authenticating the host\n with MiFare SAM.","url":"/emdk-for-android/3-1/api/securenfc/MifareSam"},{"title":"MifareSam.AdditionalAuthData","keywords":"mifare sam additional authentication data ##constructors ###additionalauthdata ##public fields ###av1mode specific av1 mode **future supported now** **type** comsymbolemdksecurenfcmifaresamadditionalauthdataav1mode ###av2mode av2 comsymbolemdksecurenfcmifaresamadditionalauthdataav2mode ","summary":"\nMifare Sam additional authentication data\n\nConstructors\n\nAdditionalAuthData\n\nPublic Fields\n\nav1Mode\n\nData specific to the AV1 Sam Mode. **Future use only, its not\n supported now**\n\nType:\n\ncom.symbol.emdk.securenfc.MifareSam.AdditionalAuthData.AV1Mode\n\nav2Mode\n\nData specific to the AV2 Sam Mode.","url":"/emdk-for-android/3-1/api/securenfc/MifareSam-AdditionalAuthData"},{"title":"MifareSam.AdditionalAuthData.AV1Mode","keywords":"data specific av1 sam mode **future supported now** ##constructors ###av1mode ##public fields ###uselogicalchannelforcmaccalculation uselogicalchannelforcmaccalculation false logical channel cmac calculation true **this application pass false** **type** boolean ###usesecretkeyforcrypto usesecretkeyforcrypto generate session key authentication secret crypto ###samdiverseparams samdiverseparams diversification parameters current keyif required parameter null null** comsymbolemdksecurenfcsamdiverseparams ","summary":"\nData specific to the AV1 Sam Mode. **Future use only, its not\n supported now**\n\nConstructors\n\nAV1Mode\n\nPublic Fields\n\nuseLogicalChannelForCMacCalculation\n\nuseLogicalChannelForCMacCalculation - False: Do not use logical\n channel for CMAC calculation.","url":"/emdk-for-android/3-1/api/securenfc/MifareSam-AdditionalAuthData-AV1Mode"},{"title":"MifareSam.AdditionalAuthData.AV2Mode","keywords":"data specific av2 sam mode **future supported now** ##constructors ###av2mode ##public fields ###protectionmode protection plain supportedmac full **type** comsymbolemdksecurenfcmifaresamprotectionmode ","summary":"\nData specific to the AV2 Sam Mode. **Future use only, its not\n supported now**\n\nConstructors\n\nAV2Mode\n\nPublic Fields\n\nprotectionMode\n\nProtection mode to be used and only PLAIN mode is supported.MAC\n and FULL is not supported\n\nType:\n\ncom.symbol.emdk.securenfc.MifareSam.ProtectionMode\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareSam-AdditionalAuthData-AV2Mode"},{"title":"MifareSam.ProtectionMode","keywords":"protection mode **values** * **plain** -no **mac** -mac supported **full** -full macing encryption ","summary":"\nProtection mode\n\nValues:\n\nPLAIN -No protection\n\nMAC -MAC protection. Not Supported.\n\nFULL -Full protection (MACing and encryption). Not Supported.\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareSam-ProtectionMode"},{"title":"MifareSam.SamInfo","keywords":"sam information ##public fields ###hardwareinfo hardware **type** comsymbolemdksecurenfcmifaresamsaminfohardwareinfo ###softwareinfo software comsymbolemdksecurenfcmifaresamsaminfosoftwareinfo ###manufacturerinfo manufacturer comsymbolemdksecurenfcmifaresamsaminfomanufacturerinfo ###globalcryptosettings byte ###sammode comsymbolemdksecurenfcmifaresamsammode ","summary":"\nSAM information\n\nPublic Fields\n\nhardwareInfo\n\nHardware information\n\nType:\n\ncom.symbol.emdk.securenfc.MifareSam.SamInfo.HardwareInfo\n\nsoftwareInfo\n\nSoftware information\n\nType:\n\ncom.symbol.emdk.securenfc.MifareSam.SamInfo.SoftwareInfo\n\nmanufacturerInfo\n\nManufacturer information\n\nType:\n\ncom.symbol.emdk.securenfc.MifareSam.SamInfo.ManufacturerInfo\n\nglobalCryptoSettings\n\nType:\n\nbyte\n\nsamMode\n\nType:\n\ncom.symbol.emdk.securenfc.MifareSam.SamMode\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareSam-SamInfo"},{"title":"MifareSam.SamInfo.HardwareInfo","keywords":"hardware information ##public fields ###vendorid ic manufacturer id **type** javalangstring ###type type ###version version ###storagesize memory int ###protocol compliant protocol ","summary":"\nHardware information\n\nPublic Fields\n\nvendorId\n\nIC manufacturer ID\n\nType:\n\njava.lang.String\n\ntype\n\nIC type\n\nType:\n\njava.lang.String\n\nversion\n\nIC Version\n\nType:\n\njava.lang.String\n\nstorageSize\n\nIC Memory information\n\nType:\n\nint\n\nprotocol\n\nIC Compliant protocol\n\nType:\n\njava.lang.String\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareSam-SamInfo-HardwareInfo"},{"title":"MifareSam.SamInfo.ManufacturerInfo","keywords":"manufacturer information ##public fields ###uid unique byte serial number **type** javalangstring ###batchno batch ###productiondate production date ","summary":"\nManufacturer information\n\nPublic Fields\n\nuid\n\nUnique 7 byte serial number\n\nType:\n\njava.lang.String\n\nbatchNo\n\nUnique 5 byte batch number\n\nType:\n\njava.lang.String\n\nproductionDate\n\nProduction Date\n\nType:\n\njava.lang.String\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareSam-SamInfo-ManufacturerInfo"},{"title":"MifareSam.SamInfo.SoftwareInfo","keywords":"software information ##public fields ###vendorid ic manufacturer id **type** javalangstring ###type type ###version version ###storagesize memory int ###protocol compliant protocol ","summary":"\nSoftware information\n\nPublic Fields\n\nvendorId\n\nIC manufacturer ID\n\nType:\n\njava.lang.String\n\ntype\n\nIC type\n\nType:\n\njava.lang.String\n\nversion\n\nIC Version\n\nType:\n\njava.lang.String\n\nstorageSize\n\nIC Memory information\n\nType:\n\nint\n\nprotocol\n\nIC Compliant protocol\n\nType:\n\njava.lang.String\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareSam-SamInfo-SoftwareInfo"},{"title":"MifareSam.SamMode","keywords":"sam modes **values** * **av1** -mifare av1 mode **av2** av2 **undefined** invalid ","summary":"\nSAM modes\n\nValues:\n\nAV1 -MIFARE SAM is in AV1 mode\n\nAV2 -MIFARE SAM is in AV2 mode\n\nUNDEFINED -MIFARE SAM is in invalid mode\n\n","url":"/emdk-for-android/3-1/api/securenfc/MifareSam-SamMode"},{"title":"MifareSamException","keywords":"methods mifaresam object throws mifaresamexception error occurs due client api incorrectly unexpected occurred ##public ### getresult **public mifaresamresults getresult** returns **returns** comsymbolemdksecurenfcmifaresamresults ","summary":"\nThe methods of MifareSam object throws MifareSamException when an error\n occurs.\n\nThe error could be due to:\n\nClient using the API incorrectly\nOr because an unexpected error occurred\n\nPublic Methods\n\n getResult\n\npublic MifareSamResults getResult()\n\nReturns the MifareSamResults.","url":"/emdk-for-android/3-1/api/securenfc/MifareSamException"},{"title":"MifareSamResults","keywords":"defines error codes mifaresam apis returns **values** * **success** -success **emdk_not_opened** -the emdk opened **nfc_disabled** -nfc disabled settings enabling nfc **sam_not_available** -sam present device inserting sam secure api **failure** -failure **already_connected** connected **invalid_value** -invalid input parameter **invalid_key** key type length invalid **param_not_supported** supported **not_connected** calling connect making calls **sam_not_in_av1_mode** av1 mode **sam_not_in_av2_mode** av2 **sam_key_disabled** **invalid_host_key** host **memory_failure** -memory failure kuc updated **key_ver_not_found** version found **invalid_key_entry_or_kuc** -referenced data entry usage counters **auth_cond_not_satisfied** authentication mifare unlocked 00h limit reached startup accomplished lock/unlock unlock number mismatch aes exceeded unknown **undefined** -error code defined ","summary":"\nDefines all the error codes the MifareSAM APIs returns. br\n br\n\nValues:\n\nSUCCESS -Success\n\nEMDK_NOT_OPENED -The EMDK is not opened.\n\nNFC_DISABLED -NFC is disabled in settings, try enabling the NFC.","url":"/emdk-for-android/3-1/api/securenfc/MifareSamResults"},{"title":"PassThruApduException","keywords":"methods passthruapduprocessor object throws passthruapduexception error occurs due client api incorrectly unexpected occurred ##public ### getresult **public passthruapduresults getresult** returns **returns** comsymbolemdksecurenfcpassthruapduresults ","summary":"\nThe methods of PassThruApduProcessor object throws PassThruApduException when an error\n occurs.\n\nThe error could be due to:\n\nClient using the API incorrectly\nOr because an unexpected error occurred\n\nPublic Methods\n\n getResult\n\npublic PassThruApduResults getResult()\n\nReturns the PassThruApduResults.","url":"/emdk-for-android/3-1/api/securenfc/PassThruApduException"},{"title":"PassThruApduProcessor","keywords":"class designed nfc applications perform secure communication contact-less cards tags low level protocol audience application developers good understanding expertise technology including sam documentation features note recommended interested full control apdu securenfcmanagergettagtechinstance simple api securely communicate smart card/tags supported tag technologies **example usage** java public mainactivity extends activity implements emdklistener { securenfcmanager emdkmanager passthruapduprocessor protected void oncreatebundle savedinstancestate emdkresults results = emdkmanagergetemdkmanager getapplicationcontext } onopenedemdkmanager thisemdkmanager thissecurenfcmanager getinstancefeature_typesecurenfc null ifsecurenfcmgr= null{ securenfcmgrgetpassthruapduinstance passthruapduprocessorenableprotocoltypet1 passthruapduprocessordisable }catch passthruapduexception eprintstacktrace ondestroy thisemdkmanagerrelease onclosed ##public methods ### enable **public enablepassthruapduprocessorprotocoltype protocoltype** enables connection host device access module **parameters** protocoltype card reader contactless parameter added future **returns** **throws** comsymbolemdksecurenfcpassthruapduexception exception thrown fails smartcard disable disable** closes established getversion string getversionpassthruapduprocessorversiontype versiontype** retrieves version stack connected versiontype javalangstring retrieve process byte processbyte cmdapdu short expectedresplength boolean userformattedprotocolframe** sends command c-apdu data unit receives response r-apdu create send received **note** synchronous call block main thread depending time payload recommendation called processed length expected pass userformattedprotocolframe applicable t1 typically user provide false true frame header enums ###passthruapduprocessorversiontype enum versions **values** * **smart_card** -the obtained successful **smart_card_stack** -retrieves ###passthruapduprocessorprotocoltype effect tda8029 t=0 t=1 sc_protocol_t0 sc_protocol_t1communication chip decided supports set mode **t0** -t-0 byte-oriented half duplex transmission **t1** -t-1 block-oriented ","summary":"\nThis class is designed for the NFC applications to perform secure communication with the\n contact-less secure cards (tags) at the low level protocol.","url":"/emdk-for-android/3-1/api/securenfc/PassThruApduProcessor"},{"title":"PassThruApduProcessor.ProtocolType","keywords":"communication protocol sam tag protocoltype added future parameter effect device communicate tda8029 smart card reader t=0 t=1 depending supported connected user provide sc_protocol_t0 sc_protocol_t1communication chip decided supports set mode **values** * **t0** -t-0 byte-oriented half duplex transmission **t1** -t-1 block-oriented ","summary":"\nCommunication protocol between a SAM and tag.\n The protocolType is added for future use only.\n This parameter does not have effect on protocol used by device to communicate with SAM.","url":"/emdk-for-android/3-1/api/securenfc/PassThruApduProcessor-ProtocolType"},{"title":"PassThruApduProcessor.VersionType","keywords":"enum smart card stack connected versions **values** * **smart_card** -the version obtained successful connection **smart_card_stack** -retrieves ","summary":"\nThe enum to get the Smart Card stack and connected Smart Card versions.\n\nValues:\n\nSMART_CARD -The version of connected smart card and this version can be obtained\n only after successful connection.","url":"/emdk-for-android/3-1/api/securenfc/PassThruApduProcessor-VersionType"},{"title":"PassThruApduResults","keywords":"apdu service errors **values** * **success** -success **failure** -failed **init_failure** -the sam initialized properly **invalid_object** -invalid object **invalid_value** input parameter **nfc_disabled** -nfc disabled device enabling nfc secure api **framing_error** -error frame **bad_nad** -bad nad error **card_deactivated** smart card deactivated **card_muted** muted t=1 exchange **processing_chain_aborted** processing chain aborted transmission reception **cmd_frame_lost** -atleast command lost **not_enabled** connection established **sam_not_available** -sam present inserting **length_too_short** length short occurs actual data received expected **negative_length** negative **card_memory_overflow** memory overflow **tx_parity_error** hardware parity **rx_parity_error** **resync** -resyncing required **serial_lrc_err** -serial lrc **time_out** timed waiting time **too_short_apdu** due **uart_buffer_overflow** -uart buffer **voltage_drop** -voltage supply dropped **invalid_apdu** invalid wrong **proc_byte_err** procedure byte **temp_alaram** temperature range **emdk_not_opened** -emdk opened **undefined** code defined ","summary":"\nAPDU Service errors\n\nValues:\n\nSUCCESS -Success\n\nFAILURE -Failed\n\nINIT_FAILURE -The SAM is not initialized properly.\n\nINVALID_OBJECT -Invalid Object\n\nINVALID_VALUE -Invalid input parameter\n\nNFC_DISABLED -NFC is disabled on the device.","url":"/emdk-for-android/3-1/api/securenfc/PassThruApduResults"},{"title":"SamBase","keywords":"sambase base class sam technologies supported ##constructors ###sambase ","summary":"\nSamBase is the base class for all the SAM technologies supported.\n\nConstructors\n\nSamBase\n\n","url":"/emdk-for-android/3-1/api/securenfc/SamBase"},{"title":"SamDiverseParams","keywords":"sam diversification parameters ##constructors ###samdiverseparams ##public fields ###tdeaencrounds des 2k3des encryption rounds false round true **type** boolean ###diversemode key mode av1 av2 ###diverseinput input data length bytes 3des aes compatibility 1-15 1-31 byte ","summary":"\nSAM diversification parameters\n\nConstructors\n\nSamDiverseParams\n\nPublic Fields\n\ntdeaEncRounds\n\nDES or 2K3DES encryption rounds false: 1 round true: 2 rounds\n\nType:\n\nboolean\n\ndiverseMode\n\nKey diversification mode to be used false: AV1 true: AV2\n\nType:\n\nboolean\n\ndiverseInput\n\nDiversification input data Data length: 8 bytes (3DES) or 16 bytes (AES)\n for SAM AV1 or SAM AV2 in AV1 compatibility mode 1-15 bytes (3DES) or\n 1-31 bytes (AES) for SAM AV2 in AV2 mode\n\nType:\n\nbyte\n\n","url":"/emdk-for-android/3-1/api/securenfc/SamDiverseParams"},{"title":"SamKey","keywords":"samkey class assigned keys present mifaresam authentication purpose ##constructors ###samkey ##public fields ###keynum key number supported values ranges 0x00 0x7f **type** byte ###keyver version 0xff ","summary":"\nSamkey class will be assigned with the keys present on the MifareSam and used\n for the authentication purpose.\n\nConstructors\n\nSamKey\n\nPublic Fields\n\nkeyNum\n\nKey number.","url":"/emdk-for-android/3-1/api/securenfc/SamKey"},{"title":"SecureNfcException","keywords":"methods securenfcexception object throws error occurs due client api incorrectly unexpected occurred ##public ### getresult **public securenfcresults getresult** returns **returns** comsymbolemdksecurenfcsecurenfcresults ","summary":"\nThe methods of SecureNfcException object throws SecureNfcException when an error\n occurs.\n\nThe error could be due to:\n\nClient using the API incorrectly\nOr because an unexpected error occurred\n\nPublic Methods\n\n getResult\n\npublic SecureNfcResults getResult()\n\nReturns the SecureNfcResults.","url":"/emdk-for-android/3-1/api/securenfc/SecureNfcException"},{"title":"SecureNfcManager","keywords":"class access obtain object communicate secure module sam ##public methods ### getavailablesam **public samtype getavailablesam** device **returns** comsymbolemdksecurenfcsecurenfcmanagersamtype **throws** comsymbolemdksecurenfcsecurenfcexception exception thrown emdk opened getsaminstance sambase getsaminstancesecurenfcmanagersamtype samtype** method returns authenticate host **parameters** comsymbolemdksecurenfcsambase gettagtechtype tagtechtype gettagtechtypetag tag** tag type discovered contactless detected extra_tag information intent comsymbolemdksecurenfcsecurenfcmanagertagtechtype gettagtechinstance tagtechbase gettagtechinstancesecurenfcmanagertagtechtype tagtype** technology based passed unsupported null returned application cast tagtype comsymbolemdksecurenfctagtechbase getpassthruapduinstance passthruapduprocessor getpassthruapduinstance** securely smart cards protocol data unit apdu level designed nfc applications perform communication tags low audience developers good understanding expertise including documentation features note recommended interested full control securenfcmanagergettagtechinstance simple api card/tags supported technologies comsymbolemdksecurenfcpassthruapduprocessor enums ###securenfcmanagersamtype types **values** * **none** -no **mifare** -mifare **felica** -felica **undefined** -sam category undefined ###securenfcmanagertagtechtype **mifare_desfire** -mifaredesfire **mifare_plus_sl3** sl3 **mifare_plus_sl2** sl2 -tag ","summary":"\nThis class provides access to obtain the object to communicate with the\n Secure Access Module (SAM).\n \n \n\nPublic Methods\n\n getAvailableSam\n\npublic SamType getAvailableSam()\n\nGets the available SAM on the device.","url":"/emdk-for-android/3-1/api/securenfc/SecureNfcManager"},{"title":"SecureNfcManager.SamType","keywords":"supported sam types **values** * **none** -no **mifare** -mifare **felica** -felica **undefined** -sam category undefined ","summary":"\nSupported SAM types.\n\nValues:\n\nNONE -No SAM available.\n\nMIFARE -Mifare SAM\n\nFELICA -Felica SAM\n\nUNDEFINED -SAM category is undefined.\n\n","url":"/emdk-for-android/3-1/api/securenfc/SecureNfcManager-SamType"},{"title":"SecureNfcManager.TagTechType","keywords":"nfc tag types **values** * **mifare_desfire** -mifaredesfire **mifare_plus_sl3** -mifare sl3 **mifare_plus_sl2** sl2 **felica** -felica **undefined** -tag category undefined ","summary":"\nNFC tag types.\n\nValues:\n\nMIFARE_DESFIRE -MifareDesfire Tag\n\nMIFARE_PLUS_SL3 -Mifare Plus SL3 Tag\n\nMIFARE_PLUS_SL2 -Mifare Plus SL2 Tag\n\nFELICA -Felica Tag\n\nUNDEFINED -Tag category is undefined\n\n","url":"/emdk-for-android/3-1/api/securenfc/SecureNfcManager-TagTechType"},{"title":"SecureNfcResults","keywords":"**values** * **success** -success **failure** -failure **emdk_not_opened** -the emdk opened **undefined** -error code defined ","summary":"\n\nValues:\n\nSUCCESS -Success\n\nFAILURE -Failure\n\nEMDK_NOT_OPENED -The EMDK is not opened.\n\nUNDEFINED -Error code not defined.\n\n","url":"/emdk-for-android/3-1/api/securenfc/SecureNfcResults"},{"title":"TagTechBase","keywords":"tagtechbase class applications register status notification callbacks ##constructors ###tagtechbase ","summary":"\nTagTechBase class allows the applications to register to get the status\n notification via callbacks.\n\nConstructors\n\nTagTechBase\n\n","url":"/emdk-for-android/3-1/api/securenfc/TagTechBase"},{"title":"RegionType","keywords":"data type contained region **values** * **unknown** -data unknown **ocr** ocr **omr** **barcode** barcode **picture** picture ","summary":"\nThe data type contained within the region\n\nValues:\n\nUNKNOWN -Data type is Unknown.\n\nOCR -Data type is OCR.\n\nOMR -Data type is OCR.\n\nBARCODE -Data type is Barcode.","url":"/emdk-for-android/3-1/api/simulscan/RegionType"},{"title":"SimulScanConfig","keywords":"simulscanconfig class access reader configuration settings **example usage** java simulscanmultitemplate template1 = simulscanmultitemplatefileuri//fileuri points template simulscanreader simulscanmanagergetdevicetemplate1deviceidentifier readerenable config readergetconfig // object enabled calling getconfig configaudiofeedback false readersetconfigconfig scanning setconfig ##public fields ###multitemplate scan **type** comsymbolemdksimulscansimulscanmultitemplate ###autocapture true form captured automatically detected user manually tap screen press trigger capture javalangboolean ###debugmode session write region images values data storage successful prompt allowing turn debug mode ###audiofeedback on/off audio feedback ###hapticfeedback haptic ###ledfeedback led ###userconfirmationonscan userconfirmationonscan shows ui confirm scanned sending results application ###identificationtimeout amount time milliseconds wait timing identification int ###processingtimeout processing ","summary":"\nThe SimulScanConfig class provides access to reader configuration settings.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tSimulScanMultiTemplate template1 = new SimulScanMultiTemplate(fileUri);//fileUri points to the template\n\tSimulScanReader reader = simulscanManager.getDevice(template1.deviceIdentifier);\n\treader.enable();\n\tSimulScanConfig config = reader.getConfig(); // Reader object must be enabled before calling getConfig\n\tconfig.audioFeedback = false;\n\treader.setConfig(config); // Reader object must be enabled and not scanning when calling setConfig\n\nPublic Fields\n\nmultiTemplate\n\nThe SimulScanMultiTemplate to scan\n\nType:\n\ncom.symbol.emdk.simulscan.SimulScanMultiTemplate\n\nautoCapture\n\nIf true, form will be captured automatically when detected.","url":"/emdk-for-android/3-1/api/simulscan/SimulScanConfig"},{"title":"SimulScanData","keywords":"simulscandata object scanning result **example usage** java public void onsimulscandatasimulscandata { date timestamp = datesimulscandatagettimestamp list simulscandataelements simulscandatagetelements simulscandataregions arraylist simulscanelement curelement instanceof simulscanregion logdtag curelementgetname } simulscangroup regionsingroup simulscangroupcurelementgetregions curregion regionsingroup{ group+ simulscangroupcurelementgetname + region+ curregiongetname ##constructors ###simulscandata ##public interfaces javaioserializable methods ### gettimestamp **public string gettimestamp** returns time data captured format yyyy-mm-dd hhmmssnnnnnnnnn **returns** javalangstring gettemplate simulscantemplate gettemplate** scanned template comsymbolemdksimulscansimulscantemplate getelements getelements** elements javautillist ","summary":"\nThe SimulScanData object gives scanning result\n\n \n\nExample Usage:\n\t\n\t:::java\t\n\tpublic void onSimulScanData(SimulScanData simulscanData) {\n\tDate timestamp = new Date(simulscanData.getTimestamp());\n\tListSimulScanElement simulscanDataElements = simulscanData.getElements();\n\tListSimulScanRegion simulscanDataRegions = new ArrayListSimulScanRegion();\n\tfor (SimulScanElement curElement : simulscanDataElements)\n\t{\n\tif (curElement instanceof SimulScanRegion) {\n\tLog.d(TAG, ((SimulScanRegion) curElement).getName());\n\t} else if (curElement instanceof SimulScanGroup) {\n\tListSimulScanRegion regionsInGroup = ((SimulScanGroup)curElement).getRegions();\n\tfor (SimulScanRegion curRegion : regionsInGroup){\n\tLog.d(TAG, Group:+ ((SimulScanGroup)curElement).getName() + Region:+ ((SimulScanRegion) curRegion).getName());\n\t}\n\t}\n\t}\n\nConstructors\n\nSimulScanData\n\nPublic interfaces\n\njava.io.Serializable\n\nPublic Methods\n\ngetTimestamp\n\npublic String getTimestamp()\n\nReturns the time at which the data was captured.","url":"/emdk-for-android/3-1/api/simulscan/SimulScanData"},{"title":"SimulScanElement","keywords":"simulscanelement abstract class represents processed simulscantemplateelement ##public interfaces javaioserializable methods ### getdata **public object getdata** returns additional data type **returns** javalangobject getelementnumber int getelementnumber** unique identifier element getname string getname** friendly javalangstring ","summary":"\nThe SimulScanElement abstract class represents a processed SimulScanTemplateElement.\n\nPublic interfaces\n\njava.io.Serializable\n\nPublic Methods\n\ngetData\n\npublic Object getData()\n\nReturns additional processed data as an object of type Object\n\nReturns:\n\njava.lang.Object\n\n getElementNumber\n\npublic int getElementNumber()\n\nReturns unique identifier of this element\n\nReturns:\n\nint\n\ngetName\n\npublic String getName()\n\nReturns the friendly name of this element\n\nReturns:\n\njava.lang.String\n\n","url":"/emdk-for-android/3-1/api/simulscan/SimulScanElement"},{"title":"SimulScanException","keywords":"simulscan apis throws simulscanexception error occurs due incorrect case unexpected ##public methods ### getresult **public simulscanresults getresult** returns object additional information exception **returns** comsymbolemdksimulscansimulscanresults ","summary":"\nThe SimulScan APIs throws SimulScanException when an error occurs.\n\nThe error could be due to:\n\nIncorrect use of APIs\nOr in case of an unexpected error\n\nPublic Methods\n\n getResult\n\npublic SimulScanResults getResult()\n\nReturns the SimulScanResults object that provides additional information on the exception.","url":"/emdk-for-android/3-1/api/simulscan/SimulScanException"},{"title":"SimulScanGroup","keywords":"simulscangroup class represents processed simulscantemplategroup ##public methods ### getregions **public list getregions** returns simulscanregion objects collection regions contained group **returns** javautillist getdata object getdata** additional data type javalangobject ","summary":"\nThe SimulScanGroup class represents a processed SimulScanTemplateGroup.\n\nPublic Methods\n\n getRegions\n\npublic List getRegions()\n\nReturns a list of SimulScanRegion objects that represents a collection of processed regions\n \tthat are contained within the group\n\nReturns:\n\njava.util.List\n\ngetData\n\npublic Object getData()\n\nReturns additional processed data as an object of type Object\n\nReturns:\n\njava.lang.Object\n\n","url":"/emdk-for-android/3-1/api/simulscan/SimulScanGroup"},{"title":"SimulScanManager","keywords":"primary object access simulscan feature **example usage** java public class mainactivity extends activity implements emdklistener simulscandataeventlisterner simulscanstatuseventlisterner { protected void oncreatebundle savedinstancestate // emdkresults results = emdkmanagergetemdkmanagergetapplicationcontext } onopenedemdkmanager emdkmanager thisemdkmanager simulscanmanager simulscanmanagerthisemdkmanagergetinstancefeature_typesimulscan list readerinfolist simulscanmanagergetsupporteddevicesinfo simulscanreader reader simulscanmanagergetdevicereaderinfolistget0 readeradddatalistenercallbackobj readeraddstatuslistenercallbackobj readerenable set template calling read readerread readercancelread readerdisable emdkmanagerreleasefeature_typesimulscan ##public methods ### getsupporteddevicesinfo **public getsupporteddevicesinfo** returns supported devices information **returns** javautillist getdevice getdevicesimulscanreaderinfo simulscanreaderinfo** **parameters** simulscanreaderinfo simulscanreadinfo specifies application comsymbolemdksimulscansimulscanreader **throws** comsymbolemdksimulscansimulscanexception exception throw error occurs getdevicesimulscanmanagerdeviceidentifier deviceidentifier** deviceidentifier device identifier enums ###simulscanmanagerdeviceidentifier defines scanner **values** * **default** -the selected based scanning default **internal_camera1** -use internal camera **internal_imager1** imager ","summary":"\nThis is the primary object to access the SimulScan feature.\n \n \n\nExample Usage:\n\t\n\t:::java\tpublic class MainActivity extends Activity implements EMDKListener,\n\tSimulScanDataEventListerner, SimulScanStatusEventListerner {\n\tprotected void onCreate(Bundle savedInstanceState) {\n\t//..","url":"/emdk-for-android/3-1/api/simulscan/SimulScanManager"},{"title":"SimulScanManager.DeviceIdentifier","keywords":"defines scanner device identifier **values** * **default** -the selected based template scanning default **internal_camera1** -use internal camera **internal_imager1** imager ","summary":"\nDefines scanner device identifier.\n\nValues:\n\nDEFAULT -The scanner device is selected based on the template if the scanning device is specified in the template otherwise uses default scanner.","url":"/emdk-for-android/3-1/api/simulscan/SimulScanManager-DeviceIdentifier"},{"title":"SimulScanMultiTemplate","keywords":"simulscanmultitemplate class entire parsed xml template file consist individual ##constructors ###simulscanmultitemplate create object string **parameters** simulscanmanager **type** comsymbolemdksimulscansimulscanmanager xmlstring javalangstring **throws** comsymbolemdksimulscansimulscanexception exception throw error occurs creating uri fileuri loaded ##public methods ### gettemplatename **public gettemplatename** returns friendly multitemplate **returns** ","summary":"\nThe SimulScanMultiTemplate class contains an entire parsed XML template file. It may consist of many individual Template.\n\nConstructors\n\nSimulScanMultiTemplate\n\nCreate SimulScanMultiTemplate object from XML string\n\nParameters:\n\nsimulScanManager\n\nType: com.symbol.emdk.simulscan.SimulScanManager\n\nxmlString\n\nXML string\n\nType: java.lang.String\n\nThrows:\n\ncom.symbol.emdk.simulscan.SimulScanException\n\nException will be throw if any error occurs while creating SimulScanMultiTemplate\n\nSimulScanMultiTemplate\n\nCreate SimulScanMultiTemplate object from URI to template XML\n\nParameters:\n\nsimulScanManager\n\nType: com.symbol.emdk.simulscan.SimulScanManager\n\nfileUri\n\nURI to the template to be loaded\n\nType: Uri\n\nThrows:\n\ncom.symbol.emdk.simulscan.SimulScanException\n\nException will be throw if any error occurs while creating SimulScanMultiTemplate\n\nPublic Methods\n\ngetTemplateName\n\npublic String getTemplateName()\n\nReturns the friendly name of the MultiTemplate object\n\nReturns:\n\njava.lang.String\n\n","url":"/emdk-for-android/3-1/api/simulscan/SimulScanMultiTemplate"},{"title":"SimulScanReader","keywords":"simulscanreader class represent access physical reader device **example usage** java list readerinfolist = simulscanmanagergetsupporteddevicesinfo simulscanmanagergetdevicereaderinfolistget0 readeradddatalistenercallbackobj readeraddstatuslistenercallbackobj readerenable // set template calling read readerread readercancelread readerdisable ##public methods ### getreaderinfo **public simulscanreaderinfo getreaderinfo** returns information **returns** comsymbolemdksimulscansimulscanreaderinfo isreadpending boolean isreadpending** submitted pending javalangboolean enable void enable** enables hardware method make scan enabled throw simulscanexception call disable readers remain locked unavailable application simulscan **throws** comsymbolemdksimulscansimulscanexception exception thrown fails disable** disables scanned data lost releases resources scanning applications related functions till function called isenabled isenabled** state getconfig simulscanconfig getconfig** current configuration settings modifications made returned object readersetconfigsimulscanconfig effect config readergetconfig comsymbolemdksimulscansimulscanconfig error occurs setconfig setconfigsimulscanconfig config** skips unsupported parameters continues setting supported values simulscanmultitemplate template1 simulscanmultitemplatefileuri//fileuri points simulscanmanagergetdevicetemplate1deviceidentifier configmultitemplate readersetconfigconfig **parameters** read** initiates request asynchronous status registered callbacks fail cancelled issuing cancelread recommended check submitting cancelread** cancels calls adddatalistener adddatalistenersimulscanreaderdatalisterner datalistener** client register notification datalistener datalisterner callabck removedatalistener removedatalistenersimulscanreaderdatalisterner unregister callback unregistered addstatuslistener addstatuslistenersimulscanreaderstatuslisterner statuslistener** statuslistener statuslisterner removestatuslistener removestatuslistenersimulscanreaderstatuslisterner ","summary":"\nSimulScanReader class will represent and provides access to the physical Reader\n device.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tListSimulScanReaderInfo readerInfoList = simulscanManager.getSupportedDevicesInfo();\n\tSimulScanReader reader = simulscanManager.getDevice(readerInfoList.get(0));\n\treader.addDataListener(callbackObj);\n\treader.addStatusListener(callbackObj);\n\treader.enable();\n\t// Set template before calling read\n\treader.read();\n\treader.cancelRead();\n\treader.disable();\n\nPublic Methods\n\n getReaderInfo\n\npublic SimulScanReaderInfo getReaderInfo()\n\nReturns information about the  reader device.","url":"/emdk-for-android/3-1/api/simulscan/SimulScanReader"},{"title":"SimulScanReader.DataListerner","keywords":"interface notifying client applications scan data **example usage** java public class mainactivity extends activity implements datalisterner ##public methods ### ondata **public void ondatasimulscandata simulscandata** callback method availability **parameters** simulscandata **returns** ","summary":"\nAn interface for notifying client applications when the scan data is\n available.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tpublic class MainActivity extends Activity implements DataListerner\n\t..","url":"/emdk-for-android/3-1/api/simulscan/SimulScanReader-DataListerner"},{"title":"SimulScanReader.StatusListerner","keywords":"interface notifying client applications notify scan events **example usage** java public class mainactivity extends activity implements statuslisterner ##public methods ### onstatus **public void onstatussimulscanstatusdata simulscanstatusdata** callback method status event occurs **parameters** simulscanstatusdata **returns** ","summary":"\nAn interface for notifying client applications to notify scan events.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tpublic class MainActivity extends Activity implements StatusListerner\n\t..","url":"/emdk-for-android/3-1/api/simulscan/SimulScanReader-StatusListerner"},{"title":"SimulScanReaderInfo","keywords":"simulscanreaderinfo information reader device **example usage** java readerinfogetfriendlyname ##public methods ### getfriendlyname **public string getfriendlyname** returns friendly = **returns** javalangstring getdevicetype devicetype getdevicetype** type simulscandevicetype readerinfogetdevicetype comsymbolemdksimulscansimulscanreaderinfodevicetype enums ###simulscanreaderinfodevicetype list supported scanner simulscandevicetypecamera **values** * **camera** -the class camera **imager** imager **undefined** defined ","summary":"\nSimulScanReaderInfo provides information of the reader device.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\treaderInfo.getFriendlyName();\n\nPublic Methods\n\n getFriendlyName\n\npublic String getFriendlyName()\n\nReturns the friendly name of the Device.","url":"/emdk-for-android/3-1/api/simulscan/SimulScanReaderInfo"},{"title":"SimulScanReaderInfo.DeviceType","keywords":"list supported scanner device type **example usage** java simulscandevicetypecamera **values** * **camera** -the class camera **imager** imager **undefined** defined ","summary":"\nList of supported scanner device type.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tSimulScanDeviceType.CAMERA;\n\nValues:\n\nCAMERA -The Scanner device class is camera.","url":"/emdk-for-android/3-1/api/simulscan/SimulScanReaderInfo-DeviceType"},{"title":"SimulScanRegion","keywords":"simulscanregion class represents processed simulscantemplateregion ##public methods ### getregiontype **public regiontype getregiontype** returns data type region **returns** comsymbolemdksimulscanregiontype getimage yuvimage getimage** captured image getabsoluteconfidence int getabsoluteconfidence** absolute confidence ocr results getrelativeconfidence getrelativeconfidence** relative getdata object getdata** returned depend javalangobject ","summary":"\nThe SimulScanRegion class represents a processed SimulScanTemplateRegion.\n\nPublic Methods\n\n getRegionType\n\npublic RegionType getRegionType()\n\nReturns the processed data type of this region\n\nReturns:\n\ncom.symbol.emdk.simulscan.RegionType\n\ngetImage\n\npublic YuvImage getImage()\n\nReturns the captured region image\n\nReturns:\n\nYuvImage\n\n getAbsoluteConfidence\n\npublic int getAbsoluteConfidence()\n\nReturns the absolute confidence of OCR results\n\nReturns:\n\nint\n\ngetRelativeConfidence\n\npublic int getRelativeConfidence()\n\nReturns the relative confidence of OCR results\n\nReturns:\n\nint\n\n getData\n\npublic Object getData()\n\nReturns the processed data.","url":"/emdk-for-android/3-1/api/simulscan/SimulScanRegion"},{"title":"SimulScanResults","keywords":"defines error codes simulscan api returns **values** * **success** -success **already_scanning** -a scan operation progress **already_stopped_scanning** -the reader stopped scanning **reader_already_enabled** -reader enabled **reader_in_use** -another time **reader_already_disabled** disabled **feature_not_supported** feature supported completely input **reader_not_enabled** selected **invalid_object** released valid **failed_to_load_template** -failed load template **failed_to_set_template** set **template_not_set** **invalid_value** passed **no_data_listener** -data listner **emdk_not_opened** -emdk opened **reader_init_failed** initialization failed **reader_deinit_failed** **undefined** -undefined **failure** -failure ","summary":"\nDefines all the error codes the SimulScan API returns.\n\nValues:\n\nSUCCESS -Success.\n\nALREADY_SCANNING -A scan operation is already in progress.\n\nALREADY_STOPPED_SCANNING -The reader has already stopped scanning\n\nREADER_ALREADY_ENABLED -Reader is already enabled\n\nREADER_IN_USE -Another reader is already enabled and in use.","url":"/emdk-for-android/3-1/api/simulscan/SimulScanResults"},{"title":"SimulScanStatusData","keywords":"simulscanstatusdata class access reader status **example usage** java simulscanstatusdatagetstate ##constructors ###simulscanstatusdata ##public methods ### getstate **public simulscanstatus getstate** returns current **returns** comsymbolemdksimulscansimulscanstatusdatasimulscanstatus getfriendlyname string getfriendlyname** friendly object javalangstring enums ###simulscanstatusdatasimulscanstatus **values** * **disabled** -disabled called successfully **enabled** -enabled **scanning** -successfully started scanning **idle** -finished **error** -error occurred **unknown** -unknown ","summary":"\nSimulScanStatusData class provides access to reader status.\n \n \n\nExample Usage:\n\t\n\t:::java\t\n\tSimulScanStatusData.getState();\n\nConstructors\n\nSimulScanStatusData\n\nPublic Methods\n\n getState\n\npublic SimulScanStatus getState()\n\nReturns the the current status\n\nReturns:\n\ncom.symbol.emdk.simulscan.SimulScanStatusData.SimulScanStatus\n\ngetFriendlyName\n\npublic String getFriendlyName()\n\nReturns the friendly name of the Reader from which the SimulScanStatusData \n object was from\n\nReturns:\n\njava.lang.String\n\nPublic Enums\n\nSimulScanStatusData.SimulScanStatus\n\nValues:\n\nDISABLED -Disabled called successfully on reader\n\nENABLED -Enabled reader successfully\n\nSCANNING -Successfully started scanning\n\nIDLE -Finished scanning\n\nERROR -Error occurred\n\nUNKNOWN -Unknown status\n\n","url":"/emdk-for-android/3-1/api/simulscan/SimulScanStatusData"},{"title":"SimulScanStatusData.ExtendedInfo","keywords":"class access extended status information pass additional error ##constructors ###extendedinfo ##public methods ###getextendedstatus **returns** [simulscanstatusdataextendedstatus]simulscanstatusdata#simulscanstatusdataextendedstatus ###getextendedstatusdescription javalangstring ","summary":"\nThis class allows access to extended status information. It is usually used to pass additional error information.\n\nConstructors\nExtendedInfo()\n\nPublic Methods\ngetExtendedStatus()\n\nReturns:\n\nSimulScanStatusData.ExtendedStatus\n\ngetExtendedStatusDescription()\n\nReturns:\n\njava.lang.String\n\n","url":"/emdk-for-android/3-1/api/simulscan/SimulScanStatusData-ExtendedInfo"},{"title":"SimulScanStatusData.SimulScanStatus","keywords":"**values** * **disabled** -disabled called successfully reader **enabled** -enabled **scanning** -successfully started scanning **idle** -finished **error** -error occurred **unknown** -unknown status ","summary":"\n\nValues:\n\nDISABLED -Disabled called successfully on reader\n\nENABLED -Enabled reader successfully\n\nSCANNING -Successfully started scanning\n\nIDLE -Finished scanning\n\nERROR -Error occurred\n\nUNKNOWN -Unknown status\n\n","url":"/emdk-for-android/3-1/api/simulscan/SimulScanStatusData-SimulScanStatus"},{"title":"SimulScanTemplate","keywords":"template class represents xml passed simulscanengine recognizable tags attributes ##public interfaces javaioserializable methods ### getelements **public list getelements** returns simulscantemplateelements contained **returns** javautillist getheight int getheight** height getwidth getwidth** width getid getid** number getname string getname** friendly javalangstring ","summary":"\nThe Template class represents the XML template passed into the SimulScanEngine. \n All of the recognizable tags and attributes are placed into this class.","url":"/emdk-for-android/3-1/api/simulscan/SimulScanTemplate"},{"title":"SimulScanTemplateElement","keywords":"templateelement class represents elements nested directly tag xml template file ##public interfaces javaioserializable methods ### getname **public string getname** returns friendly element **returns** javalangstring getregionnumber int getregionnumber** region number ","summary":"\nThe TemplateElement class represents elements nested directly under the tag in \n an XML template file\n\nPublic interfaces\n\njava.io.Serializable\n\nPublic Methods\n\ngetName\n\npublic String getName()\n\nReturns the friendly name of the element\n\nReturns:\n\njava.lang.String\n\n getRegionNumber\n\npublic int getRegionNumber()\n\nReturns the region number of the element\n\nReturns:\n\nint\n\n","url":"/emdk-for-android/3-1/api/simulscan/SimulScanTemplateElement"},{"title":"SimulScanTemplateGroup","keywords":"simulscantemplategroup class grouping multiple simulscantemplateregion items ##public methods ### gettemplateregions **public list gettemplateregions** returns objects represents collection template regions contained **returns** javautillist ","summary":"\nThe SimulScanTemplateGroup class is a grouping of multiple SimulScanTemplateRegion items.\n\nPublic Methods\n\n getTemplateRegions\n\npublic List getTemplateRegions()\n\nReturns a list of SimulScanTemplateRegion objects that represents a collection of template regions\n \tthat are contained within this SimulScanTemplateGroup\n\nReturns:\n\njava.util.List\n\n","url":"/emdk-for-android/3-1/api/simulscan/SimulScanTemplateGroup"},{"title":"SimulScanTemplateRegion","keywords":"simulscantemplateregion class represents region template ##public methods ### getheight **public int getheight** returns height **returns** getwidth getwidth** width getregiontype regiontype getregiontype** type data contained comsymbolemdksimulscanregiontype getx getx** coordinate gety gety** ","summary":"\nThe SimulScanTemplateRegion class represents a particular region in a Template.\n\nPublic Methods\n\n getHeight\n\npublic int getHeight()\n\nReturns the height of this template region\n\nReturns:\n\nint\n\ngetWidth\n\npublic int getWidth()\n\nReturns the width of this template region\n\nReturns:\n\nint\n\n getRegionType\n\npublic RegionType getRegionType()\n\nReturns the type of data contained within this region\n\nReturns:\n\ncom.symbol.emdk.simulscan.RegionType\n\ngetX\n\npublic int getX()\n\nReturns the X coordinate of this template region\n\nReturns:\n\nint\n\n getY\n\npublic int getY()\n\nReturns the Y coordinate of this template region\n\nReturns:\n\nint\n\n","url":"/emdk-for-android/3-1/api/simulscan/SimulScanTemplateRegion"},{"title":"About EMDK For Android","keywords":"## overview emdk android developers comprehensive set tools easily create powerful line business applications enterprise mobile computing devices designed google's sdk development adt includes class libraries sample source code documentation full advantage offer exclusive profile manager technology ide providing gui based tool write fewer lines resulting reduced time effort errors requirements software installed prior * microsoft windows 32-bit 64-bit microsoft&copy java kit jdk v7u45 higher developer v2230-887826 ###android studio google released bundle longer download plugin eclipse integration users access features check [setup guide]//guide/setup details preferred supported work symbol computers running validation mc18 kitkat mc32 os update image v00002 jellybean mc40 v02080520 mc67 v012814 mc92 tc55 v017400 v025202 tc70 v112414 tc75 **emdk v31 1** [audio manager]//mx/audiomgr- manage enhanced audio volume control configurations [battery manager]//mx/batterymgr- modify decommission threshold factory setting [component manager]//mx/componentmgr- state components ethernet port [dhcp manager]//mx/dhcp- dhcp configuration options [keymap manager]//mx/keymappingmgr- remap functionality keys device support api's [personalshopper apis]//api/personalshopper [nfc apis]//api/securenfc guides [personal shopper]//guide/personalshopper [secure nfc]//guide/securenfc v31** [android studio]//guide/setupandroidstudio fully [simulscan apis]//api/simulscan data capture solution extract critical documents [scan pair apis]//api/scanandpair bluetooth barcode scanning [continuous trigger mode]//api/barcode/scannerconfig-readerparams-readerspecific-continuousread/ aim type continuous [name api]//api/core/profilemanager method profilemanager [extended results enum]//api/core/emdkresults-extended_status_code processing profiles [browser manager]//mx/browsermgr- configures web browser behavior [camera manager]//mx/cameramgr- cameras [cellular manager]//mx/cellularmgr- configure cellular radio [devadmin manager]//mx/devadmin- settings [display manager]//mx/displaymgr- screen timeout conserve power [encrypt manager]//mx/encryptmgr- encryption policies [powerkey manager]//mx/powerkeymgr- menu [sd card manager]//mx/sdcardmgr- sd [threat manager]//mx/threatmgr- security threats actively monitors scanners rs507 [barcode api's]//api/barcode/interfaceconfig/ v30 runtime v304 [help update]//guide/abouthelp instructions updating local v30** native [java apis]//api/barcode [emdk profiles]/profile-manager [settings manager]//mx/settingsmgr turn on/off ability invoke reset ui [touch manager]//mx/touchmgr device's touch mode [ui manager]//mx/uimgr clipboard [usb manager]//mx/usbmgr usb [wireless manager]//mx/wirelessmgr enable disable updated [access manager]//mx/accessmgr whitelist [app manager]//mx/appmgr dynamic protected list [clock]//mx/clock ntp server synchronization tutorials api basic]//tutorial/tutbasicscanningapi advanced]//tutorial/tutadvancedscanningapi [invoke ui]//tutorial/tutmxsettingsmanager [specify mx manager]//tutorial/tutmxtouchmanager [configure manager]//tutorial/tutmxuimanager [manage configurations]//tutorial/tutmxusbmanager wireless manager]//tutorial/tutmxwirelessmanager ### emdk's [profile manager]/profile-manager additional giving built open framework innovative feature easy functions bar transaction magnetic stripe reader msr order application install included installation [programmers guide]//tutorial/tutdatacaptureprofile future services default operating system samples programmer's guide projects part import project run [sample guide]//samples/data-capture reference complete walk-through building apis offers capabilities [traditional tutorial]//tutorial/tutbasicscanningapi intent continue [datacapture]//guide/reference/refdatacaptureintent intent]//guide/reference/refbatteryintent previously individual types / profilebarcode androidhardwarecamera magstripe intentmsr wi-fi androidnetwifiwifimanager androidnetwifip2pwifip2pmanager fusion battery mgt symbolrescoord androidosbatterymanager keyboard symbolkeyboard androidinputmethodservicekeyboardkey management gprs apn file mgr javaiofile silent apk white listing display attributes androidviewdisplay androidmediaaudiomanager sensor symbolsensor androidhardwaresensormanager androidbluetoothadapter sql database androiddatabasesqlite nfc androidnfc notifications androidservicenotification printing androidprint xml serialization orgxmlpullv1xmlserializer orgxmlsax interop interface threading javalangthread javaxcrypto message queue androidosmessagequeue network communications javanetsocket --> ","summary":"\nOverview\nThe EMDK for Android provides developers with a comprehensive set of tools to easily create powerful line of business applications for enterprise mobile computing devices and is designed for use with Google's Android SDK and Android Development Tools (ADT).","url":"/emdk-for-android/3-1/guide/about"},{"title":"Using the EMDK Samples with Android Studio","keywords":"##loading sample application choose click **see details** button [img]select_a_samplepng **download** select **android studio project** [img]download_a_samplepng extract downloaded project zip file make note extracted sample's path exists system steps open android previous close clicking **close **file** menu window **open existing **quick start** pane browse projectfrom step #3 add **ok** import process complete load ide ready deploy ##deploying run configuration drop press green play [img]/img/sample/as_import_samples_11png push device usb start main activity [img]profilewifisample1png ","summary":"\nLoading the Sample Application\n\nChoose a sample and click the See Details button.\n    \nNow click the Download button and select Android Studio Project\n    \nExtract the downloaded project zip file and make note of the extracted sample's path.","url":"/emdk-for-android/3-1/guide/emdksamples_androidstudio"},{"title":"Using the EMDK Samples with Eclipse","keywords":"##loading sample application choose click **see details** button [img]select_a_samplepng **download** select **adt eclipse project** [img]download_a_samplepng extract downloaded project zip file make note extracted sample's path exists system steps open ide completely launched **import** **file** menu **android** **existing android code workspace** **next** dialog **browse** browse step #3 check **copy projects checkbox **finish** import process complete load ready deploy ##deploying -> properties [img]/img/setup/image033jpg [img]/img/setup/image035jpg left pane [img]/img/setup/image037jpg emdk target list build targets api version require [img]/img/setup/image039jpg >note >if confirm installed sdk platform apply attach supported device computer usb debug mode runtime package explorer run [img]/img/sample/7jpg [img]/img/sample/8jpg ","summary":"\nLoading the Sample Application\n\nChoose a sample and click the See Details button.\n    \nNow click the Download button and select ADT Eclipse Project\n    \nExtract the downloaded project zip file and make note of the extracted sample's path.","url":"/emdk-for-android/3-1/guide/emdksamples_eclipse"},{"title":"Extended Status Information User Guide","keywords":"##introduction [emdkresults]//api/core/emdkresults class exposes enum extended_status_code inspecting profile processed provide detailed error information occured ### section emdkconfigxml file “emdkconfigxml fixed changed config profiles activated instance feature type ####special test cases **case 01** xml //xml **parameters** java extradata[0] = clk01date=2014-10-10 extradata[1] clk02time=101010 profilename clockprofile-1 profileflag profile_flagset **results** extendedstatuscode statuscode check_xml xmlstring ####case parameters clockprofile-1/clock/clk01 results namevalue_mismatch_extradata failure feature_not_unique_extradata clk01time=101010 feature_not_unique_config case ","summary":"\nIntroduction \nThe EMDKResults class exposes an Enum ( EXTENDEDSTATUSCODE ). Inspecting that Enum after a profile has been processed could provide detailed error information that may have occured while being processed.","url":"/emdk-for-android/3-1/guide/extended_status"},{"title":"Name Value Pair Functionality Programmer's Guide","keywords":"##introduction [profilemanager]//api/core/profilemanager api exposes method processprofile install activate static xml profile located projects assets folder overload submit string array name=value pairs replace installing activating guide explains pair replacement utility create ##string extradata name-value ###method signature java processprofilestring profilename profilemanagerprofile_flag profileflag string[] ###profilename argument entire named section pass parm build top level featuretype emdk_name separated forward slashes **[profilename]/[featuretype]/[feature name]** >for called ‘emdksampleprofile-1’ gave clock feature clock1' passing emdksampleprofile-1/clock/clock1’ process part ###featuretype valid featuretypes activityselection barcode msr intent keystroke ip powermgr persistmgr certmgr appmgr accessmgr wi-fi gprsmgr ###profileflag profilemanagerprofile_flagset ###extradata strings element `=` format bc1decoder_upce0=true feature_name multiple features ##example usage //emdkconfigxml //examplejava = string[2] extradata[0] clk01date=2014-10-10 extradata[1] clk02time=101010 clockprofile-1/clock/clk01 emdkresults result mprofilemanagerprocessprofile clockprofile-1 type clk01 referred ##name function ###createnamevaluepair createnamevaluepair profilemanager class creates compatible comsymbolemdkprofilemanagerprocessprofilestring * profile_flag /** @param emdk param_name parameter param_value @return */ createnamevaluepairstring //this returns //for instance clock1date=2014-10-10 ","summary":"\nIntroduction\n\nThe ProfileManager API exposes a method ( processProfile ) that is used\nto install and activate a static XML profile located in your projects Assets folder.","url":"/emdk-for-android/3-1/guide/name_value_pair"},{"title":"Personal Shopper Programmer's Guide","keywords":"##introduction emdk android developers set tools easily create personal shopper applications mc18 enterprise mobility device >note feature type added release applicable kk present smart cradle interfaces diagnostic interface supported ##examples code snippets illustrate typical usage **get access emdkmanager class features supported** java = emdkmanagergetemdkmanagergetapplicationcontext **create instance class** personalshopper personalshopperthisemdkmanagergetinstancefeature_typepersonalshopper ifpersonalshopper == null { //this } **for interactions ‘cradle’ member variable object** //enable starting personalshoppercradleenable catch cradleexception eprintstacktrace ##cradleinfo **to fetch information firmware version part number serial hw id etc** try{ cradleinfo personalshoppercradlegetcradleinfo }catchcradleexception e{ ##unlock unlock specific duration led blinks** flashing onduration cradleledflashinfo ledflashinfo cradleledflashinfoonduration offduration smoothenable cradleresults result personalshoppercradleunlockunlockduration ifresult cradleresultssuccess{ // successfully unlocked else{ failure unlocking }catch ##flash leds flash leds** stop flashcount call flashled personalshoppercradleflashledflashcount flashed ##cradle config charge rate** boolean fastchargestate personalshoppercradleconfiggetfastchargingstate iffastchargestate true{ fast enabled disabled fastchargeenable true //true enable false disable personalshoppercradleconfigsetfastchargingstatefastchargeenable location – rowwallcolumn** cradlelocation personalshoppercradleconfiggetlocation iflocation=null{ locationrow locationcolumn locationwall read reading information** personalshoppercradleconfignew cradlelocationwallrowcol personalshoppercradleconfigsetlocationlocation **disable methods** personalshoppercradledisable ##diagnostic ‘diagnostic’ parameters battery state health time empty manufacturing date required charging elapsed days replaced reboot diagnosticparamid diagnosticdata personalshopperdiagnosticgetdiagnosticdatadiagnosticparamidall diagnosticconfigavgcurrentshoppingtrip diagnosticexception ","summary":"\nIntroduction\nThe EMDK for Android provides developers with a set of tools to easily create Personal shopper applications for use with the MC18 enterprise mobility device\n\nNOTE: Personal Shopper feature type added in this release is only applicable for the MC18 personal shopper Android KK device.","url":"/emdk-for-android/3-1/guide/personalshopper"},{"title":"Using Profile Manager","keywords":"profile manager exclusive emdk technology offered ide providing gui based development tool write fewer lines code resulting reduced time effort errors ###accessing inside select open android application -> toolbar [img]//images/profiles/image001jpg ###creating click create [img]//images/profiles/image002jpg enter identified [img]//images/profiles/image003jpg features enable selecting item list clicking arrow button >note > data capture delivery feature input send barcode intent remove selected left [img]//images/profiles/image004jpg parameters populate hand side dialog parameter description lower corner [img]//images/profiles/image005jpg complete finish close [img]//images/profiles/image006jpg >the xml generated saved emdkconfigxml projects assets folder ###editing modify edit [img]//images/profiles/image007jpg creating [img]//images/profiles/image008jpg updated ###renaming rename [img]//images/profiles/image009jpg [img]//images/profiles/image010jpg [img]//images/profiles/image011jpg ###copying copy [img]//images/profiles/image012jpg [img]//images/profiles/image013jpg [img]//images/profiles/image014jpg ###deleting delete [img]//images/profiles/image015jpg confirm [img]//images/profiles/image016jpg [img]//images/profiles/image017jpg ##using api profiles bundled access [profile apis]//reference/emdklist applied device processed apis ### multiple ways profilemanager methods `processprofile` essentially `extradata` types * **document** handled document **string** raw string **profileconfig** profileconfig class >warning preferred `profileconfig` option examples present work structured properly usage notes information activating created activated profile_flagset profileflag set valid extradata argument added internal volatile repository note object datacapture java @override public void onopenedemdkmanager emdkmanager { //create config profileconfigobj = //get profilemanageremdkmanagergetinstancefeature_typeprofile emdkresults results profilemanagerprocessprofileprofilename profilemanagerprofile_flagset } ###getting returned store profilemanagerprofile_flagget ###modifying profile_flagget retrieve exists save //enable msr profileconfigobjdatacapturemsrmsr_input_enabled enabled_statetrue //modify modifyresults ## started tutorial overview integrate [here]///tutorial/tutdatacaptureprofile detailed understand instance add happen manually editing instances required cases certificate initialize install order synchronously clock attempt connect wi-fi network processprofile method overload sending content signature // pass form processprofilestring profilename profilemanagerprofile_flag `profilename` `[name profile]` reference entire emdkprofile1 `[profilename]/[featuretype]/[feature friendly parameters]` part called profile1 gave ckest' passing profile1/clock/ckest process `[featuretype]` activityselection keystroke ip powermgr persistmgr certmgr appmgr accessmgr gprsmgr #### structure eclipse project defined change / menu selection options selections `assets` `emdkconfigxml` [img]//images/mxappmanagertutorial//images/emdk_config_file_entriesjpg notice shown passed choose paste warning parm names values presented wizard pay attention fields interest recommended ensure proper formation node match string[] string[1] extradata[0]= + emdkstatus mprofilemanagerprocessprofileemdkprofile1 merged exist appended activity considered setting individual words emdksampleprofile-1/keystroke push specific named portion referenced accomplished fully qualified emdk_name `emdkprofile1` `ck2` making `emdk_name` `emdkprofile1/clock/ck2` mprofilemanagerprocessprofileemdkprofile1/clock/ck2 processprofileis emdkprofile1/clock/ck2 applicable non-datacapture mprofilemanagerprocessprofileemdkprofile1/clock summary scenarios behavior settings profile1/barcode nodes profile1/barcode/bar1 “bar1” profile1/clock xmlclk1 clk2 profile1/clock/clk1 clk1 profile1/clock/clk2 failure ","summary":"\nProfile Manager is an exclusive EMDK technology offered within your IDE, providing a GUI based development tool. This allows you to write fewer lines of code resulting in reduced development time, effort and errors.","url":"/emdk-for-android/3-1/guide/profile-manager"},{"title":"Access Manager Profile Feature Reference","keywords":"## overview access manager feature configure set applications allowed run install device enabled user installed whitelist executed and/or part default operating system disable select single whitelist' >note >it important include executing emdk application lose control configuration change behavior field identify parameter manage profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * operation mode settings full reduced verification verify app signature delete packages signatures add package list submit xml remove >*warning* enabling `whitelist` requires adding `comsymbolemdkemdkservice` white apis work setting features enable based details provided choose current ##system `single whitelist` device's menu pre-selected group options display volume ##application adds level security whitelisting verifying provide exact launch deleting deletes separated comma commycompanymypackage > note tc70 kitkat enterprise reset restrict specific ability mx framework supported devices running versions android **allow names** names **disallow profilemanager compatibility ","summary":"Overview\n\nThe Access Manager feature allows you to configure a set of applications that will be allowed to run and install on the device. When this feature is enabled, the device will only allow user installed applications on the Whitelist to be executed and/or installed (some applications that are part of the default operating system will still be available).","url":"/emdk-for-android/3-1/guide/profiles-old/access"},{"title":"Analytics Manager Profile Feature Reference","keywords":"## overview analytics manager profile feature configure data device collected stored field emdk identify parameter set manage part programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * enable/disable transport method sources collection levels ##group action choosing groups choose level group instance cpu usages high details single interval metrics system collect minutes include memory load ##transport application select logs devices local storage cloud based provider ##data **wwan performance** wwan signal quality outgoing call attempts radio time incoming duration successful calls error rate custom **wlan wlan receive packet delta transmit package byte **battery status** battery ac charge count display status **system information** free physical % total installed **gps current altitude meters sea gps state heading degrees location lat/long position dilution precision **cpu usage** process low medium compatibility ","summary":"\nOverview\n\nThe Analytics Manager profile feature allows you to configure what data about a device should be collected, and where the collected data should be stored.","url":"/emdk-for-android/3-1/guide/profiles-old/analytics"},{"title":"App Manager Profile Feature Reference","keywords":"## overview app manager feature install upgrade remove enable disable applications device change current application launcher clear recent list field emdk identify parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * uninstall default add protected info exists receive error apk path full reside /storage/sdcard1/heraldapk package provide android commycompanymypackage upgrade/downgrade disabling ability launch apps opened long press menu button symbol recently running device's including force closed setup run multi-user mode user logs permitted users application's removes dialog shows detailed perform actions stop enable/disable data cache access > note supported devices kitkat versions tc70 compatibility ","summary":"\nOverview\n\nThe App Manager feature allows you to install, upgrade, remove, enable, disable applications from the device. It also allows you to change the current application launcher, clear recent app list and much more.","url":"/emdk-for-android/3-1/guide/profiles-old/app"},{"title":"Audio Volume UI Manager Profile Feature Reference","keywords":"## overview audio manager feature manage enhanced volume control configurations field emdk identify parameter set part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * mute/vibrate state current active ui action select mute device vibrate **mute** turn audible sounds **vibrate** **unmute** perform **set current** switch adjust level make setting effect immediately **adjust preset profile** factorypreset ### add modify settings customize **not** provide values fields fill **name **ui label stream_music** music stream icon url image **control parameters visible user **minimum maximum speaker mode** levels mode order &quotmin max preset&quot separated comma positive integers &quot10 5&quot receiver wired headset bluetooth stream_ring** ring stream_notification** notification stream_system** system stream_alarm** alarm stream_voicecall** voicecall decode beep virtual scale** scale stream_vvs** remove compatibility ","summary":"\nOverview\n\nThe Audio Manager feature allows you to manage enhanced audio volume control configurations\n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/audio"},{"title":"Battery Manager Profile Feature Reference","keywords":"## overview zebra's device batteries store information internal memory instance number charge cycles battery accumulated android devices expose settings menu displays configured decommission threshold maximum accumulate flagged replaced manager developer modify factory setting field emdk identify feature parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard main functionality * usage decommissioned percentage ##smart zebra smart integer ranging change applicable ##gifted gifted health compatibility ","summary":"\nOverview\nZebra's Device batteries store information in their internal memory, for instance, the number of charge cycles a battery has accumulated.  Zebra's Android devices expose this through a battery settings menu that displays the accumulated information.","url":"/emdk-for-android/3-1/guide/profiles-old/battery"},{"title":"Browser Manager Profile Feature Reference","keywords":"## overview browser manager feature application control web device set homepage field emdk identify parameter manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * default turn on/off remember password save form data entering url limit string characters android recall values enable/disable browsers save/recall fields compatibility ","summary":"\nOverview\n\nThe Browser Manager feature allows your application to control the web browser on the device. For example you can set the browser homepage.","url":"/emdk-for-android/3-1/guide/profiles-old/browser"},{"title":"Camera Manager Profile Feature Reference","keywords":"## overview camera manager feature application control access cameras device disable user field emdk identify parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * enable/disable front rear option enable compatibility ","summary":"\nOverview\n\nThe Camera Manager feature allows your application to control access to the cameras in the device. For example you can disable the user from using all cameras on the device.","url":"/emdk-for-android/3-1/guide/profiles-old/camera"},{"title":"Cellular Manager Profile Feature Reference","keywords":"## overview cellular manager feature configure options radio device field emdk identify parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * data roaming state on/off enabled/disabled background control devices ability independently enabled disabled application usage equipped compatibility ","summary":"\nOverview\n\nThe Cellular Manager feature allows you to configure options of the  cellular radio on your device. \n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/cellular"},{"title":"Certificate Manager Profile Feature Reference","keywords":"## overview cert manager feature application install uninstall certificates initialize android key store digital identify device variety purposes including vpn wi-fi network access authentication servers apps email chrome field emdk parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * certificate keystore adjust system clock create replacing previously existing installing uninstalling exist choose perform action separate include times ### password required alias provide namealias uniquely replaced dynamic dynamically generated supported #### handling issues due current limitations eap-tls scenario override assigned client private installed determine actual examine installation matter generally manually determining capture recommended cleared performing steps settings/security/clear credentials navigate settings/wi-fi/'+' add scroll security tap select 8021x eap method tls note drop box unspecified listed wificonfig configure ###certificate type ca *pem *pfx *p12 *pkcs12 >note time keys pfxp12pkcs12 reference file exists data path resides decrypt trusted searched record found removes compatibility ","summary":"\nOverview\n\nThe Cert Manager feature allows your application to install or uninstall certificates and initialize the Android key store. You can use digital certificates to identify your device for a variety of purposes, including VPN or Wi-Fi network access as well as authentication to servers by apps such as Email or Chrome.","url":"/emdk-for-android/3-1/guide/profiles-old/cert"},{"title":"Clock Manager Profile Feature Reference","keywords":"## overview clock programmatic set date time account zone nuances including daylight saving expects values entered normalized utc gmt words parameters equivalent local field emdk identify feature parameter manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information ### main functionality * enable auto disable ntp server address sync interval autotime automatically timezone synced ip syncinterval provide device note supported android gmt-5 olson america/new_york enabled length format yyyy-mm-dd 2014-12-31 universal coordinates ltc hhmmss usage notes ###example #1 settings 15-jan-2010 215pm york usa 15-jan eastern standard meaning gmt-0400 = 2010-01-15 615pm #2 11-jul-2014 255am bangalore india gmt+0530 10-jul-2010 2010-07-10 925pm change case converts properly offset applied compatibility ","summary":"\nOverview\n\nClock allows for a programmatic way to set the date and time. To account for time zone nuances including daylight saving time, Clock expects the values for date and time to be entered as normalized values to UTC (GMT) time.","url":"/emdk-for-android/3-1/guide/profiles-old/clock"},{"title":"Component Manager Profile Feature Reference","keywords":"## overview component manager feature manage state components devices ethernet port field emdk identify parameter set part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * ethernetusage ethernetstate enable disable usage **options** enabled turn compatibility ","summary":"\nOverview\n\nThe Component Manager feature allows you to manage the state of Components, such as a devices Ethernet Port.\n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/component"},{"title":"Device Admin Profile Feature Reference","keywords":"## overview device admin feature application manage configuration settings field emdk identify parameter set part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * screen-lock timeout interval allow/disallow installs unknown sources turn on/off administrator > note actual policy effective restrictive result requested active apps amount time idle screen locked app control installation applications **install methods considered unknown** install adb download locations google play receive email apis file browser packages obtained ways sd card usb ums wired data connection android api's added list add remove provide package specific class state restrict installed launched compatibility ","summary":"\nOverview\n\nThe Device Admin feature allows your application to manage configuration settings on the device.\n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/devadmin"},{"title":"DHCP Option Manager Profile Feature Reference","keywords":"## overview dhcp option manager feature control configuration options field emdk identify parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * code ##option **send host name** client send >note hostname identifies network user class** class server select address pool assign parameters **request broadcast address** ntp server** tftp boot file domain search** compatibility ","summary":"\nOverview\n\nThe DHCP Option Manager feature allows you to control various DHCP configuration options.\n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/dhcp"},{"title":"Display Manager Profile Feature Reference","keywords":"## overview display manager feature application control screen timeout conserve power field emdk identify parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * interval ##screen seconds device inactive turns compatibility ","summary":"\nOverview\n\nThe Display Manager feature allows your application to control the screen timeout value to conserve power.\n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/display"},{"title":"Encrypt Manager Profile Feature Reference","keywords":"## overview encrypt manager developer set encryption policies device mx xml create efs storing application data field emdk identify feature parameter manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * install/revoke key create/delete encrypted file system sd card format ##install install revoke named resides store installing optional provided hex string length bytes random generated fail apply devices successfully efs's mounted unmounted mount point ### provide names separated commas > note revoking ##create storage type sdcard internal size stated mb 1mb exceed 4096mb process creating takes time access denied creation **create efs** encyrpt location internal/sdcard select created mb1-4095 >note conditions** duplicate coexist supporting systems fs inserted space exist invalid parm values big small integer number unmatched **delete delete operation ###encrypt **encrypt sdcard** therefor `existing lost` >the encrypting previously re-formated re-encrypted result existing lost **creation ums ###format formating formated **un-encrypted** compatibility ","summary":"\nOverview\n\nThe Encrypt Manager allows the developer to set encryption policies on a device through MX XML. For example a developer can create an EFS for storing application data.","url":"/emdk-for-android/3-1/guide/profiles-old/encrypt"},{"title":"GPRS Manager Profile Feature Reference","keywords":"## overview gprs feature add remove apns device field emdk identify parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * named apn default accesses point user password action setting configuration add/replace existing carrier options att t-mobile custom >note option filed required provide settings deleting adding/replacing unique replace exists check box marked delete make preferred access internet3voicestreamcom compatibility ","summary":"\nOverview\n\nThe GPRS feature allows you to add or remove APNs to your device. \n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/gprs"},{"title":"Key Mapping Manager Profile Feature Reference","keywords":"## overview key mapping manager feature modify behavior exhibit pressed field emdk identify parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * default mappings remap keys mapped specific instance letter lowercase modified **remap key** function **default mappings** reset original tables >note adding custom map applying insure exist applied ### **key table** list behaviors **base** table modifier **not** devices support supported **blue blue remapping device fail submitted **modifiable tables** base orange grey shift control ###send key-code select key-codes listed modifying choose state send **shift state** **forced on** physical disregard capital enable clicking **andvanced** checkbox trigger act configure options ###launch application start enter appears applications title bar settings > apps differs **send intent** supply pakage class activity launch named case app found launched intent [Intent](https://developer.android.com/reference/android/content/Intent.html). **intent options** released type** explicit directly broadcast implicit broadcasted registered reciver receive **action** action **category** category **package** package commycompany **class** vor fully qualified commycompanymyactivity **data uri** data uri valid format **mime mime type **extra name** extra attached value** string teh **add event** event added **include additional flags** flag bits hex ###suppress disable selected suppressed **base selecting ###reset pressing ##modifiable **0-9** **a-z** **f1** **f2** **f3** **f4** **f5** **f6** **f7** **f8** **f9** **f10** **f11** **f12** **enter** **up** **down** **left** **right** **esc** **backspace** **dot** period **star** **pound** **space** **return** **clr** clear **field_exit** **alt** **ctrl** **shift** **blue** **orange** **green** green dot **red** red **volumeup** volume **volumedown** **scan** **grip_trigger** **left_trigger_1** button l1 **left_trigger_2** l2 **right_trigger_1** r1 **headset_hook** headset **back** **home** **menu** **search** **keylight** keyboard backlight **lamp** display ##key-codes **tab** **escape** **delete** **numpad 0** 1** 2** 3** 4** 5** 6** 7** 8** 9** divide** multiply** subtract** add** period** comma** enter** equals** left parenthesis** **dpad up** down** left** right** center** **move home** end** **page **insert** **forward delete** **grey** **control** **left shift** **right alt** control** **meta **caps lock** **num **scroll **sysrq** **break** **function** **plus** **minus** **equals** bracket** **grave** **slash** **backslash** **semicolon** **apostrophe** **comma** **period** **at** **forward** **calculator** **explorer** **envelope** **bookmark** **music** **call** **camera** **contacts** **calendar** **volume mute** **brightness **power** **sleep** **wakeup** **headset** **push-to-talk** **notification** **camera focus** **media play/pause** stop** next** previous** rewind** fast-forward** play** pause** close** eject** record** **button l1** r1** l2** r2** a** b** c** x** y** z** thumb button** **start **select **mode **gamepad 10** 11** 12** 13** 14** 15** 16** **zenkaku/hankaku** **eisu** **muhenkan** **henkan** **katakana/hiragana** **yen** **ro** **kana** **switch charset** **picture symbols** compatibility ","summary":"\nOverview\n\nThe Key Mapping Manager feature allows you to modify what behavior a given key will exhibit when pressed.\n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/keymap"},{"title":"Persistence Manager Profile Feature Reference","keywords":"## overview persist manager create remove persistent profile features parameters survive automatically applied enterprise reset' >note >data capture persisted field emdk identify feature parameter set manage part programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * configure dealt device settings reset add enable disable xml error make current combination version order reference removal list generic/absolute clarify name/scenario staging-specific/relative provide optional specifies errors occur match previously setting removed supply details specific action performed usage notes ###using persistsmanager tc55 performing factoryreset issue limited installation runtime package creates enterprise/usr/persist/ folder required persistmanager function factory installing deleted longer work problem fixed reinstalling compatibility ","summary":"\nOverview\n\nThe Persist Manager is used to create and remove persistent profile features. These features and their parameters will survive and be automatically applied after a 'Enterprise Reset'.","url":"/emdk-for-android/3-1/guide/profiles-old/persistence"},{"title":"Power Manager Profile Feature Reference","keywords":"## overview feature put device sleep mode re-power perform os update action performed configuration set field emdk identify parameter manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types [emdk profiles overview]/usingwizard information main functionality * reboot enterprise reset factory wipe > note supported devices running kitkat versions android tc70 full initiate provided zip file path resides exist tc55 package external sd card attempt internal purpose fail compatibility ","summary":"\n\nOverview\n\nThis feature allows you to put the device into Sleep mode, re-power or perform an OS Update. The action will be performed when the configuration is set.","url":"/emdk-for-android/3-1/guide/profiles-old/power"},{"title":"PowerKey Manager Profile Feature Reference","keywords":"## overview powerkey manager feature application control options power menu device field emdk identify parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * show/hide airplane mode option touch panel safe enable/disable auto screen lock powered key > displayed holding button ##airplane visibility ##touch ##safe ##auto settings state appears long pressed compatibility ","summary":"\n\nOverview\n\nThe PowerKey Manager feature allows your application to control which options appear on the power menu on the device.\n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/powerkey"},{"title":"IP Output Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]/profilebarcode / [msr]/profilemsr [keystroke]/profilekeystroke[intent]/profileintent[ip]/profileip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically [profilemanager]///api/core/profilemanager api multiple update [emdk profiles overview]/usingwizard information enabled enables disables remote wedge enable disable default ipwedge protocol select options enter number configuration disabled modification add characters beginning end transfer foreground disabling prevents actual transmitted strings present hex hexadecimal format tab key append character processed ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/3-1/guide/profiles-old/profileIP"},{"title":"Activity Selection Profile Feature Reference","keywords":"## overview creating profile [barcode]/profilebarcode [msr]/profilemsr data capture configure activity selector automate process activating deactivating automated management complex applications field emdk identify feature parameter set manage part programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information ##activity * list active names formal package definition application comsymbolprofiledatacapturesample1 activities selected mainactivity ","summary":"\nOverview\n\nWhen creating a profile for Barcode or MSR data capture you can configure an Activity Selector to automate the process of activating and deactivating the profile.","url":"/emdk-for-android/3-1/guide/profiles-old/profileactivity"},{"title":"Barcode Profile Feature Reference","keywords":"## overview order barcode data application create profile features selected * [keystroke]/profilekeystroke[intent]/profileintent[ip]/profileip output `barcode` feature manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically [profilemanager]///api/core/profilemanager api multiple update [emdk profiles overview]/usingwizard information enabled enables disables default selection configures scanning device capture auto determines scan module scan/msr installed mc40 2d performed rear-facing decoders disabled performance disable unnecessary commonly shown asterisk supported australian postal aztec canadian chinese codabar* 39* 128* composite ab datamatrix* discrete dutch ean-8* ean-13* gs1 databar* databar expanded* limited han xin japanese korean interleaved matrix maxicode* mail mark micropdf microqr msi pdf417* qr code* signature tlc trioptic uk upc-a* upc-e0* upc-e1 us4state fics uspostnet usplanet webcode upca report check digit character symbol verify integrity preamble characters upc consisting country system options transmitting transmit sys char usa select match upce0 convert enable suppressed decoded upc-a format transmission conversion affected programming selections code128 length1 decode lengths length2 redundancy sets reader read accepting plain flag gs1-128 isbt-128 subtype isbt128 concatenation mode concatenating pairs isbt concat concatenate codes encountered perform single symbols decodes concatenates immediately present number times confirm additional table specification includes lists found concatenated security level offers levels increasing decreasing quality inverse relationship aggressiveness choose setting operate aggressive state providing sufficient decoding in-spec eliminates misdecodes fails eliminate occur advised selecting extreme measure mis-decoding severely spec significantly impairs needed improve reduced quiet zone ignore fnc4 code39 complies algorithm digital include modulo full ascii variant encode code32 italian pharmaceutical industry converting adding 2of5 uss uniform opcc optical product council itf-14 ean13 14-character ean-13 leading valid i2of5 ##gs1 ucc link 1d component transmitted detected linked components discriminate portion transmits postnet planet codabar clsi editing strip start stop insert space tenth requires notis length mandatory verified optional digits scheme algorithms verification mod-11-10 mod mod-10-10 code93 code11 selects ##matrix upce1 allowable variable range specific ean params configuration apply decoder upc/ean higher lower speed fastest diminish prone misdecoding poorly printed impair supplemental2 supplemental5 supplemental supplementals presented ignores supplements smart returns main block belong starts prefixes searches image aggressively failed returned 378-379 auto-discriminate starting 978-979 414-419-434-439 retry count auto-discriminating values inclusive note considered random weight bookland coupon successfully correct modes extend add zeros ean-8 make compatible formats isbn-10 isbn-13 converts work symbologies marginless barcodes beam timer maximum amount time remains ms increments stay indefinitely adaptive enable/disable width narrow normal wide power low optimized high mobile phone display defines finer ds457 ssi triggers presentation triggered linear accurate based flags short long thrice picklist directly cross-hair/reticle + pattern applications view session targeted centered center conjunction static dynamic reticle viewfinder modules unsupported issue error cross-hair aim type trigger continuous timeout suppress interval steps illumination depending ambient light conditions lcd enhances displays cellphones degradation observed aiming crosshair blink delay enter seconds minute minutes brightness user positive poor effort red screen helps id feedback identifies scanned standards defined ringtones fully tones longer truncated tone recommendation test operation deployment customer site volume ringer music media alarms notification audio sound good stored application’s private cache asset avoid access violation meant purpose shared public directories music/ ringtones/ “external storage” haptic vibrate bt disconnect exit bluetooth idle opened disconnected duration inactivity led runs true pairing utility method called engine controls engines refer reference documentation [intent]/profileintent [keystroke]/profilekeystroke [ip]/profileip ","summary":"\nOverview\nIn order to get Barcode data in your application, you must create a profile with two profile features selected:\n\nBarcode\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/3-1/guide/profiles-old/profilebarcode"},{"title":"Intent Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]/profilebarcode / [msr]/profilemsr [keystroke]/profilekeystroke[intent]/profileintent[ip]/profileip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols core components activities services broadcast receivers activated bundle information object describing desired action acted category component perform pertinent instructions locates respond launches instance needed passes advertise capabilities kinds filters system learn handle manifest &ltintent-filter&gt elements number capability xml configuration java comsymbolemdksamplerecvr androidintentcategorydefault emdk form implicit refer developer web site https://developer.android.com. field identify parameter set manage part programmatically [profilemanager]///api/core/profilemanager api multiple update [emdk profiles overview]/usingwizard enabled enables disables enter required filter match delivery select method delivered startactivity startservice > note scanning applications user decode *current* activity necessarily displayed case marked ‘singletop’ androidmanifestxml file defined singletop copy disabled modification add characters beginning end transfer foreground disabling prevents actual transmitted strings present default hex hexadecimal format tab key append character processed return related intent's retrieved intentgetstringtextra intentgetserializableextra calls string tags `commotorolasolutionsemdkdatawedgelabel_type` label type `commotorolasolutionsemdkdatawedgedata_string` concatenated codes single tracks `commotorolasolutionsemdkdatawedgedecode_data` returned list byte arrays cases array symbologies support concatenation codabar code128 micropdf decoded stored clients passing index `commotorolasolutionsemdkdatawedgemsr_data` start/end sentinels track separators included configured `commotorolasolutionsemdkdatawedgemsr_track1` `commotorolasolutionsemdkdatawedgemsr_track2` `commotorolasolutionsemdkdatawedgemsr_track3` `commotorolasolutionsemdkdatawedgemsr_track1_status` status integer successful `commotorolasolutionsemdkdatawedgemsr_track2_status` `commotorolasolutionsemdkdatawedgemsr_track3_status` `commotorolasolutionsemdkdatawedgemsr_track1_encrypted` encrypted `commotorolasolutionsemdkdatawedgemsr_track2_encrypted` `commotorolasolutionsemdkdatawedgemsr_track3_encrypted` `commotorolasolutionsemdkdatawedgemsr_track1_hashed` hashed `commotorolasolutionsemdkdatawedgemsr_track2_hashed` `commotorolasolutionsemdkdatawedgemsr_track3_hashed` ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/3-1/guide/profiles-old/profileintent"},{"title":"KeyStroke Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]/profilebarcode / [msr]/profilemsr [keystroke]/profilekeystroke[intent]/profileintent[ip]/profileip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically [profilemanager]///api/core/profilemanager api multiple update [emdk profiles overview]/usingwizard information enabled enables disables action key character decoding special characters embedded disabled default tab \\t processed line feed carriage return configuration modification add beginning end transfer foreground disabling prevents actual transmitted strings present hex hexadecimal format append enter ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/3-1/guide/profiles-old/profilekeystroke"},{"title":"MSR Profile Feature Reference","keywords":"## overview order magstripe msr data application create profile features selected * [keystroke]/profilekeystroke[intent]/profileintent[ip]/profileip output `msr` feature manager responsible reading device's integrated mag-stripe reader exists `intent` `keystroke` `ip` define barcode scanner handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols settings reference field emdk identify parameter set manage part programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information enabled enables disables default disabled refer documentation [intent]/profileintent [keystroke]/profilekeystroke [ip]/profileip ","summary":"\nOverview\nIn order to get MagStripe (MSR) data in your application, you must create a profile with two profile features selected:\n\nMSR\nKeystroke,Intent,IP (Output)\n\nThe MSR feature in the Profile Manager is responsible for reading data from the device's integrated mag-stripe reader (if one such exists).","url":"/emdk-for-android/3-1/guide/profiles-old/profilemsr"},{"title":"SDCard Manager Profile Feature Reference","keywords":"## overview sdcard manager application manage devices sd card field emdk identify feature parameter set part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * enable/disable ##enable/disable enable disable external sdcards compatibility ","summary":"\n\nOverview\n\nThe SdCard Manager allows your application to manage the use of the devices SD card.\n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/sdcard"},{"title":"Settings Manager Profile Feature Reference","keywords":"## overview settings manager feature manage ui configuration providing ability invoke enterprise reset application device field emdk identify parameter set part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * enable/disable perform menu turn wi-fi install apps unknown sources airplane mode ##enterprise enable disable access `enterprise reset` option ##wi-fi `wi-fi` ##unknown `install sources` ##airplane `airplane mode` ##access applications `applications` compatibility ","summary":"\nOverview\n\nSettings Manager feature allows you to manage settings UI configuration by providing the ability to invoke Enterprise Reset in Settings application of your device.","url":"/emdk-for-android/3-1/guide/profiles-old/settings"},{"title":"Threat Manager Profile Feature Reference","keywords":"## overview threat manager feature application control security threats device actively monitors respond field emdk identify parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * enable detection disable perform counter measures detected ##enable/disable ##detectable **max password attempts** user login wrong **mdm client removal** mdm removed package provide observed system app **externally detected** intent received signifies custom **exchange active sync command** syncing exchange event occurred **device rooted** rooted ##counter **format sdcard** measure format external sdcard existing data card lost **factory reset** force factory reset returning original configuration **wipe secure storage keys** remove keys **lock device** lock requiring unlock procedure configured **uninstall application** silently uninstall **unsolicited alert** send explicit alert message class notify **signal occurrence threat** select externally signaled stating compatibility ","summary":"\nOverview\n\nThe Threat Manager feature allows your application to control what security threats a device actively monitors for and how to respond.\n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/threat"},{"title":"Touch Manager Profile Feature Reference","keywords":"## overview touch manager feature set mode device order interact user interface field emdk identify parameter manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * configure screen stylus finger input glove touchaction change existing settings compatibility ","summary":"\n\nOverview\n\nTouch Manager feature allows you set the Touch Mode on your device in order to interact with User Interface.\n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/touch"},{"title":"UI Manager Profile Feature Reference","keywords":"## overview ui manager feature manage configurations parameters field emdk identify parameter set part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * enable/disable clipboard clear auto correct home key bluetooth paring popup current local default input method application enable disable devices ### check box marked leave unchanged ##auto ##home ##bluetooth ##set values canada french china chines english france german germany italian italy japan japanese korea korean prc simplified taiwan traditional uk chinese user defined compatibility ","summary":"\nOverview\n\nThe UI Manager feature allows you to manage UI configurations using its UI Manager parameters. \n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/ui"},{"title":"USB Manager Profile Feature Reference","keywords":"## overview usb manager feature manage configurations device field emdk identify parameter set part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * enable/disable module usage external storage adb android debug bridge access ability usm mass mode mtp media transfer protocol ptp picture enabling modules barcode scanner disabling disable attached data flash drive otg cable prevent workstation connections devices protocols restrict mount disables unmounted enabled blocking compatibility ","summary":"\nOverview\n\nThe USB Manager feature allows you to manage USB configurations of your device.\n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/usb"},{"title":"Using EMDK for Android Profiles","keywords":"##emdk profiles overview emdk android easily access capabilities device application grouped referred profile broken features feature parameters provide automatic enablement configuration options control behavior data capture accesses devices bar code scanner magstripe reader ###data configure captured transmitted typically components make work * [activity selector]//profiles/profileactivity automatically activates based activity combinations input sources choose [barcode]//profiles/profilebarcode [msr]//profiles/profilemsr source output [keystroke]//profiles/profilekeystroke [intent]//profiles/profileintent [ip]//profiles/profileip ###access manager [access manager]//profiles/access set applications allowed run enabled whilelist executed ###analytics [analytics manager]//profiles/analytics collected stored ###app [app manager]//profiles/app install upgrade remove enable disable change current launcher clear recent app list ###audio [audio manager]//profiles/audio manage enhanced audio volume configurations mute/vibrate state active ###battery zebra's batteries store information internal memory instance number charge cycles battery accumulated [battery manager]//profiles/battery developer modify decommission threshold factory setting ###browser [browser manager]//profiles/browser web browser homepage ###camera [camera manager]//profiles/camera cameras user ###cellular [cellular manager]//profiles/cellular cellular radio turn roaming ###cert [cert manager]//profiles/cert uninstall certificates identify variety purposes including vpn wi-fi network authentication servers apps email chrome ###clock [clock manager]//profiles/clock date time timezone ###component [component manager]//profiles/component device's ethernet port ###device admin [device manager]//profiles/devadmin settings ###dhcp [dhcp manager]//profiles/dhcp dhcp ###display [display manager]//profiles/display screen timeout conserve power ###encrypt [encrypt manager]//profiles/encrypt encryption policies mx xml create efs storing ###gprs [gprs manager]//profiles/gprs gprs apn carrier's ###keymap [keymap manager]//profiles/keymap remap usage hardware keys ###persistence [persistence manager]//profiles/persistence persistent reset ###power key [powerkey manager]//profiles/powerkey menu [power manager]//profiles/power perform management operations putting sleep mode re-power os update enterprise full wipe action performed ###sd card [sd manager]//profiles/sdcard sd ###settings [settings manager]//profiles/settings ui providing ability invoke ###threat [threat manager]//profiles/threat security threats actively monitors respond ###touch [touch manager]//profiles/touch touch order interact interface ###ui [ui manager]//profiles/ui ###usb [usb manager]//profiles/usb usb ###wi-fi [wi-fi]//profiles/wifi wells band channel selection 80211d / country ###wireless [wireless manager]//profiles/wireless wireless bluetooth nfc > wifi configured ###xml [xml manager]//profiles/xml processing modes ##using exclusive technology offered ide gui development tool write fewer lines resulting reduced effort errors ###accessing inside select open -> toolbar [img]///images/profiles/image001jpg ###creating click [img]///images/profiles/image002jpg enter identified [img]///images/profiles/image003jpg selecting item clicking arrow button >note delivery send barcode intent selected left [img]///images/profiles/image004jpg populate hand side dialog parameter description lower corner [img]///images/profiles/image005jpg complete finish close [img]///images/profiles/image006jpg >the generated saved emdkconfigxml projects assets folder ###editing edit [img]///images/profiles/image007jpg creating [img]///images/profiles/image008jpg updated ###renaming rename [img]///images/profiles/image009jpg [img]///images/profiles/image010jpg [img]///images/profiles/image011jpg ###copying copy [img]///images/profiles/image012jpg [img]///images/profiles/image013jpg [img]///images/profiles/image014jpg ###deleting delete [img]///images/profiles/image015jpg confirm [img]///images/profiles/image016jpg [img]///images/profiles/image017jpg api bundled [profile apis]//reference/emdklist applied processed apis ### multiple ways profilemanager methods `processprofile` essentially `extradata` types **document** handled document **string** raw string **profileconfig** profileconfig class >warning preferred `profileconfig` option examples present structured properly notes activating created activated profile_flagset profileflag valid extradata argument added volatile repository note object datacapture java @override public void onopenedemdkmanager emdkmanager { //create config profileconfigobj = //get profilemanageremdkmanagergetinstancefeature_typeprofile emdkresults results profilemanagerprocessprofileprofilename profilemanagerprofile_flagset } ###getting returned profilemanagerprofile_flagget ###modifying profile_flagget retrieve exists save //enable msr profileconfigobjdatacapturemsrmsr_input_enabled enabled_statetrue //modify modifyresults ## started tutorial integrate [here]///tutorial/tutdatacaptureprofile detailed understand add happen manually editing instances required cases certificate initialize synchronously clock attempt connect processprofile method overload sending content signature // pass form processprofilestring profilename profilemanagerprofile_flag `profilename` `[name profile]` reference entire emdkprofile1 `[profilename]/[featuretype]/[feature friendly parameters]` part called profile1 gave ckest' passing profile1/clock/ckest process `[featuretype]` activityselection keystroke ip powermgr persistmgr certmgr appmgr accessmgr gprsmgr #### structure eclipse project defined selections `assets` `emdkconfigxml` [img]///images/mxappmanagertutorial///images/emdk_config_file_entriesjpg notice shown passed paste warning parm names values presented wizard pay attention fields interest recommended ensure proper formation node match string[] string[1] extradata[0]= + emdkstatus mprofilemanagerprocessprofileemdkprofile1 merged exist appended considered individual words emdksampleprofile-1/keystroke push specific named portion referenced accomplished fully qualified emdk_name `emdkprofile1` `ck2` making `emdk_name` `emdkprofile1/clock/ck2` mprofilemanagerprocessprofileemdkprofile1/clock/ck2 processprofileis emdkprofile1/clock/ck2 applicable non-datacapture mprofilemanagerprocessprofileemdkprofile1/clock summary scenarios profile1/barcode nodes profile1/barcode/bar1 “bar1” profile1/clock xmlclk1 clk2 profile1/clock/clk1 clk1 profile1/clock/clk2 failure ","summary":"EMDK Profiles Overview\n\nThe EMDK for Android allows you to easily access various capabilities of your Android device from within an Android application.","url":"/emdk-for-android/3-1/guide/profiles-old/usingwizard"},{"title":"Wi-Fi Manager Profile Feature Reference","keywords":"## overview wi-fi feature manage devices settings network profiles connecting remembering networks >note order applied enabled wifi enable profile error attempting apply device's field emdk identify parameter set part programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk overview]/usingwizard information main functionality * disable sleep plugged notifications user auto country selection manually select rf band device clock ap access point time hf sr hyper fast secure roam hr cckm cisco centralized key management ft transition ftric resource request okc opportunistic caching preauth power saving mode savings active maximum advanced logging fips compliance restricted wlan ui add remove connect disconnect existing radio change configured disabled auto/manual leaving option unchecked determined router setting checkbox drop-down regulatory 80211d usa choose specifies bands unchanged 24ghz 50ghz automatically channel channels string valid comma separated range dash -' 17-10 36-60 policy state suspends leave powered connected a/c battery notification notify open action provided based ssid initiate connection parameters adding acted choosing security personal psk wep enterprise 8021x eap wpa wpa2 wpa/wpa2 supported authentication eap-tls eap-fast-gtc eap-fast-mschapv2 eap-ttls-pap eap-ttls-mschap eap-ttls-mschapv2 leap peap-mschapv2 peap-gtc dhcp selected static ip address gateway subnet mask dns server proxy connections supplied host port bypass encryption details type values tkip aes-ccmp aes-ccmp/tkip wep-40 wep-104 passphrase hex protect enables web index `wep[0]` specific modes identity join certificate alias verify optional client mandatory anonymous password encrypt ### due current limitations manager scenario override assigned private installed android keystore determine actual examine installation matter generally #### determining capture recommended store cleared performing steps settings->security->clear credentials install navigate settings->wi-fi->'+' scroll tap method tls note drop box unspecified listed wificonfig configure options > >* pmkid =1 ft=1 =0 important default save result failure autotimeconfig- autotimeconfig updates timestamp symbol beacon hfsr symbol's algorithm / ccx 80211r okc- work preauth- pre-authentication powersave start stop data motion 140-2 level read-only compatibility ","summary":"\nOverview\n\nThe Wi-Fi feature allows you to manage your devices Wi-Fi settings as well as manage the network profiles to be used for connecting and remembering networks.","url":"/emdk-for-android/3-1/guide/profiles-old/wifi"},{"title":"Wireless Manager Profile Feature Reference","keywords":"## overview wireless manager configure configurations device device's bluetooth field emdk identify feature parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * enable/disable turn on/off nfc gps wwan wan application enable disable usage ### devices radio enabled turning compatibility ","summary":"\nOverview\n\nThe Wireless Manager allows you to configure wireless configurations on your device. (Ex. Configure device's Bluetooth)  \n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/wireless"},{"title":"XML Manager Profile Feature Reference","keywords":"## overview xml manager feature processing modes field emdk identify parameter set manage part profile programmatically [profilemanager]///api/core/profilemanager api multiple types update [emdk profiles overview]/usingwizard information main functionality * mode execute end error stop skip catch remainder compatibility ","summary":"\nOverview\n\nThe XML Manager feature allows you to specify various XML processing modes to be used.  \n\n Name\nThe name field is used by the EMDK to identify this particular feature parameter set when you want to manage just part of the profile programmatically using the EMDK ProfileManager API.","url":"/emdk-for-android/3-1/guide/profiles-old/xml"},{"title":"Battery Intent API Reference","keywords":"## overview purpose document describe functionality battery intent api interface intended audience android developers requirements knowledge programming familiarity mechanism assumed * versions devices symbol et1 rev mc40 features extra information retrieved standard [android Intent](https://developer.android.com/training/monitoring-device-state/battery-monitoring.html). setting receive consumer data returned application includes backup voltage manufacture date serial number part unique id rated capacity charge cycle count #### function prototype java mintent_receiver = intent_receiver mintentfilter intentfilter mintentfilteraddactionintentaction_battery_changed registerreceivermintent_receivermintentfilter parameters reference manager [API](https://developer.android.com/reference/android/os/BatteryManager.html). return values addition returns default found [here](https://developer.android.com/reference/android/os/BatteryManager.html), additional **bkvoltage** **mfd** **serialnumber** **partnumber** **uniqueid** **ratedcapacity** **cycle** public void onreceivecontext context { battery_state_changed_intentequalsintentgetaction int bkvoltage intentgetextrasgetintbkvoltage string mfd intentgetextrasgetstringmfd serialnumber intentgetextrasgetstringserialnumber partnumber intentgetextrasgetstringpartnumber uniqueid intentgetextrasgetstringuniqueid ratedcapacity intentgetextrasgetintratedcapacity intentgetextrasgetintcycle } ","summary":"\nOverview\nThe purpose of this document is to describe the functionality of the Battery Intent API Interface. Its intended audience are Android developers.","url":"/emdk-for-android/3-1/guide/reference/refbatteryintent"},{"title":"Data Capture Intent API Reference","keywords":"## overview purpose document describe functionality data capture api intended audience android developers application programming interface number specific commands control aspects devices requirements knowledge familiarity intent mechanism assumed datawedge read section integrator guide device * versions et1 rev mc40 tc55 features list high-level functions start/stop/toggle soft scan trigger disable/enable scanner plug-in active profile provide scanners make un-associated user created default reset back profile0 switch current profiles datacapture apis collecting formatting outputs scanned required format foreground configured process set captured differently based refer information access broadcasting primary pieces action function perform ### softscantrigger #### description command start stop toggle prototype java = isetactionaction iputextraextra_data parameters string commotorolasolutionsemdkdatawedgeapiaction_softscantrigger extra_data commotorolasolutionsemdkdatawedgeapiextra_parameter `` parameter start_scanning scanning stop_scanning toggle_scanning return values error debug messages logged logging system viewed filtered logcat adb shell view log `$ -s dwapi` invalid actions // define strings extradata create isetactionsoftscantrigger add additional info iputextraextradata send datawedgecontextthissendbroadcasti comments received queued processed immediately attempting sending enable result time complete case delayed sufficiently int triggerdelay delay milliseconds handler handlerpostdelayednew runnable { public void run clarity assume method code startsoftscan } scannerinputplugin enable/disable disabling effectively disables commotorolasolutionsemdkdatawedgeapiaction_scannerinputplugin enable_plugin enables disable_plugin onresume isetactionscannerinputplugin contextthissendbroadcasti let’s activity launches profilea enabled point disable launched profileb switches state >note assumes applications/activities focus automatically paused recommended called enumeratescanners commotorolasolutionsemdkdatawedgeapiaction_enumeratescanners enumerated returned broadcast commotorolasolutionsemdkdatawedgeapiaction_enumeratedscannerlist array $ dwapi enumerate isetactionenumeratescanners contextthissendbroadcasti// receive enumeratedlist key_enumeratedscannerlist datawedgeapi_key_enumeratedscannerlist filter intentintentfilter intentfilter filteraddactionenumeratedlistregisterreceivermybroadcastreceiver filter// receiver private broadcastreceiver mybroadcastreceiver @override onreceivecontext context intentgetaction actionequalsenumeratedlist bundle intentgetextras string[] scanner_list bgetstringarraykey_enumeratedscannerlist setdefaultprofile recap generic edited manipulation settings assignment configuration output applications user-defined disabled associating sends user-created adds security enabling usage scenario launcher apps launch listed selected app auto switching reason override resetdefaultprofile commotorolasolutionsemdkdatawedgeapiaction_setdefaultprofile commotorolasolutionsemdkdatawedgeapiextra_profilename case-sensitive failures found isetactionsetdefaultprofile myprofile effect exist cater ensure continue work consistent explain initially camera barcode browser enters blockbuster previously continues specifies commotorolasolutionsemdkdatawedgeapiaction_resetdefaultprofile isetactionresetdefaultprofile switchtoprofile plug-ins behave consists input configurations includes runsusing single activities/apps acitivty activities activitya requires ean13 barcodes activityb msr card left unassociated profilem accept activate similarily activity/app commotorolasolutionsemdkdatawedgeapiaction_switchtoprofile superonresume isetactionswitchtoprofile one-to-one relationship activated multiple whilst > note assigned application/activity future app/activity automatic backward compatibility datawedge's affected works newprofileid id check currentprofileid deactivate ","summary":"Overview\nThe purpose of this document is to describe the functionality of the Data Capture API. Its intended audience are Android developers. The Data Capture API is an application programming interface which provides a number of specific commands that another application can use to control certain aspects of data capture on Android devices.","url":"/emdk-for-android/3-1/guide/reference/refdatacaptureintent"},{"title":"Using Native Android APIs","keywords":"## overview symbol offers android products built open source platform aosp variants offered tc55 planned future ### standard configuration version operating system incorporates google mobile services api's application consult [https://developer.android.com](https://developer.android.com) details apis access [emdk apis]///api/ professional incorporate doe rely availability gms work devices variety applications collectively optional api extensions interface independent separate license runs add-on * maps play cloud messaging analytics google+ mail gmail wallet instant buy in-app billing ads drive cast challenges careful made deciding requires security identified specific googleid enterprise data pushed google's servers content read improve relevance advertisements privacy revamped policy early allowing richer user profiling targeted advertising usage acceptance track device's move collect ip addresses location nearby wi-fi info local storage device setting extra manual steps required performed boots time alternatives depending feature alternative choices declaring mapping based solutions mapquest openstreetmap resident alk copilot sygic tele atlas push cross-platform rhoconnect providers parse amazon sns pushwoosh store mdm distribution rhogallery ","summary":"\nOverview\nSymbol offers Android products that are built on Android Open Source Platform (AOSP). Two variants are now being offered on the TC55 and planned for certain future products.","url":"/emdk-for-android/3-1/guide/reference/refnativeandroid"},{"title":"Using the EMDK Samples with Android Studio","keywords":"##loading sample application applications installed emdk found start bar select android v20 samples [img]//images/sample/1jpg browser open list included [img]//images/sample/2jpg adtsamples web page [img]//images/sample/3jpg copy path directory computer [img]//images/sample/4jpg studio quick pane **import projecteclipse adtgradleetc** [img]//images/sample/as_import_samples_1png paste copied step import dialog click [img]//images/sample/as_import_samples_2png accept default options dialogs clicking **next** **finish** [img]//images/sample/as_import_samples_9png projects imported run configuration app defaulted emulator lets change drop **edit configurations** [img]//images/sample/as_import_samples_12png edit left **usb device** radio button target device **ok** [img]//images/sample/as_import_samples_13png ##deploying project deploy press green play [img]//images/sample/as_import_samples_11png push usb main activity [img]//images/sample/barcodesample1_screenpng ","summary":"\nLoading the Sample Application\nSample Applications are installed along with the EMDK and can be found in your start bar. \n\nSelect Start \nSelect \"EMDK for Android v2.0\"\nSelect \"Samples\"\n\n      \nYour browser should open with a list of included samples\n\n      \nSelect \"ADTSamples\" from the web page   \n\n      \nCopy the path to the directory on your computer    \n      \n\nIn the Android Studio Quick Start pane, select Import project(Eclipse ADT,Gradle,etc.)\n  \n\nPaste the path copied from step 6, into the import dialog, and click OK.","url":"/emdk-for-android/3-1/guide/sample/emdksamples_androidstudio"},{"title":"Using the EMDK Samples with Eclipse","keywords":"##loading sample application applications installed emdk found start bar select android v20 samples [img]//images/sample/1jpg browser open list included [img]//images/sample/2jpg adtsamples web page [img]//images/sample/3jpg copy path directory computer [img]//images/sample/4jpg eclipse tool file -> import existing code workspace [img]//images/sample/5jpg browse exampleprofiledatacapturesample1 [img]//images/sample/6jpg finish ##deploying project properties click [img]//images/setup/image033jpg [img]//images/setup/image035jpg left pane [img]//images/setup/image037jpg target build targets api version require [img]//images/setup/image039jpg >note >if confirm sdk platform apply attach supported device usb debug mode runtime package explorer run [img]//images/sample/7jpg [img]//images/sample/8jpg ","summary":"\nLoading the Sample Application\nSample Applications are installed along with the EMDK and can be found in your start bar. \n\nSelect Start \nSelect \"EMDK for Android v2.0\"\nSelect \"Samples\"\n\n\t  \nYour browser should open with a list of included samples\n\n\t  \nSelect \"ADTSamples\" from the web page   \n\n\t  \nCopy the path to the directory on your computer   \n\t  \n\nIn Eclipse select From the tool bar \"File\" - \"Import\"\nSelect Android \"Existing Android Code Into Workspace\"\n\n    \nBrowse to the samples directory from the web page and select a sample for example\"ProfileDataCaptureSample1\"\n\n    \n10.","url":"/emdk-for-android/3-1/guide/sample/emdksamples_eclipse"},{"title":"Secure NFC Programmer’s","keywords":"##introduction emdk android developers comprehensive set tools easily create secure nfc application zebra technologies corporation mobility device >note time mifareplus 4k memory contactless security level cards supported 2k ##securenfcmanager usage apis provided class determine type sam mobile instance object tag detected securenfcmanager access module inserted sim slot ###android manifest **request access** xml **set minimum androidsdk version** **add uses-feature element shows google play devices hardware** **register intent actions** ###example **determine mifaresam object** java securenfcmgr = emdkmanagergetinstancefeature_typesecurenfc null { samtype securenfcmgrgetavailablesam samtypeequalssamtypemifare mifarsam securenfcmgrgetsaminstance } catch securenfcexception eprintstacktrace mifaredesfire mifareplussl3** public void onnewintentintent nfcadapteraction_ndef_discoveredequalsintentgetaction || nfcadapteraction_tag_discoveredequalsintentgetaction nfcadapteraction_tech_discoveredequalsintentgetaction ltag intentgetparcelableextranfcadapterextra_tag tagtechtype tagtype securenfcmgrgettagtechtypeltag tagtypeequalstagtechtypemifare_desfire mmifaredesfire securenfcmgrgettagtechinstancetagtype iftagtypeequalstagtechtypemifare_plus_sl3 mifareplussl3 mmifareplussl3 catchsecurenfcexception ##mifaresam api establish connection host authentication information manufacturer id version size compliant protocol uid batch number production datemm/dd/yyyy **host authentication** **mandatory** failing authenticate restrict read/write operations to/from files successful persist rebooted recommended close **establish host** sammode mifaresamconnect samkey samkeykeynum 0x00 samkeykeyver mifaresamauthenticatesamauthkey mifaresamclose ##mifaredesfire * enable applications details month year file settings created key keys stored data from/to standard record linear cyclic credit/debit integer retrieve ids free ###enabling authenticating desfire performed i/o authenticated enabled disabled lost exception occurred user called main thread blocking operation ###performing perform preceded **samkey** nxp pegoda reader purposes **commit transaction** transaction committed validate previous write access’ backup executing writedata credit debit writerecord resetrecord **abort abort invalidate **reset record** resets empty state preceding read&write required reset call invalidated occur performing calling committransaction lsamkeyforreadwrite lsamkeyforreadwritekeynum 0x05 //samkey lsamkeyforreadwritekeyver mifaredesfireenableltag mifaredesfireselectapplication application_id // valid subsequent disable mifaredesfireauthenticateauthenticatetypenative mifaretagconstantscard_key_for_read_write mifaredesfirecreditcredittypestandardvalue_file_idcommunication_typevaluetobecredited mifaredesfirecommittransaction application** mifaredesfirewriterecordrecord_file_id communicationtype0 record_sizedatatobewritten ##mifareplussl3 sectors block increment/decrement ### **enabling tag** **first **following helps save firstauthentication status card execution method communication **writevalue** converts writing **readvalue** read **transfer** transfer contents buffer specific **restore** **increment block** increment lsamkeyforvalue samkey//samkey lsamkeyforvaluekeynum 0x10 lsamkeyforvaluekeyver mifareplussl3firstauthenticationkey_a_value_block mifareplussl3incrementtrue value_block_no mifareplussl3transfertrue int value= mifareplussl3readvaluefalse true mifareplussl3exception **write mifareplussl3writevaluefalse **read lsamkeyfordatablock lsamkeyfordatablockkeynum 0x12 lsamkeyfordatablockkeyver blocks sector mifareplussl3firstauthenticationmifaretagconstantskey_a_data_block mifareplussl3writeblocktrue mifaretagconstantsdata_block_1 datatobewrittengetbytes final **incrementtransfer mifareplussl3incrementtransfertrue ","summary":"\nIntroduction\nThe EMDK for Android provides developers with a comprehensive set of tools to easily create Secure NFC application for use with the Zebra Technologies Corporation mobility device.","url":"/emdk-for-android/3-1/guide/securenfc"},{"title":"EMDK For Android Setup","keywords":"## overview emdk android interface symbol adds scanning magstripe developing enterprise applications devices document guide start working preferred development environment ##configuring order develop studio eclipse install java kit ### installing jdk windows [https://www.oracle.com/technetwork/java/javase/downloads/index.html](https://www.oracle.com/technetwork/java/javase/downloads/index.html). download v7u45 newer mac os 2014-00x https://support.apple.com/kb/dl1572?locale=en_US. [img]//images/setup/mac/image1png javaforosx2014-001dmg https://www.oracle.com/technetwork/java/javase/downloads/index.html. v7u75 – jre sufficient x64 jdk-7u75-macosx-x64dmg ##choosing ###android google's official ide give access latest updates **windows** follow [**guide**]/setupandroidstudio setup **mac** [**guide**]/setupandroidstudiomac manually ###eclipse-adt bundle release google longer offers based adt downloaded separately installed plugin installer supports [**guide**]/setupeclipse supported ","summary":"\nOverview\n\nThe EMDK for Android provides the interface to Symbol value adds such as scanning and magstripe for developing Enterprise applications on Symbol Android devices.","url":"/emdk-for-android/3-1/guide/setup"},{"title":"EMDK For Android Setup (Android Studio1.0.x)","keywords":"##installing emdk android studio ###installing [https://developer.android.com/sdk/index.html](https://developer.android.com/sdk/index.html) download `android 1x` >note installed computer running andriod installer ### installing update install full version v31 [emdk-a-030109exe] obtain [https://portal.zebra.com/Support/US-EN](https://portal.zebra.com/Support/US-EN), search `emdk android` support follow steps ###install `if skip below` run administrator click [img]//images/setup/emdkinstall01png agree reading license agreement continue installation [img]//images/setup/emdkinstall02png select custom location clicking browse [img]//images/setup/emdkinstall03png selecting `use studio` radio button shown [img]//images/setup/emdkinstall04png **next >** [img]//images/setup/install31ud1_as_1png backup samples [img]//images/setup/install31ud1_as_2png **i agree** [img]//images/setup/install31ud1_as_3png instalation completes [img]//images/setup/install31ud1_as_5png **finish** [img]//images/setup/install31ud1_as_6png ##emdk development order enable project add library added methods ###specify sdk add-on minimum wizard launch start file \\> enter application company domain symbol technologies api phone tablet [img]//images/setup/as_image8png complete finish >android display gradle build process verify structure app modules window's left-pane check compile selected > incemdk >[img]//images/setup/as_image12png method verifiy integration buildgradle open module compilesdkversion assigned [img]//images/setup/as_image14png **your ready information creating app** ###import lib jar starting previously created level press marked + top-left import aar package list locate comsymbolemdkjar folder [img]//images/setup/as_image25png >the eventualy window dependencies tab [img]//images/setup/as_image28png top-right dependency [img]//images/setup/as_image29png comsymbolemdk choose dialog listed [img]//images/setup/as_image31png ###add properties manually names depending >sdk **symbol 1616** api-19 1919** [img]//images/setup/as_image35png resulting [img]//images/setup/as_image36png ##importing screen non-android path >for c\\\\users\\\\public\\\\symbol android\\\\v30\\\\samples\\\\adt preferred sample [img]//images/setup/as_image38png completed displayed menu rebuild [img]//images/setup/as_image47png connect device usb [img]//images/setup/as_image48png ","summary":"\nInstalling EMDK for Android Studio\n\nInstalling Android Studio\nGo to https://developer.android.com/sdk/index.html\nDownload Android Studio 1.x\n\nNOTE: Android Studio should be installed on your computer before running the EMDK for Andriod installer.","url":"/emdk-for-android/3-1/guide/setupAndroidStudio"},{"title":"EMDK For Android Setup on Mac","keywords":"##installing android studio 11x https://developer.android.com/sdk/index.html. [img]//images/setup/mac/image3png click download mac button accept license agreement launch dmg file downloaded android-studio-ide-1351740770-macdmg drag drop applications folder open follow setup wizard install sdk tools depending security settings attempt warning package damaged moved trash error occurs system preferences / &amp privacy padlock icon bottom left corner login screen select command line access `/users//library/android/sdk/` ##configuring emdk development order develop apps api's platforms build-tools revision 211x newer installed ###how determine api start programs manager check status platform mark packages instructions complete restart [img]//images/setup/mac/image4png [img]//images/setup/mac/image5png v31 ###prerequisites items found [emdk installation zip file](https://s3.amazonaws.com/emdk/EMDK_3.1_MAC.zip): add-ons \\sdk\\addon-symbol-emdk_v31_api-16 \\sdk\\aaddon-symbol-emdk_v31_api-19 core components \\symbol plug-in \\android studio\\comsymbolemdkwizardintellijidea_31_20 device runtime \\device update\\emdkosupdateapp_v3132apk >note installing emdkosupdate [device setup]/setupdevice ###emdk add-on integration add apis refer navigate /users/**username**/library/android/sdk/add-ons directory [img]//images/setup/mac/image6png copy addon-symbol-emdk_v31_api-16 addon-symbol-emdk_v31_api-19 folders [img]//images/setup/mac/image7png exit > integrated [img]//images/setup/mac/image8png configuring os locate /users/shared [img]//images/setup/mac/image10png symbol [img]//images/setup/mac/image11png finder side panel [img]//images/setup/mac/image12png studioapp show contents [img]//images/setup/mac/image13png contents\\plugins [img]//images/setup/mac/image14png comsymbolemdkwizardintellijidea_31xx plugins [img]//images/setup/mac/image15png “emdk” menu bar [img]//images/setup/mac/image16png update1 3.1](https://s3.amazonaws.com/emdk/EMDK_3.1_MAC.zip) file](https://s3.amazonaws.com/emdk/EMDK_3.1_UPDATE1_MAC.zip): android\\ update\\emdkosupdateapp_v3136apk ###manual full unzip Update1](https://s3.amazonaws.com/emdk/EMDK_3.1_UPDATE1_MAC.zip) update copying \\sdk\\ /users//library/android/sdk/add-ons/ /users/shared/symbol android/ ##resolving jdk version conflict section provide required steps modify infoplist enable support plug-ins built **jdk 7** configured 6** symptoms observed notification stating internal ide [img]//images/setup/mac/image18png empty [img]//images/setup/mac/image19png jre [img]//images/setup/mac/image20png [img]//images/setup/mac/image21png 16x fail solve issue app configuration change set 17x pane [img]//images/setup/mac/image22png [img]//images/setup/mac/image23png expand create backup text editor [img]//images/setup/mac/image24png [img]//images/setup/mac/image25png search jvmversion entry 16* 16+ save [img]//images/setup/mac/image26png item visible [img]//images/setup/mac/image27png additionally [img]//images/setup/mac/image28png adb connectivity devices osx successful default vendor id party usb list connected google mobile service gms tc enter terminal `echo 0x05e0 >> ~/android/adb_usbini` `cd /users//library/android/sdk/platform-tools/` stop running `/adb kill-server` connect verify attached devices` ","summary":"\nInstalling Android Studio 1.1.x\n\nGo to https://developer.android.com/sdk/index.html.\n\n\t\n\nClick on the \"Download Android Studio for Mac\" button.\nAccept the License Agreement and click the \"Download Android Studio for Mac\" button.","url":"/emdk-for-android/3-1/guide/setupAndroidStudioMac"},{"title":"Configuring A Device","keywords":">note devices updated latest emdk android device runtime ## installing deployment utility ###windows connect pc launch start menu program shortcut `device deployment` open command prompt window click key continue process deploy reboot automatically finish os update ###mac finder copy emdkosupdateapp_v31xxapk adb directory `/users//library/android/sdk/platform-tools/` terminal navigate `cd /users//library/android/sdk/platform-tools/` symbol enter commands restart verify list attached `/adb kill-server` devices` install app emdkosupdateapp_v31xxapk` run shell -n comsymbolemdkosupdater/mainactivity` completes applock manager * option turn turned customer add applications white google mobile service gms enable enterprise-grade features mobility extensions mx download enterprise enabler [https://portal.motorolasolutions.com/Support/US-EN](https://portal.motorolasolutions.com/Support/US-EN) search modify installation behavior application skip version higher modified pushing mode configuration `emdkosupdateconfigxml` `/enterprise/usr/` folder internal storage overrides default settings **this required behavior** **example emdkosupdateconfigxml** xml **installmode parm options** determines existing installed `skip` **auto** displays alert box waits user input **overwrite** overwrite **skip** **cancel** exit **removeinstaller removes successful **true** **false** remove supported emdkos v3137 **emdk steps** create push `emdkosupdateapp_[version]apk` emdkosupdateapp succeeds un-installed overridden rebooted fails results `/enterprise/usr/emdkosupdateresultsxml` ","summary":"\nNOTE: Devices will need to be updated with the latest EMDK for Android Device Runtime\n\nInstalling EMDK for Android Device Runtime using Deployment utility\n\nWindows\nConnect the device to PC.","url":"/emdk-for-android/3-1/guide/setupDevice"},{"title":"EMDK For Android Setup (Eclipse)","keywords":"## install emdk eclipse ### installing [https://eclipse.org/downloads/](https://eclipse.org/downloads/). download `eclipse ide java developers` indigo greater make note location save system-you refer standalone directory android > helios longer supported latest version adt plugin >note google released studio **bundle** **plug-in** start select `help software` click `add` top-right corner add repository dialog appears enter `adt plugin` url `https://dl-ssl.google.com/android/eclipse/` developer tools update site requires secure connection starts https `ok` software check box window list downloaded `click next` read accept license agreements `finish` security warning authenticity validity established installation completes restart v2230-887826 higher sdk [https://developer.android.com/sdk/index.html](https://developer.android.com/sdk/index.html). hyperlink [other Options](https://developer.android.com/sdk/index.html#Other) scroll section `other options` table `sdk only` package [installer_r24-windows.exe](https://dl.google.com/android/installer_r24-windows.exe) platform `windows` agreement button `download installer_r24-windowsexe` double-click executable system configuring api's installed `window` `android manager` status api 16` 19` platforms `installed` mark `install packages` follow screen instructions complete full v31 [emdk-a-030109exe] obtain [https://portal.zebra.com/Support/US-EN](https://portal.zebra.com/Support/US-EN), search `emdk android` support steps ###install `if skip below` run installer administrator [img]//images/setup/emdkinstall01png agree reading continue [img]//images/setup/emdkinstall02png custom clicking browse [img]//images/setup/emdkinstall03png selecting eclipse/adt radio computer slightly stating exit ignore time [img]//images/setup/emdkinstall08png bundle shown step #7 [img]//images/setup/emdkinstall09png root folder buy [img]//images/setup/emdkinstall10png [img]//images/setup/emdkinstall11png manually paths [img]//images/setup/emdkinstall12png **next >** [img]//images/setup/install31ud1_as_1png backup samples [img]//images/setup/install31ud1_as_2png **i agree** [img]//images/setup/install31ud1_as_3png instalation [img]//images/setup/install31ud1_as_5png **finish** [img]//images/setup/install31ud1_as_6png verifying development environment wizard plug-in integration adt/eclipse `eclipseexe` `[adt-bundle]\\eclipse` \\adt-bundle-windows-x86-20140321\\eclipse\\eclipseexe `[eclipse-root]` \\eclipse-standard-kepler-sr2-win32\\eclipse\\eclipseexe menu bar called [img]//images/setup/image009jpg add-on existing application project `file` -> `properties` [img]//images/setup/image011jpg `android` left pane [img]//images/setup/image015jpg availability apis` build targets [img]//images/setup/image039jpg runtime device existence `/system/framework/comsymbolemdkjar` [img]//images/setup/image097jpg ##manually remove cases running uninstall program cleanly pc fails reason reinstall directions components ###1 removing open command prompt type `regedt32` press registry editor locate key * 32-bit os `[hkey_local_machine\\software\\microsoft\\windows\\currentversion\\uninstall]` 64-bit `[hkey_local_machine\\software\\wow6432node\\microsoft\\windows\\currentversion \\uninstall]` listed represents identify fig01 fig02 [img]//images/setup/uninstallfig1png [img]//images/setup/uninstallfig2png uninstallstring details path parent uninstallexe resides delete symbol subfolders files ###2 `users\\public` ###3 short cuts programs `all users\\start menu\\programs` `symbol vxx` vxx = base `v30` v30` additionally windows lnk file vxxlnk` ###4 adt/ close proceeding users adtrootfolder `\\\\eclipse\\plugins` `comsymbolemdkwizard_xxxjar` `emdk` `\\\\sdk\\add-ons` `addon-symbol-emdk_vxx_api-16` `addon-symbol-emdk_vxx_api-19` folders values eclipserootfolder sdkrootfolder separately `\\\\plugins` ###5 settings `[hkey_local_machine\\software\\wow6432node\\microsoft\\windows\\currentversion\\uninstall]` right-click `are subkeys` updates updatex` updatex `update1` v30 update1` ##using external library ###adding jar left-pane [img]//images/setup/emdkjaraslib01png intended target `project target` `apply` `java path` `libraries` tab right-pane `add jars` `comsymbolemdkjar` integrated `\\sdk\\add-ons\\addon-symbol-emdk_v31_api-16\\libs\\comsymbolemdkjar` [img]//images/setup/emdkjaraslib02png ##enabling intellisense arrow expand options [img]//images/setup/emdkjaraslib03png `javadoc location` drop `edit…` `browse` `javadoc` `\\sdk\\add-ons\\addon-symbol-emdk_v31_api-16\\docs\\reference\\` [img]//images/setup/emdkjaraslib04png `validate…` javadoc validated shows message successful [img]//images/setup/emdkjaraslib05png enabled verify class/interface/method emdklistener `f2` [img]//images/setup/emdkjaraslib06png ","summary":"\nInstall EMDK for Eclipse\n\n Installing Eclipse\nGo to https://eclipse.org/downloads/.\nDownload Eclipse IDE for Java Developers 3.7.2 (Indigo) or greater.","url":"/emdk-for-android/3-1/guide/setupEclipse"},{"title":"SimulScan API programmer's guide","keywords":"##introduction simulscan end-to-end data capture solution extracting critical documents differentiating value-add involves capturing fields interest document converting end-user application immediately point transaction customers benefit productivity gain decoding multiple bar codes read single trigger pull automated entry character recognition [ocr] simplified workflow exceptions checked mark [omr] signature presence detection interactively obtain meaningful present barcodes identified decoded strings recognized text images refined pictures based template image entire processed engines extract relevant ##determining device support supported devices tc55 tc75 v18 emdk v31x ###our licensing procedure license [https://softwarelicensing.zebra.com/](https://softwarelicensing.zebra.com/) information process found [here](https://softwarelicensing.motorolasolutions.com/documentation/index.html). copy received xml setup **tc55 devices** settings -> phone legal symbol licenses 242+ bsp click android menu button install navigate copied complete updated reflect fact installed ##getting started ###initialize manager follow [“basic scanning tutorial barcode api”]//tutorial/tutbasicscanningapi set project >note recommended release emdkmanager ondestroy onclose service disconnected unexpectedly ###get simulscanmanager java = emdkmanagergetinstancefeature_typesimulscan called switching datawedge simulscanreader options simulscanmanagergetdevicesimulscandeviceidentifier deviceidentifier api valid simulscandeviceidentifiers internal_camera1 internal camera internal_imager1 imager template_driven defined simulscandeviceidentifier target platform exception thrown call “getdevice” { simulscanmanagergetdevicesimulscandeviceidentifierinternal_camera1 } catch simulscanexception eprintstacktrace simulscanmanagergetsupporteddevicesinfo pass simulscanreaderinfo objects simulscanmanagergetdevicesimulscanreaderinfo list readerinfolist simulscanmanagergetdevicereaderinfolistget0 ###using register status listener object listeners implement simulscandataeventlisterner simulscanstatuseventlisterne interfaces public class simulscantestapp implements simulscanstatuseventlisterner simulscandataeventlisterner{ @override void onsimulscandatasimulscandata form // todo auto-generated method stub onsimulscanstatussimulscanstatusdata m_ selectedsimulscanreaderaddsimulscanstatuslistenerm_ selectedsimulscanreaderaddsimulscandatalistenerm_ **simulscanreaderenable** enables reader hardware make scan basically scanner enabled applications throw disable readers remain locked unavailable selectedsimulscanreaderenable configurations changed simulscanreader’s simulscanconfig templates loaded simulscanmultitemplate config selectedsimulscanreadergetconfig multitemplate simulscanmultitemplateurifromfile/file/path ifmultitemplate null configmultitemplate //optionally configs configenableautocapture true configenableresultconfirmation configprocessingtimeout apply selectedsimulscanreadersetconfigconfig create “template builder graphical tool web https://simulscan.zebra.com/. https://simulscan.zebra.com/Content/Help/WebHelp/index.htm. creating “new simulscanmultitemplate” open created setting start simulscanreaderread request canceled issuing cancelread submitted pending fail check calling isreadpending submitting ifselectedsimulscanreaderisenabled resources override onstop simulscanreaders onstop{ ifselectedsimulscanreaderisreadpending{ selectedsimulscanreadercancelread ifselectedsimulscanreaderisenabled{ selectedsimulscanreaderdisable superonstop ###simulscanconfig detail apis configuration parameters current simulscanreadergetconfig object’s change simulscanreadersetconfigsimulscanconfig enableautocapture captured automatically detected enabledebugmode session write region values storage enablefeedbackaudio turn on/off audio feedback enablehaptic haptic enableled led enableresultconfirmation shows ui confirmation results simulscanview sending back identificationtimeout amount time milliseconds wait timing identification processingtimeout processing ###handling onsimulscanstatus events generate state simulscanstatusdata onsimulscanscanstatus callback statusdata print friendly originated update logvtag + statusdatagetfriendlyname handle switch statusdatagetstate case disabled ondisabled break onenabled idle error logetag statusdataextendedinfo getextendedstatusdescription unknown default simulscanstatusdata’s getfriendlyname generated event getstate simulscanstatus states successfully occurred finished additional extended info parameter plan significant background thread block onsimulscandata successful simulscandata passed routine extracted scanned date timestamp datesimulscandatagettimestamp simulscandataelements simulscandatagetelements simulscandataregions arraylist simulscanelement curelement instanceof simulscanregion logdtag curelementgetname simulscangroup regionsingroup simulscangroupcurelementgetregions curregion regionsingroup{ “group”+ simulscangroupcurelementgetname +” region”+ curregiongetname **simulscandatagettemplate** returns reconstruct original **simulscanelements** returned **simulscandatagetelements** instances **simulscanregion’s getdata** actual ocr omr type getdata depend regiontype shown table regiontypedata ocrstring omrinteger barcodestring picturebyte[] binary ###important considerations due issue framework version orientation fixed preferably androidmanifestxml failing hang ##simulscan `/enterprise/device/settings/datawedge/templates` path accessible file browser latest access programmatically location preferred instance attempting ","summary":"\nIntroduction\nSimulScan is an end-to-end data capture solution for extracting critical data from documents. A differentiating data capture value-add, it involves capturing fields of interest in a given document and converting it into data that an end-user application can use immediately at the point of transaction.","url":"/emdk-for-android/3-1/guide/simulscan_guide"},{"title":"Choosing an MX Version","keywords":"## overview mx management system mxms common interface zebra android device capabilities utilizing xml conforms standard oma-cp prov microsoft msprov schema developers administrators extensible efficient reliable scalable means configuring administrating devices exposes underlying csps provide give user access privileged unprivileged apis combination installed version operating determine ### evaluation steps targeting identify features needed compatibility verify target identifying set services include individual review version's reference documentation feature included * [profile features]/mx specific supported identified consult [device table]/mx/compatibility intend support [check device]/mx/version-on-device ensure running required ","summary":"\nOverview\nThe MX Management System (MXMS) provides a common interface to Zebra Android device capabilities utilizing XML that conforms to the standard OMA-CP PROV (Microsoft MSPROV) schema.","url":"/emdk-for-android/3-1/mx/choosing-a-version"},{"title":"IP Output Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]//mx/data-capture/barcode / [msr]//mx/data-capture/msr [keystroke]//mx/data-capture/keystroke[intent]//mx/data-capture/intent[ip]//mx/data-capture/ip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically [profilemanager]//api/profilemanager api multiple update [emdk profiles overview]//guide/profile-manager information enabled enables disables remote wedge enable disable default ipwedge protocol select options enter number configuration disabled modification add characters beginning end transfer foreground disabling prevents actual transmitted strings present hex hexadecimal format tab key append character processed ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/3-1/mx/data-capture/IP"},{"title":"Activity Selection Profile Feature Reference","keywords":"## overview creating profile **barcode** **msr** data capture configure activity selector automate process activating deactivating automated management complex applications field emdk identify feature parameter set manage part programmatically [profilemanager]//api/core/profilemanager api multiple types update [emdk profiles overview]//guide/profile-manager information ##activity selection [img]activity-selectionpng ###applications **applications** section configuration screen enter **application name** click **apply** button add application list **applications names** formal package definition comsymbolprofiledatacapturesample1 created project copied case names foresee mind convenience simplify entry restricted activities exist ###activities build active selecting **activity class complete prefixed **comsymbolprofiledatacapturesampe1**mainactivity belong simply check auto prefix box mix manually clicking apply enable selected wildcard** &#42 individually asterisk ","summary":"\nOverview\n\nWhen creating a profile for Barcode or MSR data capture you can configure an Activity Selector to automate the process of activating and deactivating the profile.","url":"/emdk-for-android/3-1/mx/data-capture/activity"},{"title":"Barcode Profile Feature Reference","keywords":"## overview order barcode data application create profile features selected * [keystroke]//mx/data-capture/keystroke[intent]//mx/data-capture/intent[ip]//mx/data-capture/ip output `barcode` feature manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically [profilemanager]//api/profilemanager api multiple update [emdk profiles overview]//guide/profile-manager information enabled enables disables default selection configures scanning device capture auto determines scan module scan/msr installed mc40 2d performed rear-facing decoders disabled performance disable unnecessary commonly shown asterisk supported australian postal aztec canadian chinese codabar* 39* 128* composite ab datamatrix* discrete dutch ean-8* ean-13* gs1 databar* databar expanded* limited han xin japanese korean interleaved matrix maxicode* mail mark micropdf microqr msi pdf417* qr code* signature tlc trioptic uk upc-a* upc-e0* upc-e1 us4state fics uspostnet usplanet webcode upca report check digit character symbol verify integrity preamble characters upc consisting country system options transmitting transmit sys char usa select match upce0 convert enable suppressed decoded upc-a format transmission conversion affected programming selections code128 length1 decode lengths length2 redundancy sets reader read accepting plain flag gs1-128 isbt-128 subtype isbt128 concatenation mode concatenating pairs isbt concat concatenate codes encountered perform single symbols decodes concatenates immediately present number times confirm additional table specification includes lists found concatenated security level offers levels increasing decreasing quality inverse relationship aggressiveness choose setting operate aggressive state providing sufficient decoding in-spec eliminates misdecodes fails eliminate occur advised selecting extreme measure mis-decoding severely spec significantly impairs needed improve reduced quiet zone ignore fnc4 code39 complies algorithm digital include modulo full ascii variant encode code32 italian pharmaceutical industry converting adding 2of5 uss uniform opcc optical product council itf-14 ean13 14-character ean-13 leading valid i2of5 ##gs1 ucc link 1d component transmitted detected linked components discriminate portion transmits postnet planet codabar clsi editing strip start stop insert space tenth requires notis length mandatory verified optional digits scheme algorithms verification mod-11-10 mod mod-10-10 code93 code11 selects ##matrix upce1 allowable variable range specific ean params configuration apply decoder upc/ean higher lower speed fastest diminish prone misdecoding poorly printed impair supplemental2 supplemental5 supplemental supplementals presented ignores supplements smart returns main block belong starts prefixes searches image aggressively failed returned 378-379 auto-discriminate starting 978-979 414-419-434-439 retry count auto-discriminating values inclusive note considered random weight bookland coupon successfully correct modes extend add zeros ean-8 make compatible formats isbn-10 isbn-13 converts work symbologies marginless barcodes beam timer maximum amount time remains ms increments stay indefinitely adaptive enable/disable width narrow normal wide power low optimized high mobile phone display defines finer ds457 ssi triggers presentation triggered linear accurate based flags short long thrice picklist directly cross-hair/reticle + pattern applications view session targeted centered center conjunction static dynamic reticle viewfinder modules unsupported issue error cross-hair aim type trigger continuous timeout suppress interval steps illumination depending ambient light conditions lcd enhances displays cellphones degradation observed aiming crosshair blink delay enter seconds minute minutes brightness user positive poor effort red screen helps id feedback identifies scanned standards defined ringtones fully tones longer truncated tone recommendation test operation deployment customer site volume ringer music media alarms notification audio sound good stored application’s private cache asset avoid access violation meant purpose shared public directories music/ ringtones/ “external storage” haptic vibrate bt disconnect exit bluetooth idle opened disconnected duration inactivity led runs true pairing utility method called engine controls engines refer reference documentation [intent]//mx/data-capture/intent [keystroke]//mx/data-capture/keystroke [ip]//mx/data-capture/ip ","summary":"\nOverview\nIn order to get Barcode data in your application, you must create a profile with two profile features selected:\n\nBarcode\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/3-1/mx/data-capture/barcode"},{"title":"Intent Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]//mx/data-capture/barcode / [msr]//mx/data-capture/msr [keystroke]//mx/data-capture/keystroke[intent]//mx/data-capture/intent[ip]//mx/data-capture/ip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols core components activities services broadcast receivers activated bundle information object describing desired action acted category component perform pertinent instructions locates respond launches instance needed passes advertise capabilities kinds filters system learn handle manifest &ltintent-filter&gt elements number capability xml configuration java comsymbolemdksamplerecvr androidintentcategorydefault emdk form implicit refer developer web site https://developer.android.com. field identify parameter set manage part programmatically [profilemanager]//api/profilemanager api multiple update [emdk profiles overview]//guide/profile-manager enabled enables disables enter required filter match delivery select method delivered startactivity startservice > note scanning applications user decode *current* activity necessarily displayed case marked ‘singletop’ androidmanifestxml file defined singletop copy disabled modification add characters beginning end transfer foreground disabling prevents actual transmitted strings present default hex hexadecimal format tab key append character processed return related intent's retrieved intentgetstringtextra intentgetserializableextra calls string tags `commotorolasolutionsemdkdatawedgelabel_type` label type `commotorolasolutionsemdkdatawedgedata_string` concatenated codes single tracks `commotorolasolutionsemdkdatawedgedecode_data` returned list byte arrays cases array symbologies support concatenation codabar code128 micropdf decoded stored clients passing index `commotorolasolutionsemdkdatawedgemsr_data` start/end sentinels track separators included configured `commotorolasolutionsemdkdatawedgemsr_track1` `commotorolasolutionsemdkdatawedgemsr_track2` `commotorolasolutionsemdkdatawedgemsr_track3` `commotorolasolutionsemdkdatawedgemsr_track1_status` status integer successful `commotorolasolutionsemdkdatawedgemsr_track2_status` `commotorolasolutionsemdkdatawedgemsr_track3_status` `commotorolasolutionsemdkdatawedgemsr_track1_encrypted` encrypted `commotorolasolutionsemdkdatawedgemsr_track2_encrypted` `commotorolasolutionsemdkdatawedgemsr_track3_encrypted` `commotorolasolutionsemdkdatawedgemsr_track1_hashed` hashed `commotorolasolutionsemdkdatawedgemsr_track2_hashed` `commotorolasolutionsemdkdatawedgemsr_track3_hashed` ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/3-1/mx/data-capture/intent"},{"title":"KeyStroke Profile Feature Reference","keywords":"## overview order barcode msr data application create profile input feature output * [barcode]//mx/data-capture/barcode / [msr]//mx/data-capture/msr [keystroke]//mx/data-capture/keystroke[intent]//mx/data-capture/intent[ip]//mx/data-capture/ip `barcode` manager responsible reading device's integrated bar code scanner supports types readers including laser imager internal camera detailed parameters behavior individual symbology `intent` `keystroke` `ip` define handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols field emdk identify parameter set manage part programmatically [profilemanager]//api/profilemanager api multiple update [emdk profiles overview]//guide/profile-manager information enabled enables disables action key character decoding special characters embedded disabled default tab \\t processed line feed carriage return configuration modification add beginning end transfer foreground disabling prevents actual transmitted strings present hex hexadecimal format append enter ","summary":"\nOverview\nIn order to get Barcode or MSR data in your application, you must create a profile that has both an Input feature and an Output feature:\n\nBarcode / MSR (Input)\nKeystroke,Intent,IP (Output)\n\nThe Barcode feature in the Profile Manager is responsible for reading data from the device's integrated bar code scanner and supports different types of bar code readers including laser, imager and internal camera.","url":"/emdk-for-android/3-1/mx/data-capture/keystroke"},{"title":"MSR Profile Feature Reference","keywords":"## overview order magstripe msr data application create profile features selected * [keystroke]//mx/data-capture/keystroke[intent]//mx/data-capture/intent[ip]//mx/data-capture/ip output `msr` feature manager responsible reading device's integrated mag-stripe reader exists `intent` `keystroke` `ip` define barcode scanner handled intent collects sends received android mechanism familiar register receive intents handling passed ability configure keystroke emulating keystrokes option control prefix suffix automatically added basic formatting ip datawedge send captured host computer network connection address port tcp udp transport protocols settings reference field emdk identify parameter set manage part programmatically [profilemanager]//api/profilemanager api multiple types update [emdk profiles overview]//guide/profile-manager information enabled enables disables default disabled refer documentation [intent]//mx/data-capture/intent [keystroke]//mx/data-capture/keystroke [ip]//mx/data-capture/ip ","summary":"\nOverview\nIn order to get MagStripe (MSR) data in your application, you must create a profile with two profile features selected:\n\nMSR\nKeystroke,Intent,IP (Output)\n\nThe MSR feature in the Profile Manager is responsible for reading data from the device's integrated mag-stripe reader (if one such exists).","url":"/emdk-for-android/3-1/mx/data-capture/msr"},{"title":"MX Management System Overview","keywords":"## overview mx management system mxms common interface zebra android device capabilities utilizing xml conforms standard oma-cp prov microsoft msprov schema developers administrators extensible efficient reliable scalable means configuring administrating devices exposes underlying csps provide give user access privileged unprivileged apis definitions terms ### board support package bsp method teams deliver operating ships specific version pre-installed suitable model reported build number updated generally downloading newer older website applying os update process open source project aosp google release distribute code royalty-free community oems free modify extend needed subject licensing requirements includes derived directly indirectly bsps include modifications and/or enhancements additional customers mobility extensions umbrella term refer collectively entire experience offered represents offers provided including * core osx value-add features multi-user whitelisting framework mxmf configuration service providers applications settings ui browser email client >**note** components present specifically absent installed included versioned primary determine general rule changed loading subsystem set query subsystems implement functions host built-into added shipped patch applied communicate interchange xmls conform **xmldtd** document **mx mf dtd** provider csp module implements ability clock wi-fi supported exposed defined dsd plug-in ship part downloaded registered calls point time kinds certmgr pre-registered thought collection submit bit accurate entity architecture data flow [img]architecture-overviewpng [img]architecture-bsppng effected updates emdk runtime introduced pre-existing behavior found remove change noted ","summary":"\nOverview\n\nThe MX Management System (MXMS) provides a common interface to Zebra Android device capabilities utilizing XML that conforms to the standard OMA-CP PROV (Microsoft MSPROV) schema.","url":"/emdk-for-android/3-1/mx/overview"},{"title":"How to Check a Device's MX Version","keywords":"## overview version mx device factor determining settings supported ways determine installed * manually ui application code runtime emdk submitting xml csp adb zebra android kitkat visually > note 44+ versions devices open `settings` list applications [img]/mx/mx-version-on-device/settingsjpg select `about phone` [img]/mx/mx-version-on-device/aboutphonejpg `sw components` [img]/mx/mx-version-on-device/softwarejpg inspect `osx` item [img]/mx/mx-version-on-device/osxjpg `442` [img]/mx/mx-version-on-device/osx-highlightedjpg apis run time `versionmanager` api java // instance versionmanager = emdkmanagergetinstanceemdkmanagerfeature_typeversion getversion method passing version_typemx enum mxversion versionmanagergetversionversion_typemx obtained `adb shell command` $ getprop output filtered `grep` considered `rebranded` technologies `rosymbolosxversion` | grep rosymbolosxversion [rosymbolosxversion] [qc_osx_44-3] `44` hypen patch release applied legacy motorola solutions branded `romotoslnenterpriseversion` romotoslnenterpriseversion [romotoslnenterpriseversion] [mx_ti4aj11_351-1] `11` ","summary":"\nOverview\n\nThe version of MX on a device is a factor in determining if certain settings will be supported. There are a few ways that you can determine the version that is installed:\n\nManually using the Settings UI\nFrom application code at runtime using the EMDK\nSubmitting XML using the MX CSP\nUsing ADB\n\n Using the Settings UI \n\nThe version of MX on a Zebra Android KitKat device you can visually look in the Settings UI to determine the MX version installed:\n\n Note: This is only available on KitKat 4.4+ or later versions of Zebra Android devices.","url":"/emdk-for-android/3-1/mx/version-on-device"},{"title":"App Manager","keywords":"##overview emdk android manage applications device actions install application uninstall upgrade set default launcher sample ##prerequisites java jdk eclipse adt plugin studio supported information setting [emdk setup guide]//guide/setup ##loading guide walk samples ide * [android studio]//guide/emdksamples_androidstudio [eclipse/adt]//guide/emdksamples_eclipse ##deploying [using samples]//guide/sample/emdksamples ##using starts [img]//images/samples/2_1png enter path apk file /sdcard/battery applicationapk [img]//images/samples/2_2png >note >to place connect computer usb medea copy click check status field [img]//images/samples/2_3png ","summary":"\nOverview\n\nThe EMDK for Android allows you to manage applications on the device. \n\nThe available actions are:  \nInstall an application\nUninstall an application\nUpgrade an application  \nSet an application as the default launcher \n\nThis sample application will allow you to install, upgrade, and uninstall an application.","url":"/emdk-for-android/3-1/samples/app-manager"},{"title":"Barcode APIs","keywords":"##overview emdk android handle barcode scanning java [barcode/scanning apis]////api/barcode introduced v30 api's work independently [data capture profiles]//mx/profilebarcode actions api]////api/ * set scanner device [triggertype]//api/barcode/scanner [decoder params]//api/barcode/scannerconfig-decoderparams [reader params]//api/barcode/scannerconfig-readerparams [scan params]//api/barcode/scannerconfig-scanparams scan barcodes based selected features sample application trigger type decoder params]//api/barcodescannerconfig-decoderparams ##prerequisites [see samples]//guide/sample/emdksamples ##loading ##deploying [using ##using starts [img]//images/samples/barcode_1png serial ssi default [img]//images/samples/barcode_2png hard [img]//images/samples/barcode_3png > note lets device's key soft devic's checkboxes checked params setting fields [img]//images/samples/barcode_4png click start button status updated [img]//images/samples/barcode_5png press symbol scanned data field ui [img]//images/samples/barcode_6png ","summary":"\nOverview\nThe EMDK for Android is used when you wish to handle all barcode scanning entirely in Java using Barcode/Scanning APIs introduced in EMDK V3.0.","url":"/emdk-for-android/3-1/samples/barcode"},{"title":"Controlling Bluetooth","keywords":"##overview## sample application show enable disable bluetooth radio device ##prerequisites [see emdk samples]//guide/sample/emdksamples ##loading ##deploying [using ##using starts [img]//images/samples/wireless1png select click **set** status field update submitting profile [img]//images/samples/wireless2png ","summary":"\nOverview\nThis sample application will show you how to enable or disable the bluetooth radio on a device\n\nPrerequisites\nSee Using the EMDK Samples\n\nLoading the Sample Application\nSee Using the EMDK Samples\n\nDeploying The Sample Application\nUsing the EMDK Samples\n\nUsing This Sample\nWhen the application starts it should look like the following.","url":"/emdk-for-android/3-1/samples/bluetooth"},{"title":"Setting The Clock","keywords":"##overview## features emdk android ability set system clock sample application show create custom setting time ##prerequisites [see samples]//guide/sample/emdksamples ##loading ##deploying [using ##using starts [img]//images/samples/3_1png enter [img]//images/samples/3_2png click check status field [img]//images/samples/3_3png ","summary":"\nOverview\nOne of the features of the EMDK for Android is the ability to set the system clock. This sample application will show you how you can create a custom application for setting the system time.","url":"/emdk-for-android/3-1/samples/clock"},{"title":"Data Capture","keywords":"##overview features emdk ability create barcode scanning profiles application modify profile select times barcodes interpreted ##prerequisites [see samples]//guide/sample/emdksamples ##loading sample ##deploying [using ##using loads * checkboxes changing options text area data displayed status shown [img]//images/sample/9png types enable click set san selected populate screen [img]//images/sample/newpng ## startup manager wizard called datacaptureprofile-1 created inspect parameters launching eclipse [img]//images/sample/10jpg mainactivity android existing categorized based operations activity selection input msr delivery intent keystroke ip introduced mx mobility extension clock app power configuring symbol devices > note field user defined identify feature required editing specific programmatically scope tutorial empty [img]//images/sample/11jpg scanner chosen inspected decoders enabled output disabled [img]//images/sample/12jpg [img]//images/sample/13jpg [img]//images/sample/14jpg starts onopened method executed processed [img]//images/sample/15jpg [img]//images/sample/16jpg successful initialization success application's [img]//images/sample/17png loaded begin notice code128 ean8 upca press scan trigger device default activated attempted read listed decode display >note everyday items home type google print testing [img]//images/sample/18png settings uncheck modified fly profileconfig api scanned tap update [img]//images/sample/19png aimer decoded steps played pre-built time build scratch follow [datacapture tutorial]//tutorial/tutdatacaptureprofile ","summary":"\nOverview\nOne of the features of the EMDK is the ability to create Barcode scanning profiles. This application allows you to modify a Barcode profile to select which times of Barcodes should be interpreted.","url":"/emdk-for-android/3-1/samples/data-capture"},{"title":"GPRS Settings","keywords":"##overview emdk android add remove apns symbol device actions * add/replace named apn existing sample application ##prerequisites [see samples]//guide/sample/emdksamples ##loading ##deploying [using ##using starts [img]//images/samples/gprs_1png select add/remove [img]//images/samples/gprs_2png provide test_apn check checkbox replace exist [img]//images/samples/gprs_3png applicable details access point wapcingular wap@cingulargprcom password cingular1 [img]//images/samples/gprs_4png click apply button status field [img]//images/samples/gprs_5png ","summary":"\nOverview\nThe EMDK for Android allows you to allows you to add or remove APNs to a Symbol device. \n\nThe available actions are:\n  \nAdd/Replace named APN  \nRemove existing named APN  \nRemove all existing APNs  \n\nThis sample application will allow you to Add/Replace named APN and remove existing named APN.","url":"/emdk-for-android/3-1/samples/gprs"},{"title":"Personal Shopper","keywords":"##overview## sample application show personal shopper apis interact mc18 cradle programmatically ##prerequisites [see emdk samples]//guide/sample/emdksamples bay ##loading ##deploying [using ##using seated launch personalshopper api starts [img]//images/samples/personalshoppersamplefirstlaunchpng press **fast charge** checkbox enable/disable fast charging [img]//images/samples/personalshoppersamplefastchargepng **cradle info** button retrieve information cradle's firmware version [img]//images/samples/personalshoppersamplecradleinfopng **diagnostic battery capacity [img]//images/samples/personalshoppersamplediagnosticinfopng unlock** unlock crade removed [img]//images/samples/personalshoppersampleunlockcradlepng flash led's** led's times [img]//images/samples/personalshoppersampleflashledpng **smooth effect** smoothing effect notice fade abrupt on/off state change [img]//images/samples/personalshoppersamplesmootheffectpng ","summary":"\nOverview\nThis sample application will show how the Personal Shopper APIs can be used to interact with the MC18 Cradle programmatically.\n\nPrerequisites\nSee Using the EMDK Samples\n\nFor this sample, you will need an MC18 and cradle( 1 or 3 bay ).","url":"/emdk-for-android/3-1/samples/personal-shopper"},{"title":"Rebooting The Device","keywords":"##overview emdk android control power state symbol device actions sleep mode reboot os update sample application set suspend reset ##prerequisites [see samples]//guide/sample/emdksamples ##loading ##deploying [using ##using starts [img]//images/samples/1_1png select [img]//images/samples/1_2png click check status field [img]//images/samples/1_3png ","summary":"\nOverview\nThe EMDK for Android allows you to control the power state of a Symbol device. \n\nThe available actions are:  \nDo Nothing  \nSleep Mode  \nReboot  \nOS Update  \n\nThis sample application will allow you to set the power state of \"Suspend\" (sleep mode) or \"Reset\" (reboot).","url":"/emdk-for-android/3-1/samples/power"},{"title":"Scan and Pair","keywords":"##overview## sample application show scan pair api bluetooth devices programmatically ##prerequisites [see emdk samples]//guide/sample/emdksamples android supported device barcode mac address remote pairing withthe running app ##loading ##deploying [using ##using starts leave **always scan** **hard trigger** check boxes selected insure **scandata type** spinner set **mac address** [img]//images/samples/scanandpair1png press **pair** button status label update stating process started prompt user hard trigger [img]//images/samples/scanandpair3png place view window retrieve **bluetooth field initiate connection request dialog complete display paired successfully [img]//images/samples/scanandpair4png ","summary":"\nOverview\nThis sample application will show how the Scan and Pair API can be used to pair two bluetooth devices programmatically.\n\nPrerequisites\nSee Using the EMDK Samples\n\nFor this sample, you will need two Android Bluetooth devices, one must be an EMDK for Android supported device.","url":"/emdk-for-android/3-1/samples/scanandpair"},{"title":"Document Capture","keywords":"##overview## sample application show simulscan api's capture multiple types data forms boxes ##prerequisites [see emdk samples]//guide/sample/emdksamples * licensed device template printed copy form create follow generation licensing sections [simulscan api tutorial]//tutorial/tutsimulscanapi ##loading ##deploying [using ##using place sdcard adb push mytemplatexml /sdcard/simulscan/templates/ launch app find templates devices populate set option list select [img]//images/samples/simulscansample1png press read button screen instructions extract fields defined display results view checked displayed review [img]//images/samples/simulscansample2png [img]//images/samples/simulscansample3png accept showing long decode back hardware return main [img]//images/samples/simulscansample4png ","summary":"\nOverview\nThis sample application will show how the Simulscan API's can be used to capture multiple types of data from forms, boxes and the like.\n\nPrerequisites\nSee Using the EMDK Samples\n\nYou will also need:\n\nA SimulScan licensed device\nA Simulscan template\nA printed copy of the form used to create the template\n\nFollow the template generation and device licensing sections of the SimulScan API tutorial\n\nLoading the Sample Application\nSee Using the EMDK Samples\n\nDeploying The Sample Application\nUsing the EMDK Samples\n\nUsing This Sample\n\nPlace a template on the sdcard of you SimulScan licensed device.","url":"/emdk-for-android/3-1/samples/simulscan"},{"title":"WiFi Configuration","keywords":"##overview emdk android configure wi-fi symbol device actions * disable enable add network connect disconnect remove > note order perform operations enabled sample application mentioned ##prerequisites [see samples]//guide/sample/emdksamples ##loading ##deploying [using ##using starts [img]//images/samples/wifi_1png select operation enable/disable [img]//images/samples/wifi_2png action execute drop-down adddefault open option [img]//images/samples/wifi_3png personal passphrase enterprise required certificate scope provide ssid field test_network [img]//images/samples/wifi_4png click apply button check status [img]//images/samples/wifi_5png ","summary":"\nOverview\nThe EMDK for Android allows you to configure Wi-Fi of a Symbol device. \n\nThe available actions are:\n  \nDisable Wi-Fi  \nEnable Wi-Fi  \nAdd a Network  \nConnect to a Network\nEnable a Network\nDisconnect from a Network\nDisable a Network\nRemove a Network\n\n Note: In order to perform all Wi-Fi network operations, Wi-Fi should be enabled.","url":"/emdk-for-android/3-1/samples/wifi"},{"title":"Adding features to Profile Manager","keywords":"## overview tutorial helps adding features profile manager newly created existing [emdk Android](https://developer.motorolasolutions.com/community/android/emdk) application creation common step tutorials api targeted respective creating select project package explorer click emdk menu present top-bar option window [img]//images/addprofilemanagerfeatureimage/emdk_profile_managerjpg create assign myemdkprofile [img]//images/addprofilemanagerfeatureimage/create_new_profilejpg set editor left hand side [img]//images/addprofilemanagerfeatureimage/profile_editor_43jpg wizard data capture capturing barcode msr mx wireless clock access browser encrypt configuring symbol device based requirements ","summary":"\nOverview\nThis tutorial helps you adding different features using Profile Manager to your newly created or existing Profile for any EMDK for Android application.","url":"/emdk-for-android/3-1/tutorial/tutAddProfileManagerFeature"},{"title":"Advanced Scanning Tutorial using Barcode API","keywords":"## overview guide walk creating emdk android application [barcode/scanning apis]//api/barcode/ introduced perform additional options scanning operations symbol devices profile wizard api [barcode manager]//api/barcode/barcodemanager primary object access barcode feature tutorial explore api]//api/barcode/ features developing advanced scan barcodes focuses soft trigger button hard device > note barcode/scanning apis configured programmatically code configuring * **device types** supported specific serial ssi scanner camera **[decoder params]//api/barcode/scannerconfig-decoderparams** configure types decoders applications type decoder upca **[reader params]//api/barcode/scannerconfig-readerparams** reader params illumination mode **[scan params]//api/barcode/scannerconfig-scanparams** scanparams class parameters vibration param tone set apply media notification alarm tones silent passing parameter attribute provide list user select including pass ###prerequisites java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting project advancedscanningtutorial studio click [here]//tutorial/tutcreateprojectandroidstudio eclipse [here]//tutorial/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]//tutorial/tutenableemdkeclipseadt common projects permissions modify application's manifestxml library permission [img]//images/advancedscanningtutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/advancedscanningtutorialimages/manifest_permissions_addedjpg ##adding start add references libraries import comsymbolemdkemdkmanager comsymbolemdkemdkmanageremdklistener comsymbolemdkbarcodescandatacollection comsymbolemdkbarcodescannerdatalistener comsymbolemdkbarcodescannerstatuslistener comsymbolemdkbarcodestatusdata extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` `statuslistener` notifying client notify events override `onstatus` function `datalistener` data `ondata` finally `oncheckedchangelistener` overriden method `oncheckedchanged` called checks unchecks checkbox checkboxes check uncheck based requirement public mainactivity extends implements statuslistener datalistener oncheckedchangelistener { @override void onclosed // todo auto-generated stub } onopenedemdkmanager arg0 ondatascandatacollection scandatacollection onstatusstatusdata statusdata oncheckedchangedcompoundbutton buttonview boolean ischecked press ctrl+alt+o cmd+alt+o organize imports ctrl+shft+o cmd+shft+o create global variables hold instance objects emdkmanager [barcodemanager]//api/barcode/barcodemanager [scanner]//api/barcode/scanner ui elements [Checkboxes](https://developer.android.com/reference/android/widget/CheckBox.html) starting [TextView](https://developer.android.com/reference/android/widget/TextView.html) display status operation [EditText](https://developer.android.com/reference/android/widget/EditText.html) populate scanned declare variable call setprofile required avoiding exceptions store private = null manager barcodemanager app scanbutton text view textview statustextview edit edittext dataview checkboxcode11 checkboxcode39 checkboxcode128 checkboxcodeupca ean checkboxean8 checkboxean13 checkboxilluminationmode decodehapticfeedback checkboxvibrationmode drop spinner deviceselectionspinner streaming beep played scantonespinner array adapter arrays downs arrayadapter spinnerdataadapter devicelist current index selection int scannerindex avoid calling listener isscantonefirsttime till [img]//images/advancedscanningtutorialimages/variables_addedjpg remaining part [img]//images/advancedscanningtutorialimages/variables_added_remainingjpg due divided multiple screen captures design simple fields mentioned [Spinner](https://developer.android.com/guide/topics/ui/controls/spinner.html) bottom [Button](https://developer.android.com/reference/android/widget/Button.html) lots embed [ScrollView](https://developer.android.com/reference/android/widget/ScrollView.html) remove inside res/layout/activity_mainxml layout ctrl+shft+f cmd+shft+f indentation ctrl+alt+i cmd+alt+i [img]//images/advancedscanningtutorialimages/ui_layoutjpg `oncreate` reference declared `res/layout/activity_mainxml` order [Activity](https://developer.android.com/reference/android/app/Activity.html). `setontouchlistener` calls spinners getemdkmanager initialized checked ready findviewbyidridtextviewstatus findviewbyidridedittext1 findviewbyidridcheckboxcode11 findviewbyidridcheckboxcode39 findviewbyidridcheckboxcode128 findviewbyidridcheckboxupca findviewbyidridcheckboxean8 findviewbyidridcheckboxean13 findviewbyidridillumination findviewbyidridvibration checkboxcode11setoncheckedchangelistenerthis checkboxcode39setoncheckedchangelistenerthis checkboxcode128setoncheckedchangelistenerthis checkboxcodeupcasetoncheckedchangelistenerthis checkboxean8setoncheckedchangelistenerthis checkboxean13setoncheckedchangelistenerthis checkboxilluminationmodesetoncheckedchangelistenerthis checkboxvibrationmodesetoncheckedchangelistenerthis findviewbyidriddevice_selection_spinner findviewbyidridscan_tone_spinner arrayadapterthis androidrlayoutsimple_spinner_item getresources getstringarrayrarrayscan_tone_array setdropdownviewresourceandroidrlayoutsimple_spinner_dropdown_item scantonespinnersetadapterspinnerdataadapter onclick addscanbuttonlistener item addspinnerscannerdeviceslistener addspinnerscantonelistener created returned callback emdkresults results emdkmanagergetemdkmanager getapplicationcontext return update resultsstatuscode emdkresultsstatus_codesuccess statustextviewsettextemdkmanager request failed complete [img]//images/advancedscanningtutorialimages/on_create_addedjpg errors rid `scan_tone_array` `arraysxml` file `res/values` folder write `` tag error adaraogg antimonyogg xenonogg vegaogg decode-shortwav decodewav [img]//images/advancedscanningtutorialimages/arrays_codejpg listeners `scanner devices` `scan tone` disable `deinitscanner` selected stored `scannerindex` `initializescanner` `setprofile` enabled interface re-initialize properties change simply changing setonitemselectedlistenernew onitemselectedlistener onitemselectedadapterview parent arg1 position long arg3 deinitscanner initializescanner catch scannerexception eprintstacktrace onnothingselectedadapterview scantonespinnersetonitemselectedlistenernew ignore firing time true purpose `isscantonefirsttime` initially [img]//images/advancedscanningtutorialimages/device_and_tone_listenersjpg [img]//images/advancedscanningtutorialimages/device_and_tone_listeners_1jpg `read` presses stop canceling pending asynchronous read `cancelread` releases turn put state turned pressing hardware automatically determined `scannertriggertype` `triggertypesoft_once` beam issuing findviewbyidridbtn_scan touch scans pressed stops released scanbuttonsetontouchlistenernew ontouchlistener ontouchview motionevent event eventgetaction == motioneventaction_down scannertriggertype triggertypesoft_once cancel reads reading scannerisreadpending scannercancelread puts scannerread release motioneventaction_up false [img]//images/advancedscanningtutorialimages/scan_touch_listenerjpg show methods cancels removes disables existing sets `null` scannerremovedatalistenerthis scannerremovestatuslistenerthis scannerdisable block statustextviewsettextstatus + egetmessage [img]//images/advancedscanningtutorialimages/de_init_methodjpg initialize `enable` enables make laser basically throws scannerexceptions `disable` remain locked unavailable case `statustextview` failure message devicelistsize barcodemanagergetdevicedevicelistgetscannerindex settextstatus close restart scanneradddatalistenerthis scanneraddstatuslistenerthis scannerenable [img]//images/advancedscanningtutorialimages/initialize_scanner_methodjpg [scannerconfig]//api/barcode/scannerconfig [decoder params]//api/barcode/scannerconfig-decoderparams [reader params]//api/barcode/scannerconfig-readerparams [scan params]//api/barcode/scannerconfig-scanparams back values `config` applying `scanner` `configdecoderparams` `code11``code39` `readerparamsreaderspecificcameraspecificilluminationmode` [illumination mode]//api/barcode/scannerconfig#scannerconfigilluminationmode cameraspecific `configscanparamsdecodehapticfeedback` lets [vibration mode]//api/barcode/scannerconfig-scanparams#decodehapticfeedback `configscanparamsdecodeaudiofeedbackuri` accept uri [audio tone]//api/barcode/scannerconfig-scanparams#decodeaudiofeedbackuri empty `configscanparamsdecodeaudiofeedbackuri ` words scannerconfig config scannergetconfig code11 checkboxcode11ischecked configdecoderparamscode11enabled code39 checkboxcode39ischecked configdecoderparamscode39enabled code128 checkboxcode128ischecked configdecoderparamscode128enabled codeupca checkboxcodeupcaischecked configdecoderparamsupcaenabled ean8 checkboxean8ischecked configdecoderparamsean8enabled ean13 checkboxean13ischecked configdecoderparamsean13enabled internal_camera1 checkboxilluminationmodeischecked && deviceselectionspinnergetselecteditemtostring containscamera configreaderparamsreaderspecificcameraspecificilluminationmode illuminationmodeon illuminationmodeoff checkboxvibrationmodeischecked configscanparamsdecodehapticfeedback configscanparamsaudiostreamtype audiostreamtyperinger string scantone scantonespinnergetselecteditemtostring scantonecontainsnone configscanparamsdecodeaudiofeedbackuri drop-down system/media/audio/notifications/ scannersetconfigconfig starts toastmaketextmainactivitythis appplied toastlength_shortshow statustextviewsettextetostring [img]//images/advancedscanningtutorialimages/set_profile_methodjpg settings runtime implemented earlier [img]//images/advancedscanningtutorialimages/on_checked_change_methodjpg [emdkmanager]//api/core/emdkmanager [emdklistener]//api/core/emdkmanager-emdklistener assign `emdkmanager` steps supports default `enumeratescannerdevices` rename argument `arg0` thisemdkmanager getinstancefeature_typebarcode enumeratescannerdevices [img]//images/advancedscanningtutorialimages/on_opened_methodjpg `getsupporteddevicesinfo` `barcodemanager` returns iterate friendly names friendlynamelist arraylist spinnerindex defaultindex barcodemanagergetsupporteddevicesinfo iterator devicelistiterator ithasnext scannerinfo scninfo itnext friendlynamelistaddscninfogetfriendlyname scninfoisdefaultscanner ++spinnerindex arrayadaptermainactivitythis deviceselectionspinnersetadapterspinnerdataadapter deviceselectionspinnersetselectiondefaultindex [img]//images/advancedscanningtutorialimages/enumerate_scanner_methodjpg received availability process format processed background thread android's [AsyncTask](https://developer.android.com/reference/android/os/AsyncTask.html) asynctask `asyncdataupdate` takes [scandatacollection]//api/barcode/scandatacollection processes `doinbackground` filter label strings passed `onpostexecute` datalength configures updated result asyncdataupdate protected doinbackgroundscandatacollection params[0] statusstr collection scandata scandatacollectiongetresult scannerresultssuccess scandatacollectiongetscandata prepare barcodedate datagetdata labeltype datagetlabeltype concatenate onpostexecutestring datalength++ clear cache dataviewgettextclear dataviewappendresult \\n onpreexecute onprogressupdatevoid overridden `scandatacollection` processing asyncdataupdateexecutescandatacollection [img]//images/advancedscanningtutorialimages/async_data_updatejpg key idle point displaying named `asyncstatusupdate` [statusdata]//api/barcode/statusdata retrieve populated updates asyncstatusupdate doinbackgroundstatusdata scannerstates statusdatagetstate states switch isscanning break waiting disabled statustextviewsettextresult `statusdata` asyncstatusupdateexecutestatusdata [img]//images/advancedscanningtutorialimages/async_status_updatejpg `ondestroy` resources ondestroy superondestroy clean emdkmanagerrelease [img]//images/advancedscanningtutorialimages/on_destroy_methodjpg `onstop` onstop superonstop [img]//images/advancedscanningtutorialimages/on_stop_methodjpg closed abruptly thisemdkmanagerrelease [img]//images/advancedscanningtutorialimages/on_closed_methodjpg coding run running connect latest usb port debug [img]//images/advancedscanningtutorialimages/home_screenpng [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html), working displayed [TextView](https://developer.android.com/reference/android/widget/TextView.html), `scanning` shows tc55 means configuration `none` tone/sound [img]//images/advancedscanningtutorialimages/status_scanningpng configurations [img]//images/advancedscanningtutorialimages/device_listpng [img]//images/advancedscanningtutorialimages/camera_scannerpng success toast applied knowledge [img]//images/advancedscanningtutorialimages/tone_listpng [img]//images/advancedscanningtutorialimages/tone_selectedpng open device's [img]//images/advancedscanningtutorialimages/camera_openedpng [img]//images/advancedscanningtutorialimages/final_scanpng ##important programming tips## `androidmanifestxml` >note >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile profiles ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Barcode/Scanning APIs introduced in EMDK V 3.0, to perform some of the additional options along with Scanning operations on your Symbol Android devices without using Profile Wizard.","url":"/emdk-for-android/3-1/tutorial/tutAdvancedScanningAPI"},{"title":"Apply Mx Profile Silently in a Non-Blocking way","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial discuss apply silently displaying user interface blocking **problem** profiles programmatically configuring feature profile wizard require operation applying configuration takes place ui main thread depending complexity seconds symbol application's blocked interact time period respond showing responding anr message wait **reason** heavy process performed manage components primarily functionalities happen single delay response actions irritate stop **solution** recommended run background completing smoothly interruptions non-blocking methods **1 handler** * [Handler](https://developer.android.com/reference/android/os/Handler.html) send [Message](https://developer.android.com/reference/android/os/Message.html) runnable objects thread's [MessageQueue](https://developer.android.com/reference/android/os/MessageQueue.html). handler instance queue schedule messages runnables executed point future enqueue action multiple repeated tasks downloading images displayed imageviews thumbnails download task created dedicated running care managing top-level activities broadcast receivers windows create threads communicate back **2 asynctask** [AsyncTask](https://developer.android.com/reference/android/os/AsyncTask.html) enables proper easy class operations publish results manipulate and/or handlers asynctask designed helper [Thread](https://developer.android.com/reference/java/lang/Thread.html) constitute generic threading framework asynctasks ideally short long periods highly apis provided `javautilconcurrent` pacakge [Executor](https://developer.android.com/reference/java/util/concurrent/Executor.html), [ThreadPoolExecutor](https://developer.android.com/reference/java/util/concurrent/ThreadPoolExecutor.html) [FutureTask](https://developer.android.com/reference/java/util/concurrent/FutureTask.html). requires solutions configure activity word trigger launch quickly close triggering applied > note closing immediately notifying independent app manager install ###prerequisites java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) apk file [here](https://github.com/Zebra/examples-emdk/archive/AllInstalledApps.zip) downloaded copy sd card information setting provide applyprofilesilentlytutorial handleractivity studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding [here]/tutaddprofilemanagerfeature add specific appmanagerprofile make access similar code left hand side editor window residing device's select list arrow [img]//images/applyprofilesilentlytutorialimages/app_manager_featurejpg field modify myappmanager empty drop-down path system /storage/sdcard1/allinstalledappsapk [img]//images/applyprofilesilentlytutorialimages/app_manager_detailsjpg settings [img]//images/applyprofilesilentlytutorialimages/app_manager_profile_createdjpg finish installing [img]//images/applyprofilesilentlytutorialimages/app_profile_createdjpg >note >now emdkconfigxml \\assets folder definition inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/applyprofilesilentlytutorialimages/emdk_config_file_entriesjpg permissions manifestxml library set permission [img]//images/applyprofilesilentlytutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/applyprofilesilentlytutorialimages/manifest_permissions_addedjpg ##adding ###using start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener extend implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold profilemanager >verify identical assign private string profilename = declare variable store object null remove line `setcontentviewrlayoutactivity_handler` `oncreate` oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults emdkmanagergetemdkmanagergetapplicationcontext //check return status resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/applyprofilesilentlytutorialimages/on_create_addedjpg reference event implemented order pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager getinstanceemdkmanagerfeature_typeprofile manager's final msg mhandlerobtainmessage threadnew msgobj applyprofileprofilename result processing mhandlersendmessagemsg backgroundstart ignore errors calls `applyprofile` applies parameter `msgobj` `finish` sending triggered closes turn complete onopened [img]//images/applyprofilesilentlytutorialimages/on_opened_methodjpg retrieve type casting `string` `handlemessage` receives populate mhandler handlemessagemessage passed typecasting `string msgobj` display [img]//images/applyprofilesilentlytutorialimages/handler_createdjpg helpful applications proflemanager activate built `processprofile` applyprofile applyprofilestring profilemanagerprocessprofileprofilename profilemanagerprofile_flagset string[] check processprofile emdkresultsstatus_codecheck_xml + successful catch exception exgetmessage [img]//images/applyprofilesilentlytutorialimages/apply_profilejpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/applyprofilesilentlytutorialimages/on_destroy_methodjpg coding starts execution visible small milliseconds closed avoid invisible basically transparent Styles](https://developer.android.com/guide/topics/ui/themes.html) `handleractivity` custom style res -> values stylesxml write `` tag @androidcolor/transparent true @null false styles res->values->stylesxml [img]//images/applyprofilesilentlytutorialimages/stylesjpg include `androidmanifestxml` androidtheme=@style/transparent resolve purpose calling **silently** manifest [img]//images/applyprofilesilentlytutorialimages/handler_stylesjpg completes part test thing option **asynctask** asynctaskactivity [AsyncTask](https://developer.android.com/reference/android/os/AsyncTask.html). follow modifydata [img]//images/applyprofilesilentlytutorialimages/async_oncreate_addedjpg named configureprofile `asynctask` extending runs returns doinbackgroundstring params string[1] processprfoile flag onpostexecutestring failure based asyntask executes onpreexecute updates onprogressupdateinteger progress `doinbackground` `onpostexecute` [img]//images/applyprofilesilentlytutorialimages/async_task_classjpg execute executing configureprofileexecute [img]//images/applyprofilesilentlytutorialimages/async_on_opened_methodjpg `ondestroy` added [img]//images/applyprofilesilentlytutorialimages/on_closed_destroyed_asyncjpg case `asynctaskactivity` simply [img]//images/applyprofilesilentlytutorialimages/async_stylesjpg ways connect latest runtime usb port debug change lable androidmanifestxml androidlabel=@string/app_name [img]//images/applyprofilesilentlytutorialimages/change_lable_namejpg label grid launcher [img]//images/applyprofilesilentlytutorialimages/handler_manifest_launcherjpg allinstalledapps installed give error [img]//images/applyprofilesilentlytutorialimages/handler_successpng intent-filter [img]//images/applyprofilesilentlytutorialimages/async_manifest_launcherjpg uninstall hang ##important programming tips## required >* deploying fail missing shared datawedge v1712 higher version profilemanagerprocessprofile ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutApplyProfileSilently"},{"title":"Basic Scanning Tutorial using Barcode API","keywords":"## overview guide walk creating emdk android application [barcode/scanning apis]//api/barcode/ introduced perform scanning operations symbol devices profile wizard api [barcode manager]//api/barcode/barcodemanager primary object access barcode feature tutorial explore api]//api/barcode/ developing basic scan barcodes > note barcode/scanning apis configured programmatically code ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting project provide basicscanningtutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects permissions modify application's manifestxml library set permission [img]//images/basicscanningtutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/basicscanningtutorialimages/manifest_permissions_addedjpg ##adding start add references libraries import comsymbolemdkemdkmanager comsymbolemdkemdkmanageremdklistener comsymbolemdkbarcodescandatacollection comsymbolemdkbarcodescannerdatalistener comsymbolemdkbarcodescannerstatuslistener comsymbolemdkbarcodestatusdata extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` statuslistener notifying client applications notify events override `onstatus` function finally datalistener data `ondata` press ctrl+alt+o cmd+alt+o organize imports ctrl+shft+o cmd+shft+o public class mainactivity extends implements datalistener{ @override void onclosed { // todo auto-generated method stub } onopenedemdkmanager emdkmanager ondatascandatacollection scandatacollection onstatusstatusdata statusdata create global variables hold instance objects barcodemanager scanner ui elements starting [TextView](https://developer.android.com/reference/android/widget/TextView.html) display status operation [EditText](https://developer.android.com/reference/android/widget/EditText.html) populate scanned declare variable store private = null manager device text view textview statustextview edit edittext dataview till [img]//images/basicscanningtutorialimages/variables_addedjpg design simple remove inside res/layout/activity_mainxml layout ctrl+shft+f cmd+shft+f indentation oncreate reference declared order [Activity](https://developer.android.com/reference/android/app/Activity.html). call getemdkmanager initialized checked ready findviewbyidridtextviewstatus findviewbyidridedittext1 created returned callback emdkresults results emdkmanagergetemdkmanager getapplicationcontext check return update resultsstatuscode emdkresultsstatus_codesuccess statustextviewsettextemdkmanager request failed complete `oncreate` [img]//images/basicscanningtutorialimages/on_create_addedjpg write `initializescanner` initialize listeners `enable` enables hardware make turn laser basically enabled throws scannerexceptions `disable` remain locked unavailable `read` starts asynchronous put state turned pressing trigger automatically determined `scannertriggertype` notification registered read canceled issuing `cancelread` submitted pending fail recommended calling `isreadpending` submitting called idle received checking multiple times executed time initializescanner scannerexception == thisemdkmanager getinstancefeature_typebarcode default defined barcodemanagergetdevicedeviceidentifierdefault scanneradddatalistenerthis scanneraddstatuslistenerthis hard mode user manually scannertriggertype triggertypehard scannerenable scannerread [img]//images/basicscanningtutorialimages/initialize_scanner_methodjpg interface event implemented pass assign `emdkmanager` earlier steps rename argument `arg0` catch eprintstacktrace toast toastmaketextmainactivitythis button toastlength_shortshow onopened [img]//images/basicscanningtutorialimages/on_opened_methodjpg mentioned availability process format processed background thread block android's [AsyncTask](https://developer.android.com/reference/android/os/AsyncTask.html) asynctask `asyncdataupdate` takes [scandatacollection]//api/barcode/scandatacollection processes `doinbackground` filter label type strings passed `onpostexecute` int datalength configures updated result asyncdataupdate protected string doinbackgroundscandatacollection params statusstr params[0] collection scandata && scandatacollectiongetresult scannerresultssuccess arraylist getscandata iterate prepare barcodedate datagetdata labeltype datagetlabeltype concatenate + onpostexecutestring datalength++ clear cache scans dataviewgettextclear dataviewappendresult \\n onpreexecute onprogressupdatevoid values overridden passing `scandatacollection` processing asyncdataupdateexecutescandatacollection [img]//images/basicscanningtutorialimages/async_data_updatejpg [img]//images/basicscanningtutorialimages/async_data_update_remaining_1jpg remaining part [img]//images/basicscanningtutorialimages/async_data_update_remaining_2jpg divided screen captures due long body key returns specific point `statuslistener` displaying named `asyncstatusupdate` [statusdata]//api/barcode/statusdata retrieve populated current updates asyncstatusupdate doinbackgroundstatusdata scannerstates statusdatagetstate states switch case break waiting disabled statustextviewsettextresult `statusdata` asyncstatusupdateexecutestatusdata [img]//images/basicscanningtutorialimages/async_status_updatejpg [img]//images/basicscanningtutorialimages/async_status_update_remainingjpg `ondestroy` release resources ondestroy superondestroy clean emdkmanagerrelease [img]//images/basicscanningtutorialimages/on_destroy_methodjpg `onstop` disable onstop superonstop releases scannerdisable [img]//images/basicscanningtutorialimages/on_stop_methodjpg closed abruptly thisemdkmanagerrelease [img]//images/basicscanningtutorialimages/on_closed_methodjpg coding decoder apis]//api/barcode run running connect latest runtime usb port debug [img]//images/basicscanningtutorialimages/home_screenpng [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html), listener working displayed [TextView](https://developer.android.com/reference/android/widget/TextView.html), `scanning` [img]//images/basicscanningtutorialimages/status_scanningpng `idle` [img]//images/basicscanningtutorialimages/status_idlepng depth advanced ##important programming tips## required androidmanifestxml >note >* include installing deploying missing shared datawedge v1712 higher version test profilemanagerprocessprofile profiles learned understand concentrate ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Barcode/Scanning APIs introduced in EMDK V 3.0, to perform Scanning operations on your Symbol Android devices without using Profile Wizard.","url":"/emdk-for-android/3-1/tutorial/tutBasicScanningAPI"},{"title":"Pairing with Bluetooth Scanning device using Bluetooth Scanner API","keywords":"## overview guide walk creating emdk android application [bluetooth scanner api]//api/barcode introduced perform pairing bluetooth scanning device utility api > note part [barcode initially connected turn app running tc55 turned scan barcode rs507 start process pair tutorial explore developing basic allowing profile wizard configured programmatically code ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting project provide bluetoothscannertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk symbol technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects permissions modify application's manifestxml library set permission barcodes [img]//images/bluetoothscannertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/bluetoothscannertutorialimages/manifest_permissions_addedjpg ##adding add references libraries import comsymbolemdkemdkmanager comsymbolemdkbarcodebarcodemanager make activity implement [emdklistener]//api/core/emdkmanager-emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` [barcodemanager​scannerconnectionlistener]//api/barcode/barcodemanager-scannerconnectionlistener interface notify client disconnected mobile override `onconnectionchange` method called press ctrl+alt+o cmd+alt+o organize imports ctrl+shft+o cmd+shft+o public class mainactivity extends emdkmanageremdklistener barcodemanagerscannerconnectionlistener { @override void onopenedemdkmanager emdkmanager } onclosed onconnectionchangeconnectionstatus connectionstatus create global variables hold instance objects barcodemanager ui elements [TextView](https://developer.android.com/reference/android/widget/TextView.html) notifying intermediate status operations performed // text view display operation private textview statusview = null declare variable store object manager till [img]//images/bluetoothscannertutorialimages/variables_addedjpg design simple simply remove inside res/layout/activity_mainxml layout [img]//images/bluetoothscannertutorialimages/layout_addedjpg ctrl+alt+i cmd+alt+i auto indent lines ctrl+shft+f cmd+shft+f `oncreate` reference declared order [Activity](https://developer.android.com/reference/android/app/Activity.html). call getemdkmanager initialized checked ready findviewbyidridtextviewstatus created returned callback emdkresults results emdkmanagergetemdkmanager getapplicationcontext check return update resultsstatuscode emdkresultsstatus_codesuccess statusviewsettextstatus + request failed complete [img]//images/bluetoothscannertutorialimages/on_create_addedjpg [emdk manager]//api/core/emdkmanager `statusview` message [scannerconnectionlistener]//api/barcode/barcodemanager-scannerconnectionlistener connected/disconnected events adding open success thisemdkmanager getinstanceemdkmanagerfeature_typebarcode connection listener receive barcodemanageraddconnectionlistenerthis initialize initscanner [img]//images/bluetoothscannertutorialimages/on_opened_methodjpg error added `initscanner` initializing number supported devices list devicelist getsupporteddevicesinfo iterates checks refering friendly initializes scannerinfo devicelist{ ifscannerinfogetfriendlynameequalsignorecasebluetooth barcodemanagergetdevicescannerinfo iteration support finally scannerenable source == iterate supports ifscanner statusviewsettextbluetooth }else{ catch scannerexception egetmessage [img]//images/bluetoothscannertutorialimages/init_scannerjpg de-initialize named `deinitscanner` sequence cancel pending read disable release resource eventually `null` deinitialize deinitscanner reads scannercancelread scannerdisable scannerrelease [img]//images/bluetoothscannertutorialimages/de_init_scannerjpg [AsyncTask](https://developer.android.com/reference/android/os/AsyncTask.html) asynchronously updating updates depending result `asyncstatusupdate` asynctask asyncstatusupdate protected string doinbackgroundstring params params[0] onpostexecutestring [img]//images/bluetoothscannertutorialimages/async_status_updatejpg invoked state received returns statusbt connectionstatusgetconnectionstatetostring scannernamebt connectionstatusgetscannerinfo getfriendlyname `connected` invoke `disconnected` mentioned steps scannername device's scannergetscannerinfogetfriendlyname scannernameequalsignorecasescannernamebt asyncstatusupdateexecutestatus based switch connectionstatusgetconnectionstate case break [img]//images/bluetoothscannertutorialimages/on_connection_changejpg resources `scannerconnectionlistener` `emdkmanager` barcodemanagerremoveconnectionlistenerthis emdkmanagerrelease settextstatus closed unexpectedly close restart [img]//images/bluetoothscannertutorialimages/on_closedjpg coding run connect latest runtime usb port debug [img]//images/bluetoothscannertutorialimages/home_screenpng displays [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html) [img]//images/bluetoothscannertutorialimages/enable_bluetoothpng [img]//images/bluetoothscannertutorialimages/turning_on_bluetoothpng screen scanned [img]//images/bluetoothscannertutorialimages/barcode_screenpng shown [img]//images/bluetoothscannertutorialimages/bluetooth_scanner_connectedpng confirming paired updated lets settings confirmation -> [img]//images/bluetoothscannertutorialimages/devices_pairedpng confirms ##important programming tips## required androidmanifestxml >note >* include installing deploying fail missing shared ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Bluetooth Scanner API introduced in EMDK V 3.1, to perform pairing with Bluetooth Scanning device using Bluetooth Pairing Utility of Bluetooth Scanner API.","url":"/emdk-for-android/3-1/tutorial/tutBluetoothScannerAPI"},{"title":"Creating Project using Android Studio","keywords":"## overview tutorial helps creating android application project [android Studio](https://developer.android.com/sdk/index.html). common step tutorials [emdk Android](https://developer.motorolasolutions.com/community/android/emdk) api launched fresh studio [img]//images/creatingprojectandroidstudioimages/fresh_launchjpg click button start quick section [img]//images/creatingprojectandroidstudioimages/create_new_project_from_freshjpg open [img]//images/creatingprojectandroidstudioimages/existing_open_projectjpg file top left select option [img]//images/creatingprojectandroidstudioimages/create_new_project_from_existingjpg pop creation screen details assign specific emdk feature company domain [img]//images/creatingprojectandroidstudioimages/app_namejpg `emdk symbol technologies 16` 19` depending project/emdk requirement [img]//images/creatingprojectandroidstudioimages/select_minimum_sdkjpg blank activity add mobile [img]//images/creatingprojectandroidstudioimages/blank_activityjpg finish created [img]//images/creatingprojectandroidstudioimages/create_project_finishjpg [img]//images/creatingprojectandroidstudioimages/main_activityjpg >note `\\assets` folder present structure default profile simply clicking `app` directory selecting `assets folder` `new > [img]//images/creatingprojectandroidstudioimages/add_assets_folderjpg [img]//images/creatingprojectandroidstudioimages/assets_folder_creatingjpg manually added [img]//images/creatingprojectandroidstudioimages/assets_folder_createdjpg ","summary":"Overview\n\nThis tutorial helps you creating a new Android application project using Android Studio. This is going to be a common step for all the tutorials that use EMDK for Android API.","url":"/emdk-for-android/3-1/tutorial/tutCreateProjectAndroidStudio"},{"title":"Creating Project using Eclipse with ADT","keywords":"## overview tutorial helps creating android application project eclipse adt common step tutorials [emdk Android](https://developer.motorolasolutions.com/community/android/emdk) api > note aware [android Studio](https://developer.android.com/sdk/index.html) official ide migrate receive latest updates click [here]/tutcreateprojectandroidstudio create studio [img]//images/creatingprojecteclipseideimages/create_new_appjpg assign names package specific emdk feature set minimum required sdk jelly bean [img]//images/creatingprojecteclipseideimages/set_app_namejpg [img]//images/creatingprojecteclipseideimages/configure_projectjpg [img]//images/creatingprojecteclipseideimages/configure_launcher_iconjpg select empty activity [img]//images/creatingprojecteclipseideimages/create_activityjpg >note >if make tools platform [img]//images/creatingprojecteclipseideimages/empty_activityjpg finish >currently \\assets folder [img]//images/creatingprojecteclipseideimages/main_activityjpg ","summary":"Overview\n\nThis tutorial helps you creating a new Android application project using Eclipse ADT. This is going to be a common step for all the tutorials that use EMDK for Android API.","url":"/emdk-for-android/3-1/tutorial/tutCreateProjectEclipseADT"},{"title":"Enabling the EMDK in Eclipse with ADT","keywords":"## overview tutorial helps enabling emdk api project created eclipse adt access application common step tutorials [emdk Android](https://developer.motorolasolutions.com/community/android/emdk) select file -> properties click [img]//images/setup/image011jpg [img]//images/setup/image013jpg android left pane [img]//images/setup/image037jpg target list build targets version require [img]//images/setup/image039jpg >note >if confirm installed sdk platform apply >the library added [img]//images/setup/image041jpg java compiler error [img]//images/setup/compiler_errorjpg > correct change * enable specific settings compliance level [img]//images/setup/image101jpg ","summary":"Overview\n\nThis tutorial helps you enabling the EMDK API in your project created in Eclipse with ADT, so that you can access it in your application. This is going to be a common step for all the tutorials that use EMDK for Android API.","url":"/emdk-for-android/3-1/tutorial/tutEnableEMDKEclipseADT"},{"title":"Modifying Profiles With ProfileConfig API","keywords":"## overview guide walk creating emdk android application make [profile config]//api/core/profileconfig object modify profile settings programmatically order barcode data [keystroke output]//mx/data-capture/keystroke feature [emdk profiles]//guide/profile-manager ###prerequisites### * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting project > note provide modifybarcodeprofiletutorial tutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk api symbol technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding datacapture [here]/tutaddprofilemanagerfeature add specific manager modifybarcodeprofile access similar code features left hand side editor window select list arrow activityselection selected activities capture enabled automatically activity foreground [img]//images/modify_profile_settings_images/activity_selectionjpg identify datacaptureactivity required editing [img]//images/modify_profile_settings_images/activity_selection_parametersjpg parameters [img]//images/modify_profile_settings_images/activity_selection_parameter_package_namejpg applications package apply [img]//images/modify_profile_settings_images/activity_selection_parameter_activity_namejpg inside [img]//images/modify_profile_settings_images/activity_selection_donejpg [img]//images/modify_profile_settings_images/barcodejpg input section parameter populated [img]//images/modify_profile_settings_images/barcode_profile_editorjpg scanner datainputbarcode enable change [img]//images/modify_profile_settings_images/barcode_select_scanner_typejpg [img]//images/modify_profile_settings_images/barcode_select_decodersjpg keystroke delivery [img]//images/modify_profile_settings_images/keystroke_editorjpg output datadeliverykeystroke [img]//images/modify_profile_settings_images/enable_keystrokejpg [img]//images/modify_profile_settings_images/enable_keystroke_data_formattingjpg finish [img]//images/modify_profile_settings_images/profile_editing_donejpg close emdkconfigxml created \\assets folder file definition profiles create inspect reflecting made gui earlier advised manually updated controlled [img]//images/modify_profile_settings_images/emdk_config_activity_selection_changesjpg [img]//images/modify_profile_settings_images/emdk_config_keystroke_changesjpg permissions application's manifestxml library set permission [img]//images/modify_profile_settings_images/manifest_file_defaultjpg comsymbolemdkpermissionemdk' xml [img]//images/modify_profile_settings_images/manifest_file_updatedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener extend implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager //assign private string profilename = //declare variable store null oncreate call getemdkmanager initialized checked ready creation returned callback emdkresults results emdkmanagergetemdkmanager getapplicationcontext check return status processprofile resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/modify_profile_settings_images/main_activity_declare_profile_namejpg reference interface trigger event implemented apis pass assign `emdkmanager` previous steps `profilemanager` rest thisemdkmanager //get process emdkmanagergetinstanceemdkmanagerfeature_typeprofile default `arg0` rename proflemanager install activate built `processprofile` performed action time pressed button chose getinstanceemdkmanagerfeature_typeprofile string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset toastmaketextmainactivitythis initialization toastlength_shortshow onopened [img]//images/modify_profile_settings_images/onopened_methodjpg override ondestroy release resources protected superondestroy clean emdkmanagerrelease [img]//images/modify_profile_settings_images/on_destroy_methodjpg lets values res/values/stringsxml layout files code128 code39 ean8 ean13 upca upce0 update remove res/layout/activity_mainxml checkboxes represent types enable/disable drop-down spinner type device bottom user activity_mainxml [img]//images/modify_profile_settings_images/create_layoutjpg declare ui elements writing mainactivityjava checkbox checkboxcode128 checkboxcode39 checkboxean8 checkboxean13 checkboxupca checkboxupce0 drop displays scanners scannertypespinner updating setbutton current barcodestatusbutton press ctrl+alt+o cmd+alt+o organize imports ctrl+shft+o cmd+shft+o declaration [img]//images/modify_profile_settings_images/declare_ui_elementsjpg declared findviewbyidridcheckboxcode128 findviewbyidridcheckboxcode39 findviewbyidridcheckboxean8 findviewbyidridcheckboxean13 findviewbyidridcheckboxupca findviewbyidridcheckboxupce0 buttons findviewbyidridbtn_set findviewbyidridbtn_barcode findviewbyidridscanner_type_spinner point [img]//images/modify_profile_settings_images/references_of_ui_elementsjpg scanning devices [Spinner](https://developer.android.com/guide/topics/ui/controls/spinner.html) arraylist strings scan barcodes array adapter item listener respective supported scannertypelist scannertypelistaddauto scannertypelistaddinternal_laser1 scannertypelistaddinternal_imager1 scannertypelistaddinternal_camera1 arrayadapter dataadapter arrayadapterthis androidrlayoutsimple_spinner_item setdropdownviewresourceandroidrlayoutsimple_spinner_dropdown_item scannertypespinnersetadapterdataadapter items setonitemselectedlistenernew onitemselectedlistener onitemselectedadapterview parent view int position long id setdevicetypeparentgetitematpositionposition tostring onnothingselectedadapterview [img]//images/modify_profile_settings_images/drop_down_detailsjpg setdevicetype takes modifies accessing manager's ways document handled raw profileconfig preferred option examples present methods work structured properly config modifying profileconfigobj [img]//images/modify_profile_settings_images/profile_config_declarationjpg profile_flagget retrieve exists profile_flagset save notified [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html) exist accepts argument based problemconfig modified sets setdevicetypestring devicetype profilemanagerprofile_flagget emdkresultsstatus_codefailure devicetypeequalsignorecaseauto profileconfigobjdatacapturebarcodescannerselection devicetypesauto devicetypeequalsignorecaseinternal_laser1 devicetypesinternal_laser1 devicetypeequalsignorecaseinternal_camera1 devicetypesinternal_camera1 devicetypesinternal_imager1 [img]//images/modify_profile_settings_images/set_device_type_methodjpg similarly retrieved profile_flagget' profileconfigobjdatacapturebarcodescanner_input_enabled checkbarcodestatus barcodestatusbutton' called complete [img]//images/modify_profile_settings_images/check_barcode_status_method_calljpg display enabled_statefalse barcodestatusbuttonsettextenable barcodestatusbuttonsettextdisable finally [img]//images/modify_profile_settings_images/check_barcode_status_methodjpg settings' concentrate top programatically disable pressing disabled scanned desired users selection functionalities perform operations id's listeners setbuttonsetonclicklisteneronclicklistener barcodestatusbuttonsetonclicklisteneronclicklistener makes [img]//images/modify_profile_settings_images/button_on_click_declarationjpg write onclick onclicklistener onclickview viewgetid switch case ridbtn_set updateprofile break ridbtn_barcode setbarcodestatus [img]//images/modify_profile_settings_images/button_on_click_definationjpg >note >we shown toast messages inform explained calling barcodestatusbuttongettexttostring equalsignorecaseenable //barcode enabled_statetrue [img]//images/modify_profile_settings_images/set_barcode_status_methodjpg unchecked vice-versa define updates attributes resultstring checkboxcode128ischecked profileconfigobjdatacapturebarcodedecoderscode128 checkboxcode39ischecked profileconfigobjdatacapturebarcodedecoderscode39 checkboxean8ischecked profileconfigobjdatacapturebarcodedecodersean8 ena13 checkboxean13ischecked profileconfigobjdatacapturebarcodedecodersean13 checkboxupcaischecked profileconfigobjdatacapturebarcodedecodersupca checkboxupce0ischecked profileconfigobjdatacapturebarcodedecodersupce0 successfully toastlength_short show catch exception exgetmessage [img]//images/modify_profile_settings_images/update_profile_methodjpg coding part test running connect latest runtime usb port >make debug run [img]//images/modify_profile_settings_images/initial_screenpng screen [img]//images/modify_profile_settings_images/update_barcode_statuspng choose [img]//images/modify_profile_settings_images/drop_down_for_device_typepng [img]//images/modify_profile_settings_images/update_settingspng edit text field added typs [img]//images/modify_profile_settings_images/scan_datapng ##important programming tips## androidmanifestxml >* include wizard considered auto bt_laser1 bt_imager1 bt_camera1 installing deploying fail missing shared datawedge v1712 higher version profilemanagerprocessprofile ","summary":"\nOverview\nThis guide will walk you through creating an EMDK For Android application that will make use Profile Config object to modify Profile Settings programmatically in order to get barcode data into your application using the KeyStroke output feature of EMDK Profiles.","url":"/emdk-for-android/3-1/tutorial/tutModifyBarcodeProfileSettings"},{"title":"Controlling Application Access using Access Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus controlling access device's applications [access manager]//mx/accessmgr feature configure set allowed run install profile enabled user installed whitelist executed and/or part default operating system disable select single manager supports > note enable refers mode options wizard **1 enable/disable white list** list apps added restrictions disabled **2 add packages package restricted comsymbolemdkmxaccessmanagertutorial multiple separated commas control comsymbolemdkmxaccessmanagertutorialcomsymbolemdkmxclocktutorialcomsymbolmxgprstutorial make executing order lose configuration change behavior reset settings back **3 remove specific names comtestapp1 comtestapp2 comtestapp3 unique identifiers requires refer **4 lots prevents adding manually time consuming **5 menu lets level provide full reduced create demonstrate add/remove to/from observe difference changed enabled/disabled programmatically ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting mxaccessmanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk symbol technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects [here]/tutaddprofilemanagerfeature accessmanagerprofile similar code left hand side editor window arrow [img]//images/mxaccessmanagertutorialimages/access_manager_featurejpg mentioned earlier drop showing operation programatically modes show modify wizrad myaccessmgryou field empty [img]//images/mxaccessmanagertutorialimages/access_mgr_detailsjpg apply provided display [img]//images/mxaccessmanagertutorialimages/access_profile_appliedjpg finish created rest [img]//images/mxaccessmanagertutorialimages/access_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui advised updated controlled [img]//images/mxaccessmanagertutorialimages/emdk_config_file_entriesjpg permissions application's manifestxml library permission [img]//images/mxaccessmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxaccessmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxaccessmanagertutorialimages/on_create_addedjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxaccessmanagertutorialimages/on_destroy_methodjpg reference interface trigger event implemented apis pass `emdkmanager` previous steps `profilemanager` rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed action pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed `check_xml` parse response details applied message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). processing simply displaying ahead check types scope sample `handleemdkresult` handle emdkresult handleemdkresultresults complete [img]//images/mxaccessmanagertutorialimages/on_opened_methodjpg shows declared `parsexml` eventually `displayresults` output [dialog](https://developer.android.com/reference/android/app/AlertDialog.html), declaring coming extracting parsing handleemdkresultemdkresults statusxmlresponse resultsgetstatusstring pull parser xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace displayresults [img]//images/mxaccessmanagertutorialimages/handle_emdk_resultjpg respective methods [xml Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxaccessmanagertutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxaccessmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxaccessmanagertutorialimages/display_resultsjpg moment annoying repetitively interfaces drop-down spinner edit text radio group relative layout adapter holds lists downs integers position item clicked drop-downs spinners entire view relativelayout whitelistlayout boolean with/without false true iswhitelistactive settingsaccessspinner deleting deletepackagespinner comma removed edittext deletepackageedittext addpackagespinner addpackageedittext array arrays arrayadapter dataadapter holding buttons option radiogroup selected settingsspinnerposition delete deletepackagespinnerposition addpackagespinnerposition setbutton [img]//images/mxaccessmanagertutorialimages/global_variablesjpg required texts enter enables finally >remove inside res/layout/activity_mainxml ui selections adapters held res/values values [img]//images/mxaccessmanagertutorialimages/right_click_valuejpg screen shot clicking [img]//images/mxaccessmanagertutorialimages/right_click_value_android_studiojpg [img]//images/mxaccessmanagertutorialimages/new_xml_filejpg arraysxml `` packagess elements listeners `oncreate` findviewbyidridbuttonset listener setbuttonsetonclicklisteneronclicklistsner findviewbyidridwhitelist_layout findviewbyidridradiogroupaccess radiogroupsetoncheckedchangelisteneroncheckedchangelistener findviewbyidridet_delete_package findviewbyidridet_add_package findviewbyidridsettings_access_spinner findviewbyidriddelete_package_spinner findviewbyidridadd_package_spinner arrayadapterthis androidrlayoutsimple_spinner_item getresources getstringarrayrarraysystem_settings_array setdropdownviewresourceandroidrlayoutsimple_spinner_dropdown_item settingsaccessspinnersetadapterdataadapter getstringarrayrarraydelete_packages_array deletepackagespinnersetadapterdataadapter getstringarrayrarrayadd_packages_array addpackagespinnersetadapterdataadapter settingsaccessspinnersetonitemselectedlisteneronitemselectedlistener deletepackagespinnersetonitemselectedlisteneronitemselectedlistener addpackagespinnersetonitemselectedlisteneronitemselectedlistener read detailed comments significance attribute [img]//images/mxaccessmanagertutorialimages/complete_on_createjpg point `oncheckedchangelistener` disbaled hidden oncheckedchangelistener oncheckedchangedradiogroup checkedid ridradio_without_whitelist clear deletepackageedittextsettext addpackageedittextsettext hide whitelistlayoutsetvisibilityviewgone ridradio_with_whitelist whitelistlayoutsetvisibilityviewvisible importing compound widget [img]//images/mxaccessmanagertutorialimages/on_checked_change_listenerjpg `onitemselectedlistener` actions onitemselectedlistener onitemselectedadapterview parent long spinnerid parentgetid ridsettings_access_spinner ++position riddelete_package_spinner show/hide selection deletepackageedittextsetvisibilityviewvisible deletepackageedittextsetvisibilityviewgone ridadd_package_spinner addpackageedittextsetvisibilityviewvisible addpackageedittextsetvisibilityviewgone onnothingselectedadapterview arg0 [img]//images/mxaccessmanagertutorialimages/on_item_slected_listenerjpg `onclicklistener` `modifyaccessmanagerprofilexml` forms users sets onclicklistener onclicklistsner onclickview viewgetid ridbuttonset modifyaccessmanagerprofilexml modifyaccessmanagerprofilexmliswhitelistactive [img]//images/mxaccessmanagertutorialimages/on_click_listenerjpg prepares input calls understand integres attributes add/delete integer forming passed modifyaccessmanagerprofilexmlboolean prepare existing modifydata[0] stored -> deleted clock [img]//images/mxaccessmanagertutorialimages/modify_profile_methodjpg coding test running connect latest runtime usb port debug [img]//images/mxaccessmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) app configured means visible [img]//images/mxaccessmanagertutorialimages/with_whitelistpng [img]//images/mxaccessmanagertutorialimages/add_package_spinnerpng [img]//images/mxaccessmanagertutorialimages/add_package_edit_textpng comsymbolmxaccessmanagertutorial comallinstalledapps comsymbolmxgprstutorial [img]//images/mxaccessmanagertutorialimages/add_packagespng current press [img]//images/mxaccessmanagertutorialimages/whitelist_modepng developed comment ensure works fine highlighted snapshot [img]//images/mxaccessmanagertutorialimages/commented_codejpg uncomment verifying [img]//images/mxaccessmanagertutorialimages/delete_packagepng previously ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version profilemanagerprocessprofile learned concentrate certificate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxAccessManager"},{"title":"Application Management with AppManger Profile Feature","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial configuring managing applications [appmanager]//mx/appmgr feature profiles user app management operations * **install** install provided apk file location **uninstall** remove **upgrade** upgrade/downgrade exists receive error parameter **default launcher** provide launcher enable reside **enable disable application** package disabling ability launch **clear list** clear list recent apps opened **manage protected manage adding removing info** info dialog shows detailed information actions force stop enable/disable data cache application's > note refer compatibility matrix check availability symbol devices [here]//mx/appmgr ###prerequisites java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) setting emdkmxappmanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects appmanager profile [here]/tutaddprofilemanagerfeature add specific manager mxappmanagerprofile make access similar code left hand side editor window select arrow installing uninstalling upgrading mentioned beginning [img]//images/mxappmanagertutorialimages/select_app_manager_featurejpg order modify programmatically providing path field /storage/sdcard1/heraldapk action fields [img]//images/mxappmanagertutorialimages/app_manager_install_valuejpg apply finish [img]//images/mxappmanagertutorialimages/app_manager_profile_createdjpg close >note >now emdkconfigxml created \\assets folder definition create inspect reflecting made parameters gui earlier advised manually updated controlled entry sd card entered creation [img]//images/mxappmanagertutorialimages/emdk_config_file_entriesjpg permissions manifestxml library set permission [img]//images/mxappmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxappmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors //assign private string profilename = //declare store object null parm-error sub-feature errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/mxappmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented apis pass assign `emdkmanager` previous steps `profilemanager` rest thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result wizard [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` declare parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxappmanagertutorialimages/on_opened_method_1jpg [img]//images/mxappmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxappmanagertutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxappmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxappmanagertutorialimages/display_resultsjpg override ondestroy release resources superondestroy //clean emdkmanagerrelease [img]//images/mxappmanagertutorialimages/on_destroy_methodjpg running coding run connect latest runtime usb port herald present >make debug displays toast [img]//images/mxappmanagertutorialimages/app_runpng installed [img]//images/mxappmanagertutorialimages/app_installedpng similarly leverage uninstall upgrade default [img]//images/mxappmanagertutorialimages/other_app_manager_featuresjpg ##important programming tips## required androidmanifestxml >* include deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned configure concentrate power explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxAppManager"},{"title":"Configure Device Browser using Browser Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring browser symbol [browser manager]//mx/browsermgr feature manager set default home page opened configure save form data turning on/off profile wizard create youtubecom turn remember typed forms ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting > note provide browsermanagertutorial requires kitkat studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk devices select [here]/tutenableemdkeclipseadt common projects adding [here]/tutaddprofilemanagerfeature add specific browserprofile make access similar code left hand side editor window list arrow [img]//images/mxbrowsermanagertutorialimages/browser_featurejpg field mybrowsermanager identify required editing programmatically empty discussed `youtubecom` `default page` url youtube `https://www.youtube.com` front `set longer type drop-down option [img]//images/mxbrowsermanagertutorialimages/browser_manager_detailsjpg [img]//images/mxbrowsermanagertutorialimages/browser_manager_details_selectedjpg **apply** apply settings provided **finish** [img]//images/mxbrowsermanagertutorialimages/browsermanagerstep5png **close** >note file **emdkconfigxml** created **\\assets** folder definition profiles inspect reflects made advised manually modified [img]//images/mxbrowsermanagertutorialimages/browsermanagerstep7png ##enabling permissions modify application's **androidmanifestxml** library enable comsymbolemdkpermissionemdk' xml androidmanifestxml resemble [img]//images/mxbrowsermanagertutorialimages/modifymanifestpng ##adding start references libraries import androidappactivity androidappalertdialog androidcontentdialoginterface androidosbundle androidtexttextutils androidutilxml androidviewmenu androidviewmenuitem comsymbolemdkemdkmanager comsymbolemdkemdkresults comsymbolemdkprofilemanager orgxmlpullv1xmlpullparser orgxmlpullv1xmlpullparserexception comsymbolemdkemdkmanageremdklistener javaiostringreader extend activity implement emdklistener public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying description case errors >verify identical assign emdkconfigxml private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxbrowsermanagertutorialimages/variables_addedjpg [img]//images/mxbrowsermanagertutorialimages/on_create_addedjpg `onopened` reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built earlier `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parameters parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxbrowsermanagertutorialimages/on_opened_method_1jpg [img]//images/mxbrowsermanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception content shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow added **displayresults** messages override ondestroy release resources protected superondestroy //clean emdkmanagerrelease coding configuration part browsers homepage disable saving run running connect latest runtime usb port debuging enabled envroment pressing play icon apk tray [img]//images/mxbrowsermanagertutorialimages/runapp1png [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) **ok** exit launch browser's **youtubecom** [img]//images/mxbrowsermanagertutorialimages/runapp2png ##important programming tips## >* include permission installing deploying fail missing shared ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxBrowserManager"},{"title":"Administer Use of Camera using Camera Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus managing cameras symbol devices [camera manager]//mx/cameramgr feature basically control front-camera rear-camera create disable enable back ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting > note provide cameramanagertutorial requires kitkat studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk camera manager select [here]/tutenableemdkeclipseadt common projects adding profile [here]/tutaddprofilemanagerfeature add specific cameraprofile make access similar code left hand side editor window list arrow [img]//images/mxcameramanagertutorialimages/camera_featurejpg field mycameramanager identify required editing programmatically empty manage fields wizard configure drop-down option [img]//images/mxcameramanagertutorialimages/camera_manager_detailsjpg [img]//images/mxcameramanagertutorialimages/camera_manager_details_selectedjpg apply settings provided [img]//images/mxcameramanagertutorialimages/camera_profile_createdjpg finish configuring created [img]//images/mxcameramanagertutorialimages/camera_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxcameramanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission [img]//images/mxcameramanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxcameramanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxcameramanagertutorialimages/variables_addedjpg [img]//images/mxcameramanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxcameramanagertutorialimages/on_opened_method_1jpg [img]//images/mxcameramanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxcameramanagertutorialimages/parse_xml_1jpg [img]//images/mxcameramanagertutorialimages/parse_xml_2jpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxcameramanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxcameramanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxcameramanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug enabled accessible initially default [img]//images/mxcameramanagertutorialimages/camera_enabledpng [img]//images/mxcameramanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) disabled [img]//images/mxcameramanagertutorialimages/camera_disabledpng edit [img]//images/mxcameramanagertutorialimages/edit_camera_profilejpg [img]//images/mxcameramanagertutorialimages/enable_camera_wizardjpg enable/disable ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned applications understand concentrate power key explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxCameraManager"},{"title":"Set the Roaming State using Cellular Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring roaming state symbol turn on/off data [cellular manager]//mx/cellularmgr feature create ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting > note provide cellularmanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding cellular manager profile [here]/tutaddprofilemanagerfeature add specific cellularprofile make access similar code left hand side editor window select list arrow [img]//images/mxcellularmanagertutorialimages/cellular_featurejpg field mycellularmanager identify required editing programmatically empty configure background devices apps services work connected wi-fi discussed wizard set drop-down option [img]//images/mxcellularmanagertutorialimages/cellular_manager_detailsjpg [img]//images/mxcellularmanagertutorialimages/cellular_manager_details_selectedjpg apply settings provided [img]//images/mxcellularmanagertutorialimages/cellular_profile_createdjpg finish created [img]//images/mxcellularmanagertutorialimages/cellular_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxcellularmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library permission [img]//images/mxcellularmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxcellularmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxcellularmanagertutorialimages/variables_addedjpg [img]//images/mxcellularmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxcellularmanagertutorialimages/on_opened_method_1jpg [img]//images/mxcellularmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxcellularmanagertutorialimages/parse_xml_1jpg [img]//images/mxcellularmanagertutorialimages/parse_xml_2jpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxcellularmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxcellularmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxcellularmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug turned device's -> mobile networks unchecked [img]//images/mxcellularmanagertutorialimages/data_roaming_offpng [img]//images/mxcellularmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) [img]//images/mxcellularmanagertutorialimages/data_roaming_onpng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned applications understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxCellularManager"},{"title":"Install CA Certificate using Certificate Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus installing certificates symbol [certificate manager]//mx/certmgr installed digital identify variety purposes including vpn wi-fi network access authentication servers apps email chrome create install sample ca certificate wificonfig configure profile eap-tls adding >note >we types pem pfx p12 file ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) download [here] put sd card refer information setting > note provide certmanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects manager feature [here]/tutaddprofilemanagerfeature add specific certificateprofile make similar code left hand side editor window select list arrow [img]//images/mxcertmanagertutorialimages/certificate_keystorejpg uninstalling keystore exist means initialize replacing previously existing choose action separate include multiple times field mykeystore required editing programmatically empty drop-down option [img]//images/mxcertmanagertutorialimages/initialize_android_keystorejpg password [img]//images/mxcertmanagertutorialimages/keystore_passwordjpg mentioned [img]//images/mxcertmanagertutorialimages/certificate_featurejpg mycertificatemanager discussed execute steps proceed wizard [img]//images/mxcertmanagertutorialimages/install_certjpg >to uninstall alias performing actions test-certificate type [img]//images/mxcertmanagertutorialimages/cert_typejpg path beginning /storage/sdcard1/testpem vary based rest fields [img]//images/mxcertmanagertutorialimages/cert_manager_wizardjpg apply settings provided [img]//images/mxcertmanagertutorialimages/certificate_profile_createdjpg added finish initializing created [img]//images/mxcertmanagertutorialimages/certificate_manager_profile_createdjpg close >now emdkconfigxml \\assets folder definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxcertmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission enable comsymbolemdkpermissionemdk' xml [img]//images/mxcertmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation declaration [img]//images/mxcertmanagertutorialimages/variables_addedjpg oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxcertmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous `profilemanager` rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclickdialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check scope retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxcertmanagertutorialimages/on_opened_method_1jpg [img]//images/mxcertmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxcertmanagertutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxcertmanagertutorialimages/build_failure_messagejpg `success` `failure` mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok alertdialogbuildercreate alertdialogshow [img]//images/mxcertmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxcertmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug recommended key cleared -> security clear credentials [img]//images/mxcertmanagertutorialimages/clear_credentialspng disabled [img]//images/mxcertmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) verify executing navigate press [img]//images/mxcertmanagertutorialimages/add_networkpng tap 8021x eap [img]//images/mxcertmanagertutorialimages/security_optionpng scroll tls [img]//images/mxcertmanagertutorialimages/tlspng [img]//images/mxcertmanagertutorialimages/ca_certificate_installedpng listed config [img]//images/mxcertmanagertutorialimages/uninstall_certificatejpg ##important programming tips## androidmanifestxml >* deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxCertificateManager"},{"title":"Setting The Clock With ProfileManager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial configure device's date time [mx clock]//mx/clock feature profile manager expects attributes user set clock symbol * **timezone** timezone supported format **date** utc **time** **autotime** select network provided ###prerequisites java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting > note provide emdkmxclocktutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding [here]/tutaddprofilemanagerfeature add specific mxclockprofile make access similar code left hand side editor window list arrow parameter populated [img]//images/mxclocktutorialimages/clock_feature_parametersjpg enter timings means pst gmt automatically change local autotime lets unchecked [img]//images/mxclocktutorialimages/clock_parameters_valuesjpg foreample **name** mxclock gmt-0700 2014-12-22 1pm 8pm hour apply finish [img]//images/mxclocktutorialimages/clock_profile_createdjpg close >note >now emdkconfigxml created \\assets folder file definition profiles create inspect reflecting made parameters gui earlier advised manually updated controlled entry entered creation [img]//images/mxclocktutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library permission [img]//images/mxclocktutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxclocktutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical //assign private string profilename = //declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/mxclocktutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass assign `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result wizard [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` declare parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxclocktutorialimages/on_opened_method_1jpg [img]//images/mxclocktutorialimages/on_opened_method_2jpg methods reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxclocktutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxclocktutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessagedevice title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxclocktutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxclocktutorialimages/on_destroy_methodjpg running coding run connect latest runtime usb port >make debug [img]//images/mxclocktutorialimages/date_time_before_runningpng app changed [img]//images/mxclocktutorialimages/time_after_running_apppng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) notice notification bar [img]//images/mxclocktutorialimages/date_timepng ##important programming tips## required androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned configuring concentrate explore ","summary":"Overview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxClock"},{"title":"Set Default Launcher Application Using App Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus functions app manager user set launcher default enable **1 profile wizard** initially configure ehs home screen wizard [enterprise (EHS)](https://developer.motorolasolutions.com/docs/DOC-1875) replacement symbol devices designed applications launched replace existing **2 api** modify setting code applicable [galaxy Launcher](https://www.appsapk.com/galaxy-launcher/) understand parameters ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) download install required started information downloading discussed ([EHS](https://developer.motorolasolutions.com/docs/DOC-1875) Launcher](https://www.appsapk.com/galaxy-launcher/)). [here](https://portal.motorolasolutions.com/Support/US-EN/Resolution?solutionId=92627&redirectForm=search&searchQuery=%3FsearchType%3Dsimple%26searchTerm%3DDownload%20EHS). unzip file apk galaxy [here](https://www.appsapk.com/galaxy-launcher/). downloaded put sd card requires *package name* package field case theses files sources >note >android provide names installed [created application](https://github.com/Zebra/examples-emdk/archive/AllInstalledApps.zip) finds programmatically displays list [download](https://github.com/Zebra/examples-emdk/archive/AllInstalledApps.zip) [source](https://github.com/Zebra/examples-emdk/archive/AllInstalledApps.zip) liking find **commotorolasolutionsenterprisehomescreen** [img]//images/mxdefaultlaunchertutorialimages/ehs_appjpg **comepiclaunchertw** [img]//images/mxdefaultlaunchertutorialimages/galaxy_launcher_appjpg > note mxdefaultlaunchertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding appmanager [here]/tutaddprofilemanagerfeature add specific feature defaultlauncherprofile make access similar left hand side editor window select arrow operations apps installing uninstalling upgrading concentrating parameter populated [img]//images/mxdefaultlaunchertutorialimages/select_app_manager_featurejpg drop-down action supported [img]//images/mxdefaultlaunchertutorialimages/app_manager_featuresjpg [img]//images/mxdefaultlaunchertutorialimages/feature_default_launcherjpg empty earlier previously found commotorolasolutionsenterprisehomescreen fields [img]//images/mxdefaultlaunchertutorialimages/app_manager_install_valuejpg apply finish [img]//images/mxdefaultlaunchertutorialimages/app_manager_profile_createdjpg close >now emdkconfigxml created \\assets folder definition profiles create inspect reflecting made gui advised manually updated controlled entry entered creation [img]//images/mxdefaultlaunchertutorialimages/emdk_config_file_entriesjpg permissions application's manifestxml library permission [img]//images/mxdefaultlaunchertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxdefaultlaunchertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description errors >verify identical //assign private string profilename = //declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/mxdefaultlaunchertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass assign `emdkmanager` previous steps `profilemanager` rest >set argument thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` `handleemdkresult` handle emdkresult handleemdkresultresults onopened [img]//images/mxdefaultlaunchertutorialimages/on_opened_methodjpg shows declared `parsexml` eventually `displayresults` output [dialog](https://developer.android.com/reference/android/app/AlertDialog.html), declaring coming extracting parsing handleemdkresultemdkresults statusxmlresponse resultsgetstatusstring pull parser xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace displayresults [img]//images/mxdefaultlaunchertutorialimages/handle_emdk_resultjpg respective methods lets [xml Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception complete [img]//images/mxdefaultlaunchertutorialimages/parse_xmljpg declare form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxdefaultlaunchertutorialimages/build_failure_messagejpg [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html) [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) textutilsisemptyerrordescription toastmaketextmainactivitythis changed toastlength_shortshow mainactivitythis title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxdefaultlaunchertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxdefaultlaunchertutorialimages/on_destroy_methodjpg settings point mototrola run remove textview inside res/layout/activity_mainxml edittext enter layout activity_mainxml res/layout/ [img]//images/mxdefaultlaunchertutorialimages/activity_mainjpg main ui elements edit text ro packagenameedittext setdefaultlauncherbutton [img]//images/mxdefaultlaunchertutorialimages/ui_element_referencejpg `oncreate` findviewbyidridpackage_name findviewbyidridbtn_set_default_launcher [img]//images/mxdefaultlaunchertutorialimages/reference_on_createjpg write function takes input sets prepares accepting provided calls `profile manager` `emdkresults` setlauncherapplicationstring packagename prepare modifydata[0] `setlauncherapplication` [img]//images/mxdefaultlaunchertutorialimages/set_launcher_app_methodjpg implementing listener `setdefaultlauncherbutton` valid setdefaultlauncherbuttonsetonclicklistenernew onclicklistener onclickview packagenameedittextgettexttostring textutilsisemptypackagename invalid setlauncherapplicationpackagename finally [img]//images/mxdefaultlaunchertutorialimages/final_on_create_methodjpg coding configuration part running connect latest runtime usb port debug tc [img]//images/mxdefaultlaunchertutorialimages/default_launcherpng automatically closes [img]//images/mxdefaultlaunchertutorialimages/ehs_launcherpng press menu key [img]//images/mxdefaultlaunchertutorialimages/device_home_keypng [img]//images/mxdefaultlaunchertutorialimages/mx_default_launcher_apppng obtained [img]//images/mxdefaultlaunchertutorialimages/enter_package_namepng `set launcher` [img]//images/mxdefaultlaunchertutorialimages/galaxy_launcherpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) change place ##important programming tips## androidmanifestxml >* include deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned configuring concentrate power explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxDefaultLauncher"},{"title":"Allow installation of apps from unknown sources using DevAdmin Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus installation apps unknown sources symbol [devadmin manager]//mx/devadmin feature > note phone personal data vulnerable attack agree solely responsible damage loss result create devices ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting provide devadmintutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding devadmin manager profile [here]/tutaddprofilemanagerfeature add specific devadminprofile make access similar code left hand side editor window select dev admin list arrow [img]//images/mxdevadminmanagertutorialimages/devadmin_featurejpg field mydevadminmanager identify required editing programmatically empty screen-lock timeout interval occur configuring administration providing package class administrator discussed wizard install app drop-down option turn [img]//images/mxdevadminmanagertutorialimages/devadmin_manager_detailsjpg [img]//images/mxdevadminmanagertutorialimages/devadmin_manager_details_selectedjpg apply settings provided [img]//images/mxdevadminmanagertutorialimages/devadmin_profile_createdjpg finish allowing created [img]//images/mxdevadminmanagertutorialimages/devadmin_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxdevadminmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission [img]//images/mxdevadminmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxdevadminmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxdevadminmanagertutorialimages/variables_addedjpg [img]//images/mxdevadminmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxdevadminmanagertutorialimages/on_opened_method_1jpg [img]//images/mxdevadminmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxdevadminmanagertutorialimages/parse_xml_1jpg [img]//images/mxdevadminmanagertutorialimages/parse_xml_2jpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxdevadminmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxdevadminmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxdevadminmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug turned device's -> security default [img]//images/mxdevadminmanagertutorialimages/unknown_sources_offpng [img]//images/mxdevadminmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) [img]//images/mxdevadminmanagertutorialimages/unknown_sources_onpng applications ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned understand concentrate power key explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxDevAdminManager"},{"title":"Configure Screen Off Timeout Interval using Display Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus setting screen timeout interval symbol device's turned time inactivity [display manager]//mx/displaymgr feature option popularly sleep present settings -> display create set specific seconds means automatically applied profile wizard ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information > note provide displaymanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding manager [here]/tutaddprofilemanagerfeature add displayprofile make access similar code left hand side editor window select list arrow [img]//images/mxdisplaymanagertutorialimages/display_featurejpg field mydisplaymanager identify required editing programmatically empty discussed drop-down [img]//images/mxdisplaymanagertutorialimages/display_manager_detailsjpg [img]//images/mxdisplaymanagertutorialimages/display_manager_details_selectedjpg apply provided [img]//images/mxdisplaymanagertutorialimages/display_profile_createdjpg finish configuring created [img]//images/mxdisplaymanagertutorialimages/display_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxdisplaymanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library permission [img]//images/mxdisplaymanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxdisplaymanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxdisplaymanagertutorialimages/variables_addedjpg [img]//images/mxdisplaymanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response details message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxdisplaymanagertutorialimages/on_opened_method_1jpg [img]//images/mxdisplaymanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxdisplaymanagertutorialimages/parse_xml_1jpg [img]//images/mxdisplaymanagertutorialimages/parse_xml_2jpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxdisplaymanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessagetimeout title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxdisplaymanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxdisplaymanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug checkout default [img]//images/mxdisplaymanagertutorialimages/default_sleep_timepng [img]//images/mxdisplaymanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) [img]//images/mxdisplaymanagertutorialimages/default_sleep_changedpng devices ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned configure applications understand concentrate power key explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxDisplayManager"},{"title":"Creating Encrypted File System (EFS) using Encrypt Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus encrypted file system efs storing data internal/external storage [encrypt manager]//mx/encryptmgr feature enables files transparently protect confidential attackers physical access hand developer set encryption policies xml create install key external symbol profile wizard ###prerequisites * java development kit jdk tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) make sd card option information setting > note provide encryptmanagertutorial requires kitkat studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk encrypt manager devices select [here]/tutenableemdkeclipseadt common projects adding [here]/tutaddprofilemanagerfeature add specific encryptprofile similar code left side editor window list arrow [img]//images/mxencryptmanagertutorialimages/encrypt_featurejpg field myencryptmanager identify required editing programmatically empty discussed newly installed drop-down section samplekey installing optional provided hex string length bytes random generated [img]//images/mxencryptmanagertutorialimages/install_keyjpg [img]//images/mxencryptmanagertutorialimages/create_efs_optionjpg sampleefs sample location mount path mounted /external belongs selected sdcard size mb 5mb 1mb exceed 4096mb [img]//images/mxencryptmanagertutorialimages/efs_profilejpg apply settings [img]//images/mxencryptmanagertutorialimages/encrypt_profile_createdjpg finish created [img]//images/mxencryptmanagertutorialimages/encrypt_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxencryptmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library permission [img]//images/mxencryptmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' [img]//images/mxencryptmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements emdkmanageremdklistener { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxencryptmanagertutorialimages/variables_addedjpg [img]//images/mxencryptmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxencryptmanagertutorialimages/on_opened_method_1jpg [img]//images/mxencryptmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxencryptmanagertutorialimages/parse_xml_1jpg [img]//images/mxencryptmanagertutorialimages/parse_xml_2jpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxencryptmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxencryptmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxencryptmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug [img]//images/mxencryptmanagertutorialimages/home_screenpng takes denied [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) browser -> directory efsstorage [img]//images/mxencryptmanagertutorialimages/efs_directorypng [img]//images/mxencryptmanagertutorialimages/efs_createdpng installation ##important programming tips## androidmanifestxml >* include deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned applications understand concentrate threat explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxEncryptManager"},{"title":"Errors When Processing Profiles","keywords":"## overview guide walk creating emdk android application analyze mx errors features declared profile creation occur due invalid input incorrect device configuration tutorial deliberately producing providing inputs `getstatusdocument` `getstatusstring` `emdkresults` obtain error description parsing resulting xml response compare output usual working case goal make understand find correct ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting project > note provide mxerrorstutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk api symbol technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding includes clock feature [here]/tutaddprofilemanagerfeature add specific manager mxerrorsprofile access similar code left hand side editor window select list arrow parameter populated [img]//images/mxerrorstutorialimages/select_clock_featurejpg configure values parameters parse display result dialog enter timezone date time format mentioned wizard field mmt valid proceed empty autotime unchecked [img]//images/mxerrorstutorialimages/clock_featuresjpg apply finish [img]//images/mxerrorstutorialimages/error_profile_createdjpg close >note >now emdkconfigxml created \\assets folder file definition profiles create inspect reflecting made gui earlier advised manually updated controlled entry attributes set [img]//images/mxerrorstutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library permission [img]//images/mxerrorstutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' [img]//images/mxerrorstutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type >verify identical //assign private string profilename = //declare store object null parm-error sub-feature errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/mxerrorstutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass assign `emdkmanager` previous steps `profilemanager` rest >set argument thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` details applied message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines functionality provided [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found respective xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` declare parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxerrorstutorialimages/on_opened_method_1jpg [img]//images/mxerrorstutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxerrorstutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxerrorstutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxerrorstutorialimages/display_resultsjpg override `ondestroy` release resources protected ondestroy superondestroy //clean emdkmanagerrelease [img]//images/mxerrorstutorialimages/on_destroy_methodjpg coding run running connect latest runtime usb port debug `resultsgetstatusstring` saved `statusxmlresponse` `` fails gmt+0530 looked fields finally displayed [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) user [img]//images/mxerrorstutorialimages/failed_to_set_clockpng change settings edit [img]//images/mxerrorstutorialimages/correct_datejpg [img]//images/mxerrorstutorialimages/clock_settings_changedpng identify kind helps debugging figure ##important programming tips## required androidmanifestxml >* include installing deploying fail missing shared ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will analyze MX errors that we get while using MX features that are declared in Profile creation.","url":"/emdk-for-android/3-1/tutorial/tutMxErrors"},{"title":"Configure Access Points using Mx GPRS Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring access points mobile networks present symbol [gprs manager]//mx/gprsmgr feature operations device's network **1 add/replace named apn** user add apn point replace existing set specific default wizard gprs manager requires inputs carrier att t-mobile custom supply details password > note option filed required **2 remove removes list apn's provide **3 apn's** additional input selecting action create demonstrate configure profile test ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting mxgprstutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding [here]/tutaddprofilemanagerfeature gprsprofile make similar code left hand side editor window select arrow [img]//images/mxgprsmanagertutorialimages/gprs_featurejpg discussed earlier changing attribute performing actions field mygprs helps modifying programmatically drop-down menu choose att_apn_1 check checkbox exixts exists unchecked wapcingular wap@cingulargprscom enter cingular1 [img]//images/mxgprsmanagertutorialimages/att_gprs_detailsjpg apply settings provided [img]//images/mxgprsmanagertutorialimages/att_profile_createdjpg finish created [img]//images/mxgprsmanagertutorialimages/att_gprs_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui advised manually updated controlled [img]//images/mxgprsmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library permission [img]//images/mxgprsmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxgprsmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxgprsmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxgprsmanagertutorialimages/on_opened_method_1jpg [img]//images/mxgprsmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxgprsmanagertutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxgprsmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxgprsmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxgprsmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug -> wireless names [img]//images/mxgprsmanagertutorialimages/existing_access_pointspng added [img]//images/mxgprsmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) [img]//images/mxgprsmanagertutorialimages/att_access_point_addedpng selected top-bar edit [img]//images/mxgprsmanagertutorialimages/first_editjpg drop [img]//images/mxgprsmanagertutorialimages/remove_apnjpg unique [img]//images/mxgprsmanagertutorialimages/remove_att_apnjpg edited removed finally [img]//images/mxgprsmanagertutorialimages/remove_all_apnjpg buttons final ensure verify [img]//images/mxgprsmanagertutorialimages/all_apn_removedpng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version profilemanagerprocessprofile learned devices applications understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxGPRSManager"},{"title":"Persist MX configurations using Persist Manager API","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus [persist manager]//mx/persistence user persist configuration xml's settings performing factory reset persisted applied default apply manually main purpose manager feature supports **1 adding xml persisted** create specific clock details > note profile data capture **2 removing xml** remove wizard query **3 receive list xml's** order **4 based parameters** find attributes persisting * persistasversion persistasorder persistiferror **5 reset** re-sends framework helps re-applying back files survive folder profiles demonstrate retrieved re-applied designing steps store app manager's install setting means change timing stored deliberately timings uninstall installed symbol tc55 finally ensure automatically time set path provided ###prerequisites java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) download apk sample [here](https://github.com/Zebra/examples-emdk/archive/AllInstalledApps.zip) respective package zip file os version [here](https://portal.motorolasolutions.com/Support/US-EN/Mobile+Networks+RFID+and+BarCode+Scanners/Mobile+Computers/Handheld+Computers/TC55) copy sd card/internal memory link update packages [here](https://portal.motorolasolutions.com/Support/US-EN/Mobile+Networks+RFID+and+BarCode+Scanners/Mobile+Computers/Handheld+Computers) information provide mxpersistmanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects [here]/tutaddprofilemanagerfeature add persistmanagerprofile make access similar code left hand side editor window select arrow [img]//images/mxpersistmanagertutorialimages/clock_featurejpg providing timezone date values utc pst gmt local enter foreample **name** mxclock **timezone** gmt-0700 **date** 2014-08-15 **time** 1pm 8pm hour format [img]//images/mxpersistmanagertutorialimages/clock_detailsjpg created [img]//images/mxpersistmanagertutorialimages/clock_profile_createdjpg proceed persistence [img]//images/mxpersistmanagertutorialimages/persist_managerjpg field persistclock action current persistent selector dialog [img]//images/mxpersistmanagertutorialimages/name_selector_clockjpg type generic/absolute drop-down option clock_profile [img]//images/mxpersistmanagertutorialimages/name_selector_clock_detailsjpg check error creation returns [img]//images/mxpersistmanagertutorialimages/persist_clock_completedjpg added [img]//images/mxpersistmanagertutorialimages/clock_profile_addedjpg discussed earlier follow show parameter [img]//images/mxpersistmanagertutorialimages/app_manager_parameter_listjpg mxappmanager card downloaded /storage/sdcard1/allinstalledappsapk devices [img]//images/mxpersistmanagertutorialimages/app_manager_detailsjpg [img]//images/mxpersistmanagertutorialimages/persist_app_managerjpg persistappmanager absolute/generic [img]//images/mxpersistmanagertutorialimages/persist_app_manager_completedjpg finish [img]//images/mxpersistmanagertutorialimages/persist_manager_profile_createdjpg close ready >note >now emdkconfigxml \\assets definition inspect reflecting made parameters gui advised updated controlled [img]//images/mxpersistmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library permission [img]//images/mxpersistmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' [img]//images/mxpersistmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying description case errors >verify identical assign private string profilename = declare object null parm-error sub-feature errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess success failed [img]//images/mxpersistmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented apis pass `emdkmanager` previous `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager activate built `processprofile` performed pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow result [emdkresults]//api/core/emdkresults successfully processed `check_xml` parse response display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead types scope retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxwirelessmanagertutorialimages/on_opened_method_1jpg [img]//images/mxwirelessmanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxpersistmanagertutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxpersistmanagertutorialimages/build_failure_messagejpg `success` `failure` mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxpersistmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxpersistmanagertutorialimages/on_destroy_methodjpg coding part run running connect latest runtime usb port debug date-time phone [img]//images/mxpersistmanagertutorialimages/before_running_apppng changed allinstalledapps [img]//images/mxpersistmanagertutorialimages/xml_persistedpng [img]//images/mxpersistmanagertutorialimages/date_time_updatedpng [img]//images/mxpersistmanagertutorialimages/app_installedpng browser tc /enterprise/usr/persist/mxframework/persistmgr [img]//images/mxpersistmanagertutorialimages/persist_pathpng erases applications resets system read present device's simultaneously press power programmable volume buttons shuts reboots navigating erasing reboot resends captured works [img]//images/mxpersistmanagertutorialimages/after_resetpng ##important programming tips## required androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher test profilemanagerprocessprofile learned configure understand concentrate gprs explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxPersistManager"},{"title":"Disable Airplane Mode Menu Option using Power Key Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring power key manager parameters airplane mode touch panel safe auto screen lock [power manager]//mx/powerkeymgr feature powerkey control options menu create disable option symbol ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting > note provide powerkeymanagertutorial requires kitkat studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk devices select [here]/tutenableemdkeclipseadt common projects adding profile [here]/tutaddprofilemanagerfeature add specific powerkeyprofile make access similar code left hand side editor window list arrow [img]//images/mxpowerkeymanagertutorialimages/power_key_featurejpg field mypowerkeymanager identify required editing programmatically empty configure **airplane mode** **touch panel** **safe **auto option** button instantly locks settings ui state** automatically powered discussed wizard user enabled back drop-down show [img]//images/mxpowerkeymanagertutorialimages/power_key_manager_detailsjpg [img]//images/mxpowerkeymanagertutorialimages/power_key_manager_details_selectedjpg apply provided [img]//images/mxpowerkeymanagertutorialimages/power_key_profile_createdjpg finish disabling created [img]//images/mxpowerkeymanagertutorialimages/power_key_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made gui earlier advised manually updated controlled [img]//images/mxpowerkeymanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission [img]//images/mxpowerkeymanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxpowerkeymanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxpowerkeymanagertutorialimages/variables_addedjpg [img]//images/mxpowerkeymanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxpowerkeymanagertutorialimages/on_opened_method_1jpg [img]//images/mxpowerkeymanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxpowerkeymanagertutorialimages/parse_xml_1jpg [img]//images/mxpowerkeymanagertutorialimages/parse_xml_2jpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxpowerkeymanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxpowerkeymanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxpowerkeymanagertutorialimages/on_destroy_methodjpg coding configuration part running connect latest runtime usb port debug device's -> means edit [img]//images/mxpowerkeymanagertutorialimages/airplane_mode_enabledpng run [img]//images/mxpowerkeymanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) disabled admin [img]//images/mxpowerkeymanagertutorialimages/airplane_mode_disabledpng [img]//images/mxpowerkeymanagertutorialimages/airplane_mode_reenablejpg ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned applications understand concentrate sd card explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxPowerKeyManager"},{"title":"Power Management using Power Manager API","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus [power manager]//mx/powermgr user power management operations symbol devices theses include setting sleep mode rebooting updating operating system **1 mode** feature enter order conserve **2 reboot** reboot restarts app **3 os update** manager update provide path package zip file resides device's external sd card based > note copy make work internal * **enterprise reset** resets data packages **factory **full wipe** performs full wipe supported kitkat version **os upgrade** upgrades/downgrades implementing understand ###prerequisites java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) download respective update/factory reset/enterprise reset [here](https://portal.motorolasolutions.com/Support/US-EN/Mobile+Networks+RFID+and+BarCode+Scanners/Mobile+Computers/Handheld+Computers/TC55) link tc55 [here](https://portal.motorolasolutions.com/Support/US-EN/Mobile+Networks+RFID+and+BarCode+Scanners/Mobile+Computers/Handheld+Computers) information mxpowermanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk adding profile [here]/tutaddprofilemanagerfeature add specific powermanagerprofile access similar code left hand side editor window select list arrow apps explained earlier parameter populated [img]//images/mxpowermanagertutorialimages/select_power_manager_featurejpg drop-down action field [img]//images/mxpowermanagertutorialimages/power_manager_featuresjpg shown drop suggests `do nothing` configuring mentioned `reset action` wizard option implement launch [img]//images/mxpowermanagertutorialimages/feature_do_nothingjpg mypowermanager refer empty apply finish [img]//images/mxpowermanagertutorialimages/power_manager_profile_createdjpg close >note >now emdkconfigxml created \\assets folder definition profiles create inspect reflecting made parameters gui advised manually updated controlled entry assigned values factory selection emdkconfig modify shortly [img]//images/mxpowermanagertutorialimages/emdk_config_file_entriesjpg permissions application's manifestxml library set permission [img]//images/mxpowermanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxpowermanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager ui elements required type description case errors >verify identical assign private string profilename = declare variable store object null text view displaying status textview statustextview radio group buttons options radiogroup pwrradiogroup edit edittext zipfilepathedittext zipfilepath initial executed onopened ready default -> int parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation [img]//images/mxpowermanagertutorialimages/global_variable_entryjpg oncreate call getemdkmanager initialized checked //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxpowermanagertutorialimages/on_create_addedjpg reference interface trigger event `statustextview` implemented apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued statustextviewsettextemdk thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface id alertdialog alert buildercreate alertshow returns result applying [emdkresults]//api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply ahead check types scope sample retrieve `getstatusstring` `handleemdkresult` handle emdkresult handleemdkresultresults [img]//images/mxpowermanagertutorialimages/on_opened_methodjpg shows declared `parsexml` eventually `displayresults` output [dialog](https://developer.android.com/reference/android/app/AlertDialog.html), declaring coming extracting parsing handleemdkresultemdkresults statusxmlresponse resultsgetstatusstring pull parser xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace displayresults [img]//images/mxpowermanagertutorialimages/handle_emdk_resultjpg methods lets [xml Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception complete [img]//images/mxpowermanagertutorialimages/parse_xmljpg form specifically `buildfailuremessage` formed match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxpowermanagertutorialimages/build_failure_messagejpg proceed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) textutilsisemptyerrordescription mainactivitythis title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxpowermanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxpowermanagertutorialimages/on_destroy_methodjpg layout/view remove inside res/layout/activity_mainxml displays triggers selected configures layout activity_mainxml [img]//images/mxpowermanagertutorialimages/activity_mainjpg addsetbuttonlistener creates listener settings findviewbyidridtextviewstatus findviewbyidridradiogrouppwr findviewbyidridet_zip_file_path execute `oncreate` [img]//images/mxpowermanagertutorialimages/complete_on_createjpg added sets integer 1-sleep 4-reboot 8-os calls modifyprofile_xmlstring modifies setbutton findviewbyidridbuttonset setbuttonsetonclicklistenernew onclicklistener onclickview arg0 radioid pwrradiogroupgetcheckedradiobuttonid ridradiosuspend suspend/ ridradioreset reset/reboot ridradioosupdate [img]//images/mxpowermanagertutorialimages/add_set_button_listenerjpg `modifyprofile_xmlstring` prepares input attribute remains `if-else` condition `zipfilepath` modifydata[0] `profile manager` `emdkresults` applies modified prepare existing zipfilepathedittextgettexttostring entered toast textutilsisemptyzipfilepath toastmaketextmainactivitythis incorrect toastlength_shortshow rebbot profilesetpositivebutton [img]//images/mxpowermanagertutorialimages/modifyprofile_xmlstringjpg closed abruptly called coding configuration part run running connect latest runtime usb port debug loads main page [img]//images/mxpowermanagertutorialimages/home_screenpng suspend press put locking [img]//images/mxpowermanagertutorialimages/sleep_modepng locked unlock resumed [img]//images/mxpowermanagertutorialimages/sleep_mode_resumedpng [img]//images/mxpowermanagertutorialimages/reboot_modepng rebooted located downloaded [this link](https://portal.motorolasolutions.com/Support/US-EN/Mobile+Networks+RFID+and+BarCode+Scanners/Mobile+Computers/Handheld+Computers/TC55) /sdcard/t55n0jb0vruen17400zip upgrade [img]//images/mxpowermanagertutorialimages/os_update_pathpng phone shut performing due bottom [img]//images/mxpowermanagertutorialimages/performing_os_updatepng finally reboots configure [img]//images/mxpowermanagertutorialimages/after_os_updatepng ##important programming tips## androidmanifestxml >* installing deploying fail missing shared datawedge v1712 higher test profilemanagerprocessprofile learned applications concentrate persist explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxPowerManager"},{"title":"Configure the use of SD Card using SD Card Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring sd card allowing enable/disable [sd manager]//mx/sdcardmgr feature create disable external enable back profile wizard symbol ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) make information setting > note provide sdcardmanagertutorial requires kitkat studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk manager devices select [here]/tutenableemdkeclipseadt common projects adding [here]/tutaddprofilemanagerfeature add specific sdcardprofile access similar code left hand side editor window list arrow [img]//images/mxsdcardmanagertutorialimages/sd_card_featurejpg field mysdcardmanager identify required editing programmatically empty discussed sdcard drop-down option [img]//images/mxsdcardmanagertutorialimages/sd_card_manager_detailsjpg [img]//images/mxsdcardmanagertutorialimages/sd_card_manager_details_selectedjpg apply settings provided [img]//images/mxsdcardmanagertutorialimages/sd_card_profile_createdjpg finish disabling created [img]//images/mxsdcardmanagertutorialimages/sd_card_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxsdcardmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission [img]//images/mxsdcardmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxsdcardmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxsdcardmanagertutorialimages/variables_addedjpg [img]//images/mxsdcardmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxsdcardmanagertutorialimages/on_opened_method_1jpg [img]//images/mxsdcardmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxsdcardmanagertutorialimages/parse_xml_1jpg [img]//images/mxsdcardmanagertutorialimages/parse_xml_2jpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxsdcardmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxsdcardmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxsdcardmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug enabled device's browser -> stage [img]//images/mxsdcardmanagertutorialimages/sd_card_enabledpng [img]//images/mxsdcardmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) directory [img]//images/mxsdcardmanagertutorialimages/sd_card_disabledpng means disabled view edit [img]//images/mxsdcardmanagertutorialimages/edit_profile_managerjpg [img]//images/mxsdcardmanagertutorialimages/sd_card_re_enabledjpg checking ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned configure applications understand concentrate encrypt explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxSDCardManager"},{"title":"Invoke Enterprise Reset in Settings UI","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus ability configure reset option settings ui symbol [settings manager]//mx/settingsmgr feature create disable invoke typical case prevent user accidentally pressing ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting > note provide mxsettingsmanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding manager profile [here]/tutaddprofilemanagerfeature add specific settingsmanagerprofile make access similar code left hand side editor window select list arrow [img]//images/mxsettingsmanagertutorialimages/settings_featurejpg field mysettingsmanager identify required editing programmatically empty drop-down offers additional turning on/off wi-fi unknownsources airplane mode enable existing based selection [img]//images/mxsettingsmanagertutorialimages/settings_manager_detailsjpg [img]//images/mxsettingsmanagertutorialimages/settings_manager_details_selectedjpg apply provided [img]//images/mxsettingsmanagertutorialimages/settings_profile_createdjpg finish disabling created [img]//images/mxsettingsmanagertutorialimages/settings_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxsettingsmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission [img]//images/mxsettingsmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxsettingsmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxsettingsmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result wizard [emdkresults]//api/core/emdkresults successfully processed retuns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxsettingsmanagertutorialimages/on_opened_method_1jpg [img]//images/mxsettingsmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxsettingsmanagertutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxsettingsmanagertutorialimages/build_failure_messagejpg `success` `failure` mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxsettingsmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxsettingsmanagertutorialimages/on_destroy_methodjpg coding configuration part **disable** run running connect latest runtime usb port debug [img]//images/mxsettingsmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) app disabled verify device's [img]//images/mxsettingsmanagertutorialimages/device_settingsbmp [img]//images/mxsettingsmanagertutorialimages/reset_disabledbmp ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxSettingsManager"},{"title":"Specify Touch Mode using Mx Touch Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring touch mode symbol [touch manager]//mx/touchmgr feature create configure ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting > note provide mxtouchmanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding manager profile [here]/tutaddprofilemanagerfeature add specific touchmanagerprofile make access similar code left hand side editor window select list arrow [img]//images/mxtouchmanagertutorialimages/touch_featurejpg field mytouchmanager identify required editing programmatically empty drop-down action modes choose set stylus finger glove existing option interact [img]//images/mxtouchmanagertutorialimages/touch_manager_detailsjpg [img]//images/mxtouchmanagertutorialimages/touch_manager_details_selectedjpg apply settings provided [img]//images/mxtouchmanagertutorialimages/touch_profile_createdjpg finish created [img]//images/mxtouchmanagertutorialimages/touch_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxtouchmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library permission [img]//images/mxtouchmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/mxtouchmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxtouchmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result wizard [emdkresults]//api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxtouchmanagertutorialimages/on_opened_method_1jpg [img]//images/mxtouchmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxtouchmanagertutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxtouchmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxtouchmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxtouchmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug device's -> default change [img]//images/mxtouchmanagertutorialimages/touch_modepng [img]//images/mxtouchmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) implies verify [img]//images/mxtouchmanagertutorialimages/touch_mode_changedpng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxTouchManager"},{"title":"Configure Clipboard using Mx UI Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring clipboard symbol [ui manager]//mx/uimgr feature create configure enable/disable clear ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting > note provide mxuimanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding ui manager profile [here]/tutaddprofilemanagerfeature add specific uimanagerprofile make access similar code left hand side editor window select list arrow [img]//images/mxuimanagertutorialimages/new_features_43jpg field myuimanager identify required editing programmatically empty discussed enable disable run saved drop-down wizard option check checkbox clearing additional sub-features enabling/disabling autocorrect homekey bluetooth pairing popup current locale default input method configured [img]//images/mxuimanagertutorialimages/ui_manager_detailsjpg [img]//images/mxuimanagertutorialimages/ui_manager_details_selectedjpg apply settings provided [img]//images/mxuimanagertutorialimages/ui_profile_createdjpg finish wireless created [img]//images/mxuimanagertutorialimages/ui_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxuimanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission [img]//images/mxuimanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxuimanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxuimanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxuimanagertutorialimages/on_opened_method_1jpg [img]//images/mxuimanagertutorialimages/on_opened_method_2jpg methods lets reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxuimanagertutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxuimanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxuimanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxuimanagertutorialimages/on_destroy_methodjpg coding configuration part running connect latest runtime usb port debug copied device's messages copy text [img]//images/mxuimanagertutorialimages/copy_text_to_clipboardpng [img]//images/mxuimanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) means enabled cleared verify opening existing long edit press paste [img]//images/mxuimanagertutorialimages/paste_datapng [img]//images/mxuimanagertutorialimages/no_datapng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate touch explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxUIManager"},{"title":"Manage USB Configurations","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus managing usb symbol [usb manager]//mx/usbmgr feature create configure enable/disable [ADB](https://developer.android.com/tools/help/adb.html) mode adb communicate emulator instance connected android-powered order run applications ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting > note provide mxusbmanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding manager profile [here]/tutaddprofilemanagerfeature add specific usbmanagerprofile make access similar code left hand side editor window select list arrow [img]//images/mxusbmanagertutorialimages/usb_featurejpg field myusbmanager identify required editing programmatically empty number options configuring settings dependent option mentioned debugging usage disable communication machine enable degugger turned change existing case providing user interface coming steps disabled wizard manually performed factory reset [img]//images/mxusbmanagertutorialimages/usb_manager_detailsjpg [img]//images/mxusbmanagertutorialimages/usb_manager_details_selectedjpg apply provided [img]//images/mxusbmanagertutorialimages/usb_profile_createdjpg finish created [img]//images/mxusbmanagertutorialimages/usb_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised updated controlled [img]//images/mxusbmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission [img]//images/mxusbmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxusbmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold objects profilemanager status variable applying [RadioGroup](https://developer.android.com/reference/android/widget/RadioGroup.html) [radio Buttons](https://developer.android.com/guide/topics/ui/controls/radiobutton.html), selected Button](https://developer.android.com/guide/topics/ui/controls/radiobutton.html) processing type description errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation declaration [img]//images/mxusbmanagertutorialimages/global_variablesjpg Buttons](https://developer.android.com/guide/topics/ui/controls/radiobutton.html) [Button](https://developer.android.com/reference/android/widget/Button.html) inside res/layout/activity_mainxml remove desired layout activity_mainxml [img]//images/mxusbmanagertutorialimages/activity_main_1jpg remaining part [img]//images/mxusbmanagertutorialimages/activity_main_2jpg back mainactivityjava `oncreate` ui element previous listener button call `getemdkmanager` initialized checked ready reference elements adbradiogroup radiogroup findviewbyidridradiogroupadb update addsetbuttonlistener returned callback emdkresults results emdkmanagergetemdkmanager getapplicationcontext check return getemdkmanager resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxusbmanagertutorialimages/on_create_addedjpg trigger event implemented apis pass `emdkmanager` `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile complete [img]//images/mxusbmanagertutorialimages/on_opened_methodjpg displays added `addsetbuttonlistener` setbutton findviewbyidridbuttonset setbuttonsetonclicklistenernew onclicklistener onclickview arg0 int radioid adbradiogroupgetcheckedradiobuttonid ridradioenableadb ridradiodisableadb updateusbsettings sets `value` based -> [img]//images/mxusbmanagertutorialimages/add_set_button_listenerjpg `updateusbsettings` attribute depending radio prepares input `processprofile` returns result [emdkresults]//api/core/emdkresults successfully processed `check_xml` parse response details applied display failure message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference simply displaying ahead types scope sample retrieve `getstatusstring` updates values prepare string[] modifydata string[1] modifydata[0] + processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml statusxmlresponse resultsgetstatusstring pull parser xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace textutilsisemptyerrordescription dialog displayresultssuccess displayresultsstatus buildfailuremessage displayresultsfailure exception exprintstacktrace [img]//images/mxusbmanagertutorialimages/update_usb_settings_1jpg [img]//images/mxusbmanagertutorialimages/update_usb_settings_2jpg declared received `parsexml` eventually `displayresults` output [xml Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext [img]//images/mxusbmanagertutorialimages/parse_xmljpg parsed detail messages handle `buildfailuremessage` formed match criteria build respective failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype \\n [img]//images/mxusbmanagertutorialimages/build_failure_messagejpg generic takes arguments `title` `description` [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) understands describes displayresultsstring title alert alertdialogbuilder mainactivitythis alertdialogbuildersettitletitle alertdialogbuildersetmessagedescription alertdialogbuildersetcancelablefalsesetpositivebuttonok dialoginterfaceonclicklistener onclickdialoginterface id cancels alertdialog alertdialogbuildercreate show alertdialogshow [img]//images/mxusbmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxusbmanagertutorialimages/on_destroy_methodjpg coding configuration running connect latest runtime port debug [img]//images/mxusbmanagertutorialimages/adb_mode_onpng [img]//images/mxusbmanagertutorialimages/home_screenpng press [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) app [img]//images/mxusbmanagertutorialimages/successpng words [img]//images/mxusbmanagertutorialimages/adb_mode_offpng turn ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned manage devices understand concentrate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxUSBManager"},{"title":"Configure Wi-Fi settings","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus [wi-fi manager]//mx/wifi manage device's wi-fi settings network profiles connecting remembering networks > note order apply enabled enable profile error attempting configured wizard programmatically manager implementing programmatic change scope designed configure sequence * add connect existing disconnect remove ###prerequisites java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) symbol information setting provide wifimanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding feature [here]/tutaddprofilemanagerfeature specific wifiprofile make access similar code left hand side editor window select list arrow explained earlier parameter populated [img]//images/mxwifimanagertutorialimages/select_wifi_featurejpg mentioned initially field mywifi identify required editing empty lets start disabled configuring drop-down option [img]//images/mxwifimanagertutorialimages/wifi_enable_dropdownjpg [img]//images/mxwifimanagertutorialimages/wifi_enabledjpg action radio-specific section display operations performed unchanged [img]//images/mxwifimanagertutorialimages/network_action_dropdownjpg show configurable related [img]//images/mxwifimanagertutorialimages/add_new_networkjpg types security mode personal type [img]//images/mxwifimanagertutorialimages/personal_networkjpg enter details fields provided ssid rholink-ap wpa passphrase password authentication check protect key checkbox protected depending [img]//images/mxwifimanagertutorialimages/personal_network_details_addedjpg finish [img]//images/mxwifimanagertutorialimages/wifi_profile_createdjpg close >note >now emdkconfigxml created \\assets folder file definition create inspect reflecting made parameters gui advised manually updated controlled entry elements [img]//images/mxwifimanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission [img]//images/mxwifimanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxwifimanagertutorialimages/manifest_permissions_addedjpg ##adding references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying ui values description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxwifimanagertutorialimages/on_create_addedjpg reference interface trigger event implemented apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued statustextviewsettextemdk thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed `check_xml` parse response applied message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxwifimanagertutorialimages/on_opened_method_1jpg [img]//images/mxwifimanagertutorialimages/on_opened_method_2jpg methods reponse supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxwifimanagertutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxwifimanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxwifimanagertutorialimages/display_resultsjpg override ondestroy release resources superondestroy //clean emdkmanagerrelease [img]//images/mxwifimanagertutorialimages/on_destroy_methodjpg coding configuration part running latest runtime usb port debug disable toggling [img]//images/mxwifimanagertutorialimages/disable_wifipng run app [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html). [img]//images/mxwifimanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) displayed means added named verify [img]//images/mxwifimanagertutorialimages/wifi_onpng tap lock icon image secured [img]//images/mxwifimanagertutorialimages/rho_link_addedpng connected edit [img]//images/mxwifimanagertutorialimages/edit_profilejpg choose [img]//images/mxwifimanagertutorialimages/connect_existing_networkjpg [img]//images/mxwifimanagertutorialimages/ssid_providedjpg save -> [img]//images/mxwifimanagertutorialimages/wifi_connectedpng [img]//images/mxwifimanagertutorialimages/disconnect_from_networkjpg [Toast](https://developer.android.com/guide/topics/ui/notifiers/toasts.html) successful disconnected [img]//images/mxwifimanagertutorialimages/disconnected_from_networkpng finally variation [img]//images/mxwifimanagertutorialimages/ssid_to_removepng screen deven providing [img]//images/mxwifimanagertutorialimages/remove_existing_networkjpg removed [img]//images/mxwifimanagertutorialimages/network_removedpng range scans periodically ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate certificate explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxWiFiManager"},{"title":"Configure Bluetooth using Mx Wireless Manager","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus configuring wireless symbol configure device's bluetooth [wireless manager]//mx/wirelessmgr feature create enable/disable ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting > note provide mxwirelessmanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding manager profile [here]/tutaddprofilemanagerfeature add specific wirelessprofile make access similar code left hand side editor window select list arrow [img]//images/mxwirelessmanagertutorialimages/wireless_featurejpg field mywirelessmanager identify required editing programmatically empty additional sub-features turning on/off nfc gps wwan discussed enable wizard drop-down option [img]//images/mxwirelessmanagertutorialimages/wireless_manager_detailsjpg [img]//images/mxwirelessmanagertutorialimages/wireless_manager_details_selectedjpg apply settings provided [img]//images/mxwirelessmanagertutorialimages/wireless_profile_createdjpg finish created [img]//images/mxwirelessmanagertutorialimages/wireless_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxwirelessmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission [img]//images/mxwirelessmanagertutorialimages/manifest_filejpg comsymbolemdkpermissionemdk' xml [img]//images/mxwirelessmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature error errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxwirelessmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result [emdkresults]//api/core/emdkresults successfully processed `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference processing simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring [xml pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser catch xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxwirelessmanagertutorialimages/on_opened_method_1jpg [img]//images/mxwirelessmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxwirelessmanagertutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxwirelessmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxwirelessmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxwirelessmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug disabled -> [img]//images/mxwirelessmanagertutorialimages/bluetooth_offpng [img]//images/mxwirelessmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) enabled [img]//images/mxwirelessmanagertutorialimages/bluetooth_onpng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate ui explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxWirelessManager"},{"title":"Manage MX Processing Behavior","keywords":"## overview guide walk creating emdk android application mx features introduced api perform device configurations represents suite enterprise top standard commercially open source project tutorial focus managing xml processing mode symbol [xml manager]//mx/xml feature manager supports modes * execute end error stop skip catch remainder create configure ###prerequisites java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting > note provide xmlmanagertutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects adding profile [here]/tutaddprofilemanagerfeature add specific xmlmanagerprofile make access similar code left hand side editor window select list arrow [img]//images/mxxmlmanagertutorialimages/xml_featurejpg field myxmlmanager identify required editing programmatically empty drop-down choose choice [img]//images/mxxmlmanagertutorialimages/xml_manager_detailsjpg [img]//images/mxxmlmanagertutorialimages/xml_manager_details_selectedjpg apply settings provided [img]//images/mxxmlmanagertutorialimages/xml_profile_createdjpg finish created [img]//images/mxxmlmanagertutorialimages/xml_manager_profile_createdjpg close >note >now emdkconfigxml \\assets folder file definition profiles inspect reflecting made parameters gui earlier advised manually updated controlled [img]//images/mxxmlmanagertutorialimages/emdk_config_file_entriesjpg permissions modify application's manifestxml library set permission [img]//images/mxxmlmanagertutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' [img]//images/mxxmlmanagertutorialimages/manifest_permissions_addedjpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener androidwidgettoast extend activity implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager status variable applying type description case errors >verify identical assign private string profilename = declare store object null parm-error sub-feature errorname characteristic-error root errortype parm characteristic errordescription operation oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return resultsstatuscode == emdkresultsstatus_codesuccess creation success failed [img]//images/mxxmlmanagertutorialimages/on_create_addedjpg reference interface trigger event implemented order apis pass `emdkmanager` previous steps `profilemanager` rest rename argument `arg0` issued thisemdkmanager process getinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose string[] modifydata string[1] processprfoile flag profilemanagerprocessprofileprofilename profilemanagerprofile_flagset emdkresultsstatus_codecheck_xml show dialog failure alertdialogbuilder builder alertdialogbuilderthis buildersettitlefailure buildersetmessagefailed setpositivebuttonok dialoginterfaceonclicklistener onclick dialoginterface int id alertdialog alert buildercreate alertshow returns result wizard [emdkresults]//api/core/emdkresults successfully processed reruns `check_xml` parse response details applied display message [dialog](https://developer.android.com/reference/android/app/AlertDialog.html). difference simply displaying ahead check types scope sample retrieve `getstatusstring` statusxmlresponse resultsgetstatusstring pull Parser](https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html) parser defines parsing functionality [xmlpull v1 API](https://www.xmlpull.org/) visit website learn implementations tags found values respective declared xmlpullparser xmlnewpullparser reader reads parsersetinputnew stringreaderstatusxmlresponse parsexmlparser xmlpullparserexception eprintstacktrace called `parsexml` parsed [dialog](https://developer.android.com/reference/android/app/AlertDialog.html) calling `displayresults` coming displayresults complete [img]//images/mxxmlmanagertutorialimages/on_opened_method_1jpg [img]//images/mxxmlmanagertutorialimages/on_opened_method_2jpg methods lets supposed capture `name` `desc` `parm-error` tag `type` `characteristic-error` parsexmlxmlpullparser myparser myparsergeteventtype xmlpullparserend_document myparsergetname switch xmlpullparserstart_tag nameequalsparm-error myparsergetattributevaluenull desc nameequalscharacteristic-error break xmlpullparserend_tag myparsernext exception [img]//images/mxxmlmanagertutorialimages/parse_xmljpg form shown specifically `buildfailuremessage` formed match mentioned criteria build buildfailuremessage failuremessage textutilsisemptyerrorname && textutilsisemptyerrortype + \\n [img]//images/mxxmlmanagertutorialimages/build_failure_messagejpg `success` `failure` based mainactivitythis textutilsisemptyerrordescription alertdialogbuildersettitlesuccess alertdialogbuildersetmessageprofile title alertdialogbuildersettitlestatus alertdialogbuildersetmessagebuildfailuremessage alertdialogbuildersetcancelablefalsesetpositivebuttonok onclickdialoginterface alertdialogbuildercreate alertdialogshow [img]//images/mxxmlmanagertutorialimages/display_resultsjpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/mxxmlmanagertutorialimages/on_destroy_methodjpg coding configuration part run running connect latest runtime usb port debug [img]//images/mxxmlmanagertutorialimages/home_screenpng [alert Dialog](https://developer.android.com/reference/android/app/AlertDialog.html) implies verify device's -> touch [img]//images/mxxmlmanagertutorialimages/touch_mode_changedpng ##important programming tips## androidmanifestxml >* include installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned devices applications understand concentrate wireless explore ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use some new Mx features introduced in EMDK for Android API to perform device configurations.","url":"/emdk-for-android/3-1/tutorial/tutMxXMLManager"},{"title":"Pair Bluetooth devices","keywords":"## overview guide walk creating emdk android application [scanandpair apis]//api/scanandpair introduced perform pairing remote scanning device bluetooth address api [scan pair manager]//api/scanandpair/scanandpairmanager primary object devices tutorial explore developing basic scan name/address [MC40](https://www.zebra.com/content/dam/msi-new/assets/web/Business/Products/Mobile%20Computers/Handheld%20Computers/MC40/_Documents/Static_Files/MC40_Specifications.pdf)) scanned discovering > note api]//api/scanandpair profile wizard configured programmatically code ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting project provide scanandpairtutorial studio click [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk symbol technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects permissions modify application's manifestxml library set permission barcodes [img]//images/scanandpairtutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' xml [img]//images/scanandpairtutorialimages/manifest_permissions_addedjpg ##adding start add references libraries import comsymbolemdkemdkmanager comsymbolemdkscanandpairscanandpairmanager comsymbolemdkscanandpairstatusdata make activity implement [emdklistener]//api/core/emdkmanager-emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` [scanandpairmanagerstatuslistener]//api/scanandpair/scanandpairmanager-statuslistener interface informing client applications notify unpair events override `onstatus` function callback method called status event occurs press ctrl+alt+o cmd+alt+o organize imports ctrl+shft+o cmd+shft+o public class mainactivity extends implements emdkmanageremdklistener scanandpairmanagerstatuslistener { @override void onopenedemdkmanager emdkmanager } onclosed onstatusstatusdata statusdata create global variables hold instance objects scanandpairmanager ui elements starting [TextView](https://developer.android.com/reference/android/widget/TextView.html) display operation [EditText](https://developer.android.com/reference/android/widget/EditText.html) user enter paired [Spinner](https://developer.android.com/guide/topics/ui/controls/spinner.html) type data prior [check Boxes](https://developer.android.com/reference/android/widget/CheckBox.html) explained adding [Buttons](https://developer.android.com/guide/topics/ui/controls/button.html) apply settings // text view private edittext btname = null btaddress select hard soft option checkbox checkboxhardtrigger checkboxalwaysscan button scanandpairbutton scanandunpairbutton spinner scandatatype operations textview statusview declare variable store scanandpair scanandpairmgr notifying comsymbolemdkscanandpairscanandpairmanagerstatuslistener statuscallbackobj till [img]//images/scanandpairtutorialimages/variables_added_1jpg [img]//images/scanandpairtutorialimages/variables_added_2jpg design simple components remove inside res/layout/activity_mainxml layout ctrl+alt+i cmd+alt+i auto indent lines ctrl+shft+f cmd+shft+f `oncreate` reference declared order [Activity](https://developer.android.com/reference/android/app/Activity.html). call getemdkmanager initialized checked ready [ArrayAdapter](https://developer.android.com/reference/android/widget/ArrayAdapter.html) list types]//api/scanandpair/scanandpairconfig-scandatatype/ scanner finally methods calls handle buttons check boxes findviewbyidridname findviewbyidridaddress findviewbyidridalwaysscan findviewbyidridtriggertype findviewbyidridscanandpair findviewbyidridscanandunpair findviewbyidridlogs spinnerfindviewbyidridscandatatype statusviewsettext\\n initially disable checkboxes btnamesetenabledfalse btaddresssetenabledfalse creation returned emdkresults results emdkmanagergetemdkmanagergetapplicationcontext return resultsstatuscode == emdkresultsstatus_codesuccess statusviewsettextplease wait initialization progress statusviewsettextinitialization failed supported types arraylist scandatatypes scandatatypesaddscanandpairconfigscandatatypemac_address scandatatypesaddscanandpairconfigscandatatypedevice_name scandatatypesaddscanandpairconfigscandatatypeunspecified array adapter arrayadapter arrayadaptergetapplicationcontext rlayoutsimple_spinner_item scandatatypesetadapterarrayadapter register onclick listeners registerforbuttonevents onchecked listener addcheckboxlistener complete [img]//images/scanandpairtutorialimages/on_create_added_1jpg [img]//images/scanandpairtutorialimages/on_create_added_2jpg [emdk manager]//api/core/emdkmanager update `statusview` message manager thisemdkmanager thread runonuithreadnew runnable run statusviewsettextapplication [img]//images/scanandpairtutorialimages/on_opened_methodjpg errors created resolve res -> file `simple_spinner_itemxml` [img]//images/scanandpairtutorialimages/adapter_layout_addedjpg lets `addcheckboxlistener` box edittexts parameters provided unchecked details related `scanandpairmgrconfigalwaysscan` field `scanandpair` checkboxalwaysscansetoncheckedchangelistener compoundbuttononcheckedchangelistener oncheckedchangedcompoundbutton buttonview boolean ischecked btnamesetenabledtrue btaddresssetenabledtrue [img]//images/scanandpairtutorialimages/always_scan_check_box_listenerjpg error `registerforbuttonevents` rid addscanandpairbuttonevents addscanandunpairbuttonevents [img]//images/scanandpairtutorialimages/method_calls_for_both_buttonsjpg important part mc40 `addscanandpairbuttonevents` `scanandpairbutton` onclicklistener `onclick` [img]//images/scanandpairtutorialimages/on_click_listener_scan_pairjpg case [scanandpairmanager]//api/scanandpair/scanandpairmanager ifscanandpairmgr emdkmanagergetinstancefeature_typescanandpair scanandpairmgraddstatuslistenerstatuscallbackobj parameter `scanandpairmanagerconfigalwaysscan` determines performed scanandpairmanagerconfigalwaysscan true default barcode required false skipped scanandpairmgrconfigbluetoothinfodevicename scanandpairmgrconfigbluetoothinfomacaddress directly `checkboxalwaysscan` [notification type]//api/scanandpair/scanandpairconfig-notificationtype/ `scanandunpair` scanandpairmgrconfigalwaysscan checkboxalwaysscanischecked scanandpairmgrconfignotificationtype notificationtypebeeper ifcheckboxalwaysscanischecked btaddressgettexttostringtrim btnamegettexttostringtrim notification specific beep sequence table [img]//images/scanandpairtutorialimages/notification_tablejpg timeout specifies duration seconds `checkboxhardtrigger` `triggertypehard` trigger `triggertypesoft` scanandpairmgrconfigscaninfoscantimeout ifcheckboxhardtriggerischecked scanandpairmgrconfigscaninfotriggertype triggertypehard triggertypesoft scanandpairmgrconfigscaninfoscandatatype scandatatypescandatatypegetselecteditem result `scanandpairresults` asynchronous registered enabled configuration scans pairs performing discovery find authentication pin maximum allowed length characters scanandpairresults resultcode scanandpairmgrscanandpair0000 [scanandpairresults]//api/scanandpair/scanandpairresults/ ifresultcodeequalsscanandpairresultssuccess statusviewappendresultcodetostring+ \\n\\n statusviewappendscanandpairmanager entire source copy scanandpairbuttonsetonclicklistenernew viewonclicklistener onclickview statusviewsettextscanandpair started+ \\n emdkmanagergetinstance emdkmanagerfeature_typescanandpair beeper scanandpairconfignotificationtypebeeper //set scanandpairconfigtriggertypehard scanandpairconfigtriggertypesoft selected scanandpairconfigscandatatypescandatatypegetselecteditem catch exception statusviewsettextscanandunpair error+ egetmessage + [img]//images/scanandpairtutorialimages/complete_scan_and_pair_button_event_method_1jpg [img]//images/scanandpairtutorialimages/complete_scan_and_pair_button_event_method_2jpg write `addscanandunpairbuttonevents` similar steps previous thing scanandpairmgrscanandunpair unpairs unpairing scanandunpair presses `unpair` `scanandunpairbutton` scanandunpairbuttonsetonclicklistenernew emdkmanagergetinstanceemdkmanagerfeature_typescanandpair [img]//images/scanandpairtutorialimages/complete_scan_and_unpair_button_event_method_1jpg [img]//images/scanandpairtutorialimages/complete_scan_and_unpair_button_event_method_2jpg received added track `statusdatagetstate` states mentions final stringbuilder text= isupdateaddress switch statusdatagetstate waiting textappendwaiting break textappendscanner beam aim textappenddiscovering textappendbluetooth successfully unpaired un-paired textappend\\n+ statusdatagetstatetostring+ statusdatagetresult main isupdateui statusviewsettexttext ifisupdateui btnamesettextscanandpairmgrconfigbluetoothinfodevicename btaddresssettextscanandpairmgrconfigbluetoothinfomacaddress [img]//images/scanandpairtutorialimages/on_status_method_1jpg [img]//images/scanandpairtutorialimages/on_status_method_2jpg statusviewsettexterror restart [img]//images/scanandpairtutorialimages/on_closed_methodjpg clean `ondestroy` emdkmanagerrelease emdkmanager=null [img]//images/scanandpairtutorialimages/on_destroy_methodjpg coding running connect latest runtime usb port debug [img]//images/scanandpairtutorialimages/home_screenpng `mac address` scandata [img]//images/scanandpairtutorialimages/mac_address_scan_data_typepng eventually [img]//images/scanandpairtutorialimages/config_before_scanpng process intermediate [img]//images/scanandpairtutorialimages/scan_and_pair_startedpng [img]//images/scanandpairtutorialimages/waiting_for_trigger_presspng key [img]//images/scanandpairtutorialimages/beam_on_aim_barcodepng mac [img]//images/scanandpairtutorialimages/barcode_with_mac_addressjpg tc55 [img]//images/scanandpairtutorialimages/discovering_devicepng [img]//images/scanandpairtutorialimages/pairing_dialogpng mobile [img]//images/scanandpairtutorialimages/device_pairedpng success confirm device's [img]//images/scanandpairtutorialimages/confirm_pairingpng section ##important programming tips## androidmanifestxml >note >* include installing deploying fail missing shared learned concentrate [simulscan apis]//api/simulscan develop demonstrate ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use ScanAndPair APIs introduced in EMDK V 3.1, to perform pairing of any remote Scanning device by Scanning its Bluetooth Name or Bluetooth Address.","url":"/emdk-for-android/3-1/tutorial/tutScanAndPairAPI"},{"title":"Capture critical data from documents using SimulScan API","keywords":"## overview guide walk creating emdk android application [simulscan apis]//api/simulscan introduced capture critical data documents facilitates capturing fields interest document converting end-user immediately point transaction ways api]//api/simulscan/ * **barcode** productivity gain decoding multiple bar codes read single trigger pull **ocr optical character recognition** automated entry recognition [ocr] **omr mark simplified workflow exceptions checked [omr] signature presence detection discussed mentioned types treated templates position positions template simulscan api access **templates** existing create depending captured click [here](https://simulscan.zebra.com) login partner credentials uploading image form upload load tutorial automatically recognize marked populate ui **use case** [img]//images/simulscantutorialimages/example_documentjpg text barcode needed display repeatedly [img]//images/simulscantutorialimages/example_document_requirementjpg suppose highlighted characters **problem** required number painful field individually decode **solution** api]//api/simulscan handy captures upto barcodes populating ###prerequisites java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) supported tc55 rev kitkat tc75 > note built os devices download latest extranet supportcentral information setting log [https://simulscan.zebra.com](https://simulscan.zebra.com). [img]//images/simulscantutorialimages/template_builder_homejpg button [img]//images/simulscantutorialimages/choose_document_typejpg based format structured targets provide path machine [img]//images/simulscantutorialimages/select_area_for_templatejpg [img]//images/simulscantutorialimages/create_new_templatejpg top left corner mytemplate press enter highlight app side section sections shipper's vat/gst shippers vatgst select ocr processing word check [img]//images/simulscantutorialimages/first_fieldjpg postal type [img]//images/simulscantutorialimages/second_fieldjpg [img]//images/simulscantutorialimages/template_with_both_fieldsjpg file created downloaded xml mytemplatexml put /sdcard/simulscan/templates device detect [img]//images/simulscantutorialimages/template_on_devicepng installing license features require follow steps request trial product manager andrewknight@zebracom copy licensexml received licensing server location sdcard upgrade software [246 tc75] launch settings -> phone –> legal symbol licenses install mass deployment end customers stagenow post queries launchpad page team assist earliest project simulscantutorial studio [here]/tutcreateprojectandroidstudio eclipse [here]/tutcreateprojecteclipseadt enabling completed step selecting `emdk technologies 16` 19` minimum sdk [here]/tutenableemdkeclipseadt common projects permissions modify application's manifestxml library set permission scan [img]//images/simulscantutorialimages/manifest_filejpg enable comsymbolemdkpermissionemdk' add accessing androidpermissionwrite_external_storage' orientation portrait mode restrict adding line `` tag androidscreenorientation=portrait [img]//images/simulscantutorialimages/manifest_permissions_addedjpg ##adding code start references libraries import comsymbolemdkemdkmanager comsymbolemdksimulscansimulscandata comsymbolemdksimulscansimulscanreader comsymbolemdksimulscansimulscanstatusdata make activity implement interfaces [emdklistener]//api/core/emdkmanager-emdklistener emdkmanager eclipse's content unimplemented functions `onopened` `onclosed` [simulscanreaderdatalisterner]//api/simulscan/simulscanreader-datalisterner interface notifying client applications override `ondata` method receive scanned [simulscanreaderstatuslisterner]//api/simulscan/simulscanreader-statuslisterner notify events `onstatus` status operation performed [View.OnClickListener](https://developer.android.com/reference/android/view/View.OnClickListener.html) `onclick` handle buttons [AdapterView.OnItemSelectedListener](https://developer.android.com/reference/android/widget/AdapterView.OnItemSelectedListener.html) `onitemselected` `onnothingselected` methods handling spinner ctrl+alt+o cmd+alt+o organize imports ctrl+shft+o cmd+shft+o public class mainactivity extends implements emdkmanageremdklistener simulscanreaderdatalisterner simulscanreaderstatuslisterner viewonclicklistener adapterviewonitemselectedlistener { @override void ondatasimulscandata simulscandata } onopenedemdkmanager onclosed onclickview onitemselectedadapterview parent view int long id onnothingselectedadapterview onstatussimulscanstatusdata simulscanstatusdata global variables hold instance objects [emdkmanager]//api/core/emdkmanager [simulscanmanager]//api/simulscanmanager [simulscanreader]//api/simulscan/simulscanreader elements starting [TextView](https://developer.android.com/reference/android/widget/TextView.html) [Spinner](https://developer.android.com/guide/topics/ui/controls/spinner.html) list [Buttons](https://developer.android.com/guide/topics/ui/controls/button.html) stop reading readerinfolist `synchronized` simulscandatalist exception lastexception catch // managing logs private final static string = mainactivityclassgetcanonicalname textview displaying operations textviewstatus null scanning deviceselectionspinner triggers readbutton stopreadbutton declare variable store object simulscanmanager holding emdkresults results physical reader simulscanreader selectedsimulscanreader collections synchronizedlistnew arraylist catches till [img]//images/simulscantutorialimages/variables_added_1jpg [img]//images/simulscantutorialimages/variables_added_2jpg design simple components explained remove inside res/layout/activity_mainxml layout ctrl+alt+i cmd+alt+i auto indent lines ctrl+shft+f cmd+shft+f `oncreate` reference declared order [Activity](https://developer.android.com/reference/android/app/Activity.html) respective onclick listeners call getemdkmanager initialized ready finally calls boxes returned callback emdkmanagergetemdkmanagergetapplicationcontext findviewbyidridstatus_view findviewbyidriddevices_spinner findviewbyidridbtn_start_read findviewbyidridbtn_stop_read update textviewstatussettextstatus + deviceselectionspinnersetonitemselectedlistenerthis readbuttonsetonclicklistenerthis stopreadbuttonsetonclicklistenerthis resultsstatuscode emdkresultsstatus_codesuccess failed complete [img]//images/simulscantutorialimages/on_create_addedjpg [emdk manager]//api/core/emdkmanager [simulscanmanager]//api/simulscan/simulscanmanager `statusview` iterate added listener performing sequence issued thisemdkmanager getinstanceemdkmanagerfeature_typesimulscan == return simulscanmanagergetsupporteddevicesinfo namelist simulscanreaderinfo rinfo namelistaddrinfogetfriendlyname item selected additemsonspinnerdeviceselectionspinner [img]//images/simulscantutorialimages/on_opened_methodjpg error `additemsonspinner` lets basically arguments adapter additemsonspinnerspinner arrayadapter dataadapter androidrlayoutsimple_spinner_item setdropdownviewresourceandroidrlayoutsimple_spinner_dropdown_item spinnersetadapterdataadapter [img]//images/simulscantutorialimages/add_items_on_spinner_methodjpg user [simulscanreader]//simulscan/simulscanreader initiate overridden [simulscanreaderinfo]//simulscan/simulscanreaderinfo pass `simulscanmanagerget` represents current initialize deinitialize simul parentequalsdeviceselectionspinner readerinfo readerinfolistgetposition deinitcurrentscanner getdevicereaderinfo initcurrentscanner simulscanexception eprintstacktrace [img]//images/simulscantutorialimages/on_item_selected_methodjpg simply de-initialize scanner [img]//images/simulscantutorialimages/on_nothing_selected_methodjpg `initcurrentscanner` `deinitcurrentscanner` errors throws selectedsimulscanreaderaddstatuslistenerthis selectedsimulscanreaderadddatalistenerthis selectedsimulscanreaderenable notifications removing canceling pending reads selectedsimulscanreaderisreadpending selectedsimulscanreadercancelread selectedsimulscanreaderisenabled selectedsimulscanreaderdisable selectedsimulscanreaderremovedatalistenerthis selectedsimulscanreaderremovestatuslistenerthis cancel disable [img]//images/simulscantutorialimages/init_deinit_scanner_methodsjpg life cycle `onstart` `onstop` onstart superonstart onstop superonstop [img]//images/simulscantutorialimages/on_start_methodjpg [img]//images/simulscantutorialimages/on_stop_methodjpg simulscanconfig parameters config setcurrentconfig selectedsimulscanreadergetconfig storage templatepath environmentgetexternalstoragedirectorytostring /simulscan/templates/mytemplatexml filetemplatepath simulscanmultitemplate simulscanmultitemplatesimulscanmanager urifromfilefile ifmytemplate configmultitemplate amount time milliseconds wait timing identification configidentificationtimeout configprocessingtimeout userconfirmationonscan true shows confirm sending configuserconfirmationonscan detected configautocapture enabled session write region images values configdebugmode false turn on/off audio feedback configaudiofeedback haptic confighapticfeedback led configledfeedback selectedsimulscanreadersetconfigconfig `setcurrentconfig` [img]//images/simulscantutorialimages/set_current_config_method_1jpg [img]//images/simulscantutorialimages/set_current_config_method_2jpg `readcurrentscanner` `stopreadcurrentscanner` readcurrentscanner selectedsimulscanreaderread cancel/stop stopreadcurrentscanner [img]//images/simulscantutorialimages/start_stop_reading_scannerjpg ifvequalsreadbutton{ textviewstatuspostnew runnable run lastexceptiongetmessage ifvequalsstopreadbutton{ understand pressed stop/cancel updated viewstatus entire [img]//images/simulscantutorialimages/on_click_method_1jpg [img]//images/simulscantutorialimages/on_click_method_2jpg executing handled availability [simulscandata]//api/simulscan/simulscandata clear synchronized simulscandatalistclear simulscandatalistaddsimulscandata [img]//images/simulscantutorialimages/on_datajpg event occurs statusview thread statusdatarunnablesimulscanstatusdata [img]//images/simulscantutorialimages/on_status_methodjpg `statusdatarunnable` implementing taking [simulscanstatusdata]//api/simulscan/simulscanstatusdata argument constructor `simulscanstatusdatagetstate` statusdatarunnable statusdata thisstatusdata switch statusdatagetstate case disabled statusdatagetfriendlyname closed successfully break opened started idle stopped error- statusdataextendedinfogetextendedstatus unknown default [img]//images/simulscantutorialimages/status_data_runnable_1jpg [img]//images/simulscantutorialimages/status_data_runnable_2jpg abrupt closing unexpectedly [img]//images/simulscantutorialimages/on_closedjpg coding configuration part stored running connect runtime usb port debug [img]//images/simulscantutorialimages/home_screenpng message clicking supports internal camera [img]//images/simulscantutorialimages/spinnerpng opens [img]//images/simulscantutorialimages/place_doc_for_scanningpng searching place printed process outlining [img]//images/simulscantutorialimages/processing_templatepng [img]//images/simulscantutorialimages/parsed_datapng parsed displayed accept bottom correctness red background means re-scan pressing rescan [img]//images/simulscantutorialimages/re_scan_templatepng result correct shown illustrates [template Builder](https://simulscan.zebra.com). ##important programming tips## androidmanifestxml >note >* include deploying fail missing shared sd card ","summary":"\nOverview\n\nThis guide will walk you through creating an EMDK For Android application that will use SimulScan APIs introduced in EMDK V 3.1, to capture critical data from documents.","url":"/emdk-for-android/3-1/tutorial/tutSimulScanAPI"},{"title":"Battery Intent Tutorial","keywords":"## overview symbol devices mc40 extra battery information retrieved standard [android Intent](https://developer.android.com/training/monitoring-device-state/battery-monitoring.html). setting receive consumer android data returned application includes * backup voltage manufacture date serial number part unique id rated capacity charge cycle count enabling receiver java mintent_receiver = intent_receiver mintentfilter intentfilter mintentfilteraddactionintentaction_battery_changed registerreceivermintent_receivermintentfilter processing code specific provided [battery intent]//guide/reference/refbatteryintent extras notice values strings integers public void onreceivecontext context intent { battery_state_changed_intentequalsintentgetaction int bkvoltage intentgetextrasgetintbkvoltage string mfd intentgetextrasgetstringmfd serialnumber intentgetextrasgetstringserialnumber partnumber intentgetextrasgetstringpartnumber uniqueid intentgetextrasgetstringuniqueid ratedcapacity intentgetextrasgetintratedcapacity intentgetextrasgetintcycle } ","summary":"\nOverview\nOn Symbol devices like the MC40, extra battery information can be retrieved using the standard Android Battery Intent. Setting up to receive this information is the same as with consumer Android devices.","url":"/emdk-for-android/3-1/tutorial/tutbatteryintent"},{"title":"Data Capture Intents Tutorial","keywords":"## overview datawedge android ability output captured data intents article describes intent plug-in capture api receive native application knowledge programming familiarity mechanism assumed read section integrator guide device layout created blank activity eclipse added xml things note imageview edittext widgets widget effectively act button toggle scanner pressing trigger display strings bundle retrieving intentgetstringtextra intentgetserializableextra methods ### items list item names * string source_tag = commotorolasolutionsemdkdatawedgesource source msr data_string_tag commotorolasolutionsemdkdatawedgedata_string case concatenated bar codes decode single tracks label_type_tag commotorolasolutionsemdkdatawedgelabel_type label type code decode_data_tag commotorolasolutionsemdkdatawedgedecode_data returned byte arrays cases array bar-code symbologies support concatenation codabar code128 micropdf decoded stored multiple clients passing index future related intent's retrieved calls tags msr_data_tag commotorolasolutionsemdkdatawedgemsr_data msr_track1_tag commotorolasolutionsemdkdatawedgemsr_track1 track msr_track2_tag commotorolasolutionsemdkdatawedgemsr_track2 msr_track3_tag commotorolasolutionsemdkdatawedgemsr_track3 msr_track1_status_tag commotorolasolutionsemdkdatawedgemsr_track1_status status integer successful msr_track2_status_tag commotorolasolutionsemdkdatawedgemsr_track2_status msr_track3_status_tag commotorolasolutionsemdkdatawedgemsr_track3_status msr_track1_encrypted_tag commotorolasolutionsemdkdatawedgemsr_track1_encrypted encrypted msr_track2_encrypted_tag commotorolasolutionsemdkdatawedgemsr_track2_encrypted msr_track3_encrypted_tag commotorolasolutionsemdkdatawedgemsr_track3_encrypted msr_track1_hashed_tag commotorolasolutionsemdkdatawedgemsr_track1_hashed hashed msr_track2_hashed_tag commotorolasolutionsemdkdatawedgemsr_track2_hashed msr_track3_hashed_tag commotorolasolutionsemdkdatawedgemsr_track3_hashed soft scan action_softscantrigger commotorolasolutionsemdkdatawedgeapiaction_softscantrigger action extra_param commotorolasolutionsemdkdatawedgeapiextra_parameter parameter passed perform actions recognized dwapi_start_scanning start_scanning start scanning dwapi_stop_scanning stop_scanning stop dwapi_toggle_scanning toggle_scanning >in handling incoming handled overriding onnewintent method java @override public void onnewintentintent { handledecodedatai } *handledecodedata* responsible formatting adding end edit box private handledecodedataintent // check igetactioncontentequalscommotorolasolutionsemdksampledwdemosamplerecvr define hold igetstringextrasource_tag save == null igetstringextradata_string_tag variable length data_len set datalength barcode sourceequalsignorecasescanner && > symbology slabeltype igetstringextralabel_type_tag empty slabeltypelength format label-type-symbology skip label-type- portion slabeltypesubstring11 unknown construct beginning + data_lentostring \\r\\n sourceequalsignorecasemsr view edittextfindviewbyidrideditbox text editable txt etgettext put spannable builder spannablestringbuilder stringbuilder spannablestringbuildertxt add constructed earlier stringbuilderappendout highlight bold stringbuildersetspannew stylespantypefacebold txtlength stringbuilderlength spannablestringspan_exclusive_exclusive line stringbuilderappenddata update etsettextstringbuilder cursor position etsetselectiontxtlength toggling toggles time image tapped img findviewbyidriddwdemo_logo imgsetonclicklistenernew onclicklistener onclickview isetactionaction_softscantrigger iputextraextra_param dwdemoactivitythissendbroadcasti toastmaketextvgetcontext toggled toastlength_shortshow putting final class package commotorolasolutionsemdksampledwdemosample import androidosbundle androidappactivity androidcontentintent androidgraphicstypeface androidviewview androidviewviewonclicklistener androidwidgetedittext androidwidgetimageview androidwidgettoast androidtexteditable androidtextspannablestring androidtextspannablestringbuilder androidtextstylestylespan mainactivity extends tag logging errors static mainactivityclassgetsimplename ourintentaction commotorolasolutionsemdksampledwdemosamplerecvr oncreatebundle savedinstancestate superoncreatesavedinstancestate setcontentviewrlayoutactivity_main field handle onclick event findviewbyidridlogo shoot create declared dw broadcast mainactivitythissendbroadcasti provide feedback user launched startactivity getintent override igetactioncontentequalsourintentaction defining filters dealt coding inform system implicit intent-filter androidintentcategorydefault category defined configure profile configured send instance launch mode task androidlaunchmode=singletask androidmanifestxml configuring desired steps started give dwdemosample apps tap menu app/activity select commotorolasolutionsemdksampledwdemosamplemainactivty back disable keystroke enable enter summary sample covered receiving barcode/msr sending ","summary":"\nOverview\nDataWedge on Android has the ability to output captured data via Intents. This article describes how to use the DataWedge Intent output plug-in and the Data Capture API to receive captured data in your native Android application.","url":"/emdk-for-android/3-1/tutorial/tutdatacaptureintent"},{"title":"Data Capture Profile Feature Tutorial","keywords":"## developing emdk android application part guide walk creating [data capture profiles]//mx/data-capture/barcode barcode data [keystroke output]//mx/data-capture/keystroke feature [emdk profiles]//guide/profile-manager ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) information setting overview project > note provide emdksample tutorial studio click [here]//tutorial/tutcreateprojectandroidstudio eclipse [here]//tutorial/tutcreateprojecteclipseadt enabling completed step selecting `emdk api symbol technologies 16` 19` minimum sdk [here]//tutorial/tutenableemdkeclipseadt common projects adding datacapture profile [here]//tutorial/tutaddprofilemanagerfeature add specific manager datacaptureprofile make access similar code features left hand side editor window select list arrow activityselection selected activities enabled automatically activity foreground [img]//images/setup/image051jpg parameter populated field user defined identify required editing programmatically scope empty parameters [img]//images/setup/image055jpg applications package apply [img]//images/setup/image057jpg inside [img]//images/setup/image059jpg [img]//images/setup/image061jpg [img]//images/setup/image063jpg enable change [img]//images/setup/image067jpg [img]//images/setup/image069jpg [img]//images/setup/image071jpg keystroke [img]//images/setup/image073jpg [img]//images/setup/image075jpg [img]//images/setup/image077jpg finish [img]//images/setup/image079jpg close >note >now emdkconfigxml created \\assets folder file definition profiles create inspect reflecting made gui earlier advised manually updated controlled [img]//images/setup/image083jpg [img]//images/setup/image085jpg permissions modify application's manifestxml library set permission [img]//images/setup/image087jpg comsymbolemdkpermissionemdk' xml [img]//images/setup/image089jpg ##adding start references libraries import comsymbolemdk* comsymbolemdkemdkmanageremdklistener extend implement emdklistener eclipse's content assist unimplemented functions `onopened` `onclosed` public class mainactivity extends implements { @override void onclosed // todo auto-generated method stub } onopenedemdkmanager emdkmanager global variables hold instance objects profilemanager //assign private string profilename = //declare variable store object mprofilemanager null oncreate call getemdkmanager initialized checked ready //the returned callback emdkresults results emdkmanagergetemdkmanagergetapplicationcontext //check return status ifresultsstatuscode == status_codefailure //failed [img]//images/setup/image091jpg reference interface trigger event implemented order apis pass assign `emdkmanager` previous steps `mprofilemanager` rest thisemdkmanager //get process emdkmanagergetinstanceemdkmanagerfeature_typeprofile proflemanager install activate built `processprofile` performed action time pressed button chose ifmprofilemanager try{ string[] modifydata string[1] //call processprfoile flag mprofilemanagerprocessprofileprofilename profilemanagerprofile_flagset }catch exception ex{ handle onopened [img]//images/setup/image095jpg override ondestroy release resources protected superondestroy //clean emdkmanagerrelease [img]//images/setup/image093jpg remove default textview res/layout/activity_mainxml edittext ui called edittextbarcode connect device latest runtime usb port >make debug run [img]//images/setup/image103png press scan scanned edit text added [img]//images/setup/image104png ##important programming tips## androidmanifestxml >* include wizard scanner supported considered auto bt_laser1 bt_imager1 bt_camera1 installing deploying fail missing shared datawedge v1712 higher version test profilemanagerprocessprofile learned basics [next tutorial]//tutorial/tutdatacaptureprofilept2 show [intent output]//mx/data-capture/intent output ","summary":"Developing an EMDK for Android Application Part 1\n\nThis guide will walk you through creating an EMDK For Android application that will use Data Capture Profiles to get barcode data into your application using the KeyStroke output feature of EMDK Profiles.","url":"/emdk-for-android/3-1/tutorial/tutdatacaptureprofile"},{"title":"Using Intent Output With DataCapture Profiles","keywords":"## developing emdk android application part tutorial walk adding [intent output]//mx/data-capture/intent support made [developing 1]/tutdatacaptureprofile assume project state end build top follow previous step download source start organized existing features discussed ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) completion information setting overview intents datacapture profile select emdksample package explorer click menu present top-bar manager option window [img]//images/setup/image105jpg datacaptureprofile edit intent list add selected clicking arrow > note field user defined identify output feature required editing specific programmatically scope empty [img]//images/setup/image106jpg configure parameters switch enable action enter comsymbolemdksamplerecvr category androidintentcategorydefault delivery send startactivity basic data formatting configuration [img]//images/setup/image107jpg apply finish close >note >now emdkconfigxml \\assets folder updated ##adding filter open application's manifestxml file [img]//images/setup/image211jpg make application'smanifestxml parameter activity settings singletask mode xml androidlaunchmode=singletask lines receive [img]//images/setup/image108jpg >* match code imports program import androidcontentintent androidwidgettextview [img]//images/setup/image109jpg function processing //this responsible private void handledecodedataintent { } [img]//images/setup/image110jpg oncreate check //in case launched datawedge plug-in = getintent handledecodedatai [img]//images/setup/image112jpg overide onnewintent handle incoming //we override method @override public onnewintentintent [img]//images/setup/image111jpg textview ui called textviewbarcode inside res/layout/activity_mainxml [img]//images/setup/image113jpg global variable //declare store null [img]//images/setup/image114jpg //get findviewbyidridtextviewbarcode [img]//images/setup/image115jpg handledecodedata confirm meant //check igetactioncontentequalscomsymbolemdksamplerecvr [img]//images/setup/image116jpg barcode string igetstringextracommotorolasolutionsemdkdatawedgesource scanner ifsourceequalsignorecasescanner [img]//images/setup/image117jpg retrieve igetstringextracommotorolasolutionsemdkdatawedgedata_string received ifdata && datalength [img]//images/setup/image118jpg populate revived //display text view textviewbarcodesettextdata + [img]//images/setup/image119jpg connect device latest runtime usb port >make debug run [img]//images/setup/image120png press trigger button scan scanned populated keystroke [img]//images/setup/image121png [next tutorial]/tutdatacaptureprofilept3 show multiple capture profiles handled activities ","summary":"Developing an EMDK for Android Application Part 2\n\nThis tutorial will walk you through adding Intent Output support to the EMDK For Android application you made using Developing an EMDK for Android Application Part 1.","url":"/emdk-for-android/3-1/tutorial/tutdatacaptureprofilePt2"},{"title":"Using Multiple Data Capture Profiles","keywords":"## developing emdk android application part guide walk adding msr support multiple profiles made [developing 2]/tutdatacaptureprofilept2 tutorial add complexity screen data capture profile ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) completion 1]/tutdatacaptureprofile information setting [setup]//guide/setup ##adding activity start defining activate listens select emdksample project click create msractivity completed listen display user msrcompletedactivity ##updating main update mainactivity button launch activity_mainxml package explorer eclipse/android studio opening xml [img]//images/setup/image129jpg mainactivityjava [img]//images/setup/image130jpg imports import androidwidgetbutton androidviewview androidviewviewonclicklistener [img]//images/setup/image131jpg declare variable inside store buttonmsr //declare private = null [img]//images/setup/image132jpg oncreate reference [img]//images/setup/image133jpg onclicklistener //add buttonmsrsetonclicklistenerbuttonmsronclick [img]//images/setup/image134jpg //onclicklistener buttonmsronclick { public void onclickview } [img]//images/setup/image135jpg code onclick //launch intent myintent intentmainactivitythis msractivityclass startactivitymyintent [img]//images/setup/image136jpg ##creating ui activity_msrxml remove default textview [img]//images/setup/image138jpg send startactivity menu present top-bar manager option window [img]//images/setup/image139jpg [img]//images/setup/image140jpg provide datacaptureprofilemsr > note make access similar [img]//images/setup/image141jpg activityselection list features selected arrow field defined identify feature required editing specific programmatically scope empty [img]//images/setup/image142jpg selection [img]//images/setup/image143jpg enter comsymbolemdksample apply [img]//images/setup/image144jpg [img]//images/setup/image145jpg input [img]//images/setup/image146jpg change enable [img]//images/setup/image147jpg [img]//images/setup/image148jpg configure parameters switch output action comsymbolemdksamplerecvrmsr category androidintentcategorydefault delivery basic formatting configuration [img]//images/setup/image149jpg finish [img]//images/setup/image150jpg close >note >now emdkconfigxml file \\assets folder updated filter manifest open application's manifestxml [img]//images/setup/image151jpg comsymbolemdksamplemsrcompletedactivity revive [img]//images/setup/image152jpg >* match ##registering register eclipse [img]//images/setup/image153jpg hold //assign handling string profilenamemsr [img]//images/setup/image154jpg onopened //call processprfoile results mprofilemanagerprocessprofileprofilenamemsr profilemanagerprofile_flagset modifydata ifresultsstatuscode == status_codefailure //failed set [img]//images/setup/image155jpg [img]//images/setup/image157jpg ##handling intents capturing displaying result msrcompletedactivityjava [img]//images/setup/image158jpg androidcontentintent androidwidgettextview [img]//images/setup/image159jpg function processing //this responsible handledecodedataintent [img]//images/setup/image160jpg check //in case launched datawedge plug-in getintent handledecodedatai [img]//images/setup/image161jpg overide onnewintent handle incoming //we override method @override onnewintentintent [img]//images/setup/image162jpg global textviewmsrdata [img]//images/setup/image163jpg //get textviewbarcode findviewbyidridtextviewmsrdata [img]//images/setup/image164jpg handledecodedata confirm meant //check igetactioncontentequalscomsymbolemdksamplerecvrmsr [img]//images/setup/image165jpg source igetstringextracommotorolasolutionsemdkdatawedgesource ifsourceequalsignorecasemsr [img]//images/setup/image166jpg retrieve igetstringextracommotorolasolutionsemdkdatawedgedata_string received ifdata && datalength [img]//images/setup/image167jpg populate revived //display textviewmsrdatasettextdata + [img]//images/setup/image168jpg ##running lastly run test connect device latest runtime usb port >make debug [img]//images/setup/image169png press trigger scan barcode scanned populated edit text previous keystroke view [img]//images/setup/image170png [img]//images/setup/image171png swipe cad [img]//images/setup/image172png return back card hit [next tutorial]/tutdatacaptureprofilept4 show broadcast starting ","summary":"Developing an EMDK for Android Application Part 3\n\nThis guide will walk you through adding MSR support and multiple profiles to the Android application you made using Developing an EMDK for Android Application Part 2.","url":"/emdk-for-android/3-1/tutorial/tutdatacaptureprofilePt3"},{"title":"Using Broadcast Intent in DataCapture Profiles","keywords":"## developing emdk android application part guide walk adding broadcast intent support made [developing 3]/tutdatacaptureprofilept3 ###prerequisites * java development kit jdk developer tools adt [android Studio](https://developer.android.com/sdk/index.html)/[Eclipse ADT](https://developer.android.com/tools/sdk/eclipse-adt.html)) completion 1]/tutdatacaptureprofile 2]/tutdatacaptureprofilept2 information setting [setup]//guide/setup ##using wizard intents ###adding activity add listening displaying barcode data user select emdksample package explorer eclipse/android studio click create empty broadcastintentactivity ###updating main update mainactivity button launch activity_mainxml opening xml [img]//images/setup/image171jpg mainactivityjava eclipse [img]//images/setup/image172jpg declare variable inside store buttonbroadcastintent //declare private = null [img]//images/setup/image173jpg oncreate reference //get findviewbyidridbuttonbroadcastintent [img]//images/setup/image174jpg onclicklistener buttonmsr //add buttonbroadcastintentsetonclicklistenerbuttonbroadcastintentonclick [img]//images/setup/image175jpg //onclicklistener buttonbroadcastintentonclick { public void onclickview } [img]//images/setup/image176jpg code onclick //launch myintent intentmainactivitythis broadcastintentactivityclass startactivitymyintent [img]//images/setup/image177jpg ###creating ui activity_msrxml remove default textview [img]//images/setup/image179jpg profile capture active send project menu present top-bar manager option window [img]//images/setup/image180jpg [img]//images/setup/image181jpg provide datacaptureprofilebroadcastintent tutorial > note make access similar [img]//images/setup/image182jpg activityselection list features selected arrow field defined identify feature required editing specific programmatically scope [img]//images/setup/image_data_capture_broadcast_activity_selectionjpg selection [img]//images/setup/image143jpg enter comsymbolemdksample apply [img]//images/setup/image144jpg [img]//images/setup/image183jpg [img]//images/setup/image184jpg change scanner input enable [img]//images/setup/image185jpg [img]//images/setup/image186jpg configure parameters switch output action comsymbolemdksamplerecvrbi delivery basic formatting configuration [img]//images/setup/image187jpg finish [img]//images/setup/image188jpg close >note >now emdkconfigxml file \\assets folder updated ###registering register [img]//images/setup/image189jpg hold //assign handling string profilenamebroadcastintent [img]//images/setup/image190jpg onopened //call processprfoile results mprofilemanagerprocessprofileprofilenamebroadcastintent profilemanagerprofile_flagset modifydata ifresultsstatuscode == status_codefailure //failed set [img]//images/setup/image191jpg ###handling newt listen display side broadcastintentactivityjava [img]//images/setup/image192jpg imports import androidcontentbroadcastreceiver androidcontentcontext androidcontentintent androidcontentintentfilter androidwidgettextview [img]//images/setup/image193jpg global textviewdata [img]//images/setup/image194jpg function handle findviewbyidridtextviewdata [img]//images/setup/image195jpg receiver broadcastreceiver emdkreceiver [img]//images/setup/image196jpg override onresume @override protected // todo auto-generated method stub superonresume [img]//images/setup/image197jpg onpause superonpause [img]//images/setup/image198jpg filter //create intentfilter intentfiltercomsymbolemdksamplerecvrbi [img]//images/setup/image199jpg [img]//images/setup/image200jpg onreceive onreceivecontext context [img]//images/setup/image201jpg check coming source intentgetstringextracommotorolasolutionsemdkdatawedgesource //check ifsourceequalsignorecasescanner{ [img]//images/setup/image202jpg intentgetstringextracommotorolasolutionsemdkdatawedgedata_string received ifdata && datalength 0{ [img]//images/setup/image203jpg //display text view textviewdatasettextdata + [img]//images/setup/image204jpg //register thisregisterreceiveremdkreceiver [img]//images/setup/image205jpg unregister [img]//images/setup/image206jpg ###running application### lastly run test connect device latest runtime usb port >make debug [img]//images/setup/image207png press trigger scan [img]//images/setup/image208png scanned populated edit previous keystroke datawedge [img]//images/setup/image209png [img]//images/setup/image210png back rerun screen msr [img]//images/setup/image171png swipe cad [img]//images/setup/image172png return card hit ","summary":"Developing an EMDK for Android Application Part 4\n\nThis guide will walk you through adding broadcast intent support to the Android application you made using Developing an EMDK for Android Application Part 3.","url":"/emdk-for-android/3-1/tutorial/tutdatacaptureprofilePt4"}]