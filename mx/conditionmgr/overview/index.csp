
The Condition Manager allows an administrator to check for one or more conditions on a device before taking some action or checking for additional conditions. This can be useful for verifying that a device meets one or more requirements (i.e. "Must be an MC40") before attempting "risky" operations such as OS upgrades, the failure of which can render a device unusable, severely limited or otherwise in need of service. 

Each tested condition represents an instance of ConditionMgr, independent of all others. Tested conditions are either met or not met, and indicate the condition of the device at the time of the test (i.e. "Is there a valid IP address?"). Top-level conditions can test for Boolean, Integer or String data, but ultimately must result in a Boolean (true/false) value (i.e. "Does the Device Model field contain the 'MC40' string?"). 

When a condition is not met, ConditionMgr can optionally re-check the condition, wait for changes in a condition and/or return meaningful failure messages about a condition, allowing the administrator to attempt a remedy, perform other actions or simply stop. When used in conjunction with the processing rules of [XML Manager](../xmlmgr), ConditionMgr can be used to create intricate sets of conditions that can be used to control flow of execution in sophisticated ways, allowing rich and adaptive administrative tasks to be described.

### Main Functionality

* Validate a condition described in the input XML
* Present and consume the status of a validated condition
* Repeat a validation attempt a specified number of times 
* Wait between tests of a condition for a specified period of time 
* Create custom messages to display when a test meets or does not meet a condition
* Verify that a valid IP address exists on a device 
* Check the battery level of a device
* Check for the presence of a file
* Validate a device model (i.e. "TC70"), installed OS or other string on the device
* Suppress display of error messages

